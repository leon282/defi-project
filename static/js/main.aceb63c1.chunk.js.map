{"version":3,"sources":["utils/getRpcUrl.js","utils/providers.js","constants/network.js","hooks/useActiveWeb3React.js","constants/contracts.js","utils/addressHelpers.js","store/slices/user-slice/hooks/helpers.js","constants/tokens.js","constants/pools.js","utils/contractHelpers.js","utils/set-all.js","store/slices/app-slice.js","components/PageLoader/index.js","assets/images/HavenLogo.png","assets/images/SafeHavenTextLogo.png","assets/icons/drawer1.svg","assets/icons/drawer2.svg","utils/bigNumber.js","constants/index.js","utils/wallet.js","utils/web3React.js","components/Toast/types.js","components/Toast/Toast.js","components/Toast/ToastContainer.js","utils/index.js","utils/truncateHash.js","components/Toast/DescriptionWithTx.js","contexts/ToastsContext/Provider.js","hooks/useToast.js","hooks/useAuth.js","constants/localization/languages.js","contexts/Localization/helpers.js","contexts/Localization/Provider.js","contexts/Localization/useTranslation.js","components/Header/connect-button/index.js","components/Header/index.js","assets/icons/github.svg","assets/icons/twitter.svg","assets/icons/telegram.svg","assets/icons/discord.svg","components/Drawer/drawer-content/social.js","assets/icons/stake.svg","assets/icons/Dashboard.png","assets/icons/SafeFarms.png","assets/icons/Farms.png","assets/icons/Stake.png","assets/icons/Earn.png","assets/icons/SafePad.png","assets/icons/referral.svg","assets/icons/swap.svg","components/Drawer/drawer-content/index.js","components/Drawer/index.js","components/Drawer/mobile-drawer.js","assets/images/simple-light-blue-background.jpg","components/ViewBase/index.js","components/Layout/Flex.js","components/Layout/Container.js","components/Layout/Page.js","constants/stake.js","contexts/RefreshContext.js","hooks/useRefresh.js","utils/multicall.js","store/slices/stake-slice/fetchPublicStakeData.js","store/slices/stake-slice/fetchStake.js","store/slices/stake-slice/fetchStakes.js","store/slices/stake-slice/fetchStakeUser.js","utils/farmsPriceHelpers.js","store/slices/farms-slice/fetchFarmsPrices.js","utils/apr.js","store/slices/stake-slice/index.js","store/slices/stake-slice/hooks.js","hooks/useIntersectionObserver.js","utils/formatBalance.js","utils/latinise.js","store/slices/user-slice/actions.js","store/slices/user-slice/hooks/index.js","components/PageHeader/index.js","components/Loading/index.js","components/ExpandableSectionButton/index.js","views/Stake/components/StakeCard/DetailsSection.js","components/Tags/index.js","views/Stake/components/StakeCard/CardHeading.js","abi/erc20.js","hooks/useContract.js","components/ConnectWalletButton/index.js","components/Balance/index.js","components/Modal/Spacer.js","components/Modal/ModalActions.js","components/Modal/ModalInput.js","utils/compoundApyHelpers.js","components/RoiCalculatorModal/index.js","views/Stake/components/DepositModal.js","views/Stake/components/WithdrawModal.js","store/global/actions.js","store/slices/user-slice/reducer.js","constants/farms.js","store/slices/farms-slice/fetchPublicFarmData.js","store/slices/farms-slice/fetchFarm.js","store/slices/farms-slice/fetchFarms.js","store/slices/farms-slice/fetchFarmUser.js","store/slices/farms-slice/index.js","store/slices/block-slice/index.js","store/slices/multicall-slice/actions.js","store/slices/multicall-slice/index.js","store/slices/swap-slice/actions.js","store/slices/swap-slice/reducer.js","constants/lists.js","store/slices/lists-slice/actions.js","store/slices/lists-slice/reducer.js","store/slices/transactions-slice/actions.js","store/slices/transactions-slice/reducer.js","store/slices/pools-slice/fetchPools.js","store/slices/pools-slice/fetchPoolsUser.js","store/slices/pools-slice/helpers.js","store/slices/pools-slice/index.js","constants/iso.js","store/slices/iso-slice/fetchPublicIsoData.js","store/slices/iso-slice/fetchIso.js","store/slices/iso-slice/fetchIsos.js","store/slices/iso-slice/fetchIsoUser.js","store/slices/iso-slice/index.js","store/store.js","utils/getGasPrice.js","utils/calls/farms.js","views/Stake/hooks/useUnstakeStakes.js","views/Stake/hooks/useStakes.js","views/Stake/components/StakeCard/StakeAction.js","views/Stake/hooks/useHarvestStake.js","views/Stake/components/StakeCard/HarvestAction.js","hooks/useCallWithGasPrice.js","views/Stake/hooks/useApproveStake.js","views/Stake/components/StakeCard/CardActionsContainer.js","views/Stake/components/StakeCard/ApyButton.js","views/Stake/components/StakeCard/StakeCard.js","hooks/useDelayedUnmount.js","views/Stake/components/StakeTable/Apr.js","views/Stake/components/StakeTable/Stake.js","views/Stake/components/StakeTable/Earned.js","views/Stake/components/StakeTable/Details.js","views/Stake/components/StakeTable/Multiplier.js","views/Stake/components/StakeTable/Liquidity.js","views/Stake/components/StakeTable/Actions/styles.js","views/Stake/components/StakeTable/Actions/HarvestAction.js","views/Stake/components/StakeTable/Actions/StakedAction.js","views/Stake/components/StakeTable/Actions/ActionPanel.js","views/Stake/components/StakeTable/CellLayout.js","views/Stake/components/types.js","views/Stake/components/StakeTable/Row.js","views/Stake/components/StakeTable/StakeTable.js","views/Stake/components/StakeTabButtons/index.js","views/Stake/components/ToggleView/ToggleView.js","views/Stake/index.js","views/Dashboard/index.js","views/404/index.js","store/slices/farms-slice/hooks.js","utils/getLiquidityUrlPathParts.js","views/Farms/components/FarmCard/DetailsSection.js","components/TokenImage/index.js","views/Farms/components/FarmCard/CardHeading.js","views/Farms/components/DepositModal.js","views/Farms/components/WithdrawModal.js","views/Farms/hooks/useUnstakeFarms.js","views/Farms/hooks/useStakeFarms.js","views/Farms/components/FarmCard/StakeAction.js","views/Farms/hooks/useHarvestFarm.js","views/Farms/components/FarmCard/HarvestAction.js","views/Farms/hooks/useApproveFarm.js","views/Farms/components/FarmCard/CardActionsContainer.js","views/Farms/components/FarmCard/ApyButton.js","views/Farms/components/FarmCard/FarmCard.js","views/Farms/components/FarmTable/Apr.js","views/Farms/components/FarmTable/Farm.js","views/Farms/components/FarmTable/Earned.js","views/Farms/components/FarmTable/Details.js","views/Farms/components/FarmTable/Multiplier.js","views/Farms/components/FarmTable/Liquidity.js","views/Farms/components/FarmTable/Actions/styles.js","views/Farms/components/FarmTable/Actions/HarvestAction.js","views/Farms/components/FarmTable/Actions/StakedAction.js","views/Farms/components/FarmTable/Actions/ActionPanel.js","views/Farms/components/FarmTable/CellLayout.js","views/Farms/components/types.js","views/Farms/components/FarmTable/Row.js","views/Farms/components/FarmTable/FarmTable.js","views/Farms/components/FarmTabButtons/index.js","views/Farms/components/ToggleView/ToggleView.js","views/Farms/index.js","views/SafeFarms/components/SltHarvestBalance.js","views/SafeFarms/components/SltWalletBalance.js","hooks/useAllEarnings.js","hooks/useFarmsWithBalance.js","views/SafeFarms/hooks/useAllHarvest.js","hooks/useTokenBalance.js","views/SafeFarms/index.js","hooks/useSafeFarms.js","utils/trades.js","hooks/useIsWindowVisible.js","store/slices/block-slice/hooks.js","store/slices/multicall-slice/hooks.js","utils/wrappedCurrency.js","hooks/usePairs.js","store/slices/lists-slice/hooks.js","store/slices/user-slice/hooks/useUserAddedTokens.js","components/SearchModal/filtering.js","hooks/Tokens.js","hooks/Trades.js","constants/swapWarningTokens.js","utils/isZero.js","hooks/useDebounce.js","hooks/ENS/useENS.js","hooks/ENS/useENSName.js","hooks/ENS/useENSAddress.js","components/Layout/Column.js","components/Layout/Row.js","views/Swap/components/AddressInputPanel.js","components/Card/index.js","components/TransactionConfirmationModal/index.js","utils/prices.js","components/QuestionHelper/index.js","views/Swap/components/styleds.js","views/Swap/components/FormattedPriceImpact.js","views/Swap/components/SwapModalFooter.js","utils/contenthashToUri.js","utils/ENS/parseENSAddress.js","utils/uriToHttp.js","hooks/useHttpLocations.js","hooks/ENS/useENSContentHash.js","utils/getTokenLogoURL.js","components/Logo/Logo.js","components/Logo/CurrencyLogo.js","components/Logo/DoubleLogo.js","components/Logo/ListLogo.js","views/Swap/components/SwapModalHeader.js","views/Swap/components/ConfirmSwapModal.js","store/slices/wallet-slice/hooks.js","hooks/usePreviousValue.js","components/SearchModal/CommonBases.js","components/Loader/CircleLoader.js","components/SearchModal/ImportRow.js","components/SearchModal/CurrencyList.js","components/SearchModal/sorting.js","components/SearchModal/CurrencySearch.js","components/SearchModal/ImportToken.js","utils/getTokenList.js","utils/ENS/resolveENSContentHash.js","hooks/useFetchListCallback.js","components/SearchModal/types.js","components/SearchModal/ManageLists.js","components/SearchModal/ManageTokens.js","components/SearchModal/Manage.js","components/SearchModal/ImportList.js","components/SearchModal/CurrencySearchModal.js","components/CurrencyInputPanel/NumericalInput.js","components/CurrencyInputPanel/index.js","views/Swap/components/TradePrice.js","views/Swap/components/ImportTokenWarningModal.js","views/Swap/components/ProgressSteps.js","store/slices/swap-slice/hooks.js","hooks/useParsedQueryString.js","components/Menu/GlobalSettings/TransactionSettings.js","components/Menu/GlobalSettings/ExpertModal.js","components/Menu/GlobalSettings/GasSettings.js","components/Menu/GlobalSettings/SettingsModal.js","components/Menu/GlobalSettings/index.js","store/slices/transactions-slice/hooks.js","components/App/Transactions/Transaction.js","components/App/Transactions/TransactionsModal.js","components/App/Transactions/index.js","components/App/AppHeader.js","components/App/AppBody.js","hooks/useTokenAllowance.js","hooks/useApproveCallback.js","hooks/useTransactionDeadline.js","hooks/useCurrentBlockTimestamp.js","hooks/useSwapCallback.js","hooks/useWrapCallback.js","utils/maxAmountSpend.js","views/Swap/components/SwapWarningModal/SafemoonWarning.js","views/Swap/components/SwapWarningModal/BondlyWarning.js","views/Swap/components/SwapWarningModal/Acknowledgement.js","views/Swap/components/SwapWarningModal/index.js","views/Swap/index.js","views/Swap/components/confirmPriceImpactWithoutFee.js","views/Swap/redirects.js","store/slices/pools-slice/hooks.js","views/Earn/helpers.js","views/Earn/components/PoolCard/AprRow.js","views/Earn/components/PoolCard/StyledCard.js","views/Earn/components/PoolCard/CardFooter/ExpandedFooter.js","views/Earn/components/PoolCard/CardFooter/index.js","views/Earn/components/PoolCard/StyledCardHeader.js","views/Earn/hooks/useApprove.js","views/Earn/components/PoolCard/CardActions/ApprovalAction.js","hooks/useTheme.js","views/Earn/components/PoolCard/Modals/NotEnoughTokensModal.js","views/Earn/components/PoolCard/Modals/PercentageButton.js","views/Earn/hooks/useStakePool.js","views/Earn/hooks/useUnstakePool.js","views/Earn/components/PoolCard/Modals/StakeModal.js","views/Earn/components/PoolCard/CardActions/StakeActions.js","views/Earn/hooks/useHarvestPool.js","views/Earn/components/PoolCard/Modals/CollectModal.js","views/Earn/components/PoolCard/CardActions/HarvestActions.js","views/Earn/components/PoolCard/CardActions/index.js","views/Earn/components/PoolCard/index.js","views/Earn/components/ToggleView/ToggleView.js","views/Earn/components/PoolTabButtons.js","views/Earn/components/PoolsTable/Cells/BaseCell.js","views/Earn/components/PoolsTable/Cells/NameCell.js","views/Earn/components/PoolsTable/Cells/EarningsCell.js","views/Earn/components/PoolsTable/Apr.js","views/Earn/components/PoolsTable/Cells/AprCell.js","views/Earn/components/PoolsTable/Cells/TotalStakedCell.js","views/Earn/components/PoolsTable/Cells/EndsInCell.js","views/Earn/components/PoolsTable/Cells/ExpandActionCell.js","views/Earn/components/PoolsTable/ActionPanel/styles.js","views/Earn/components/PoolsTable/ActionPanel/Harvest.js","views/Earn/components/PoolsTable/ActionPanel/Stake.js","views/Earn/components/PoolsTable/ActionPanel/ActionPanel.js","views/Earn/components/PoolsTable/PoolRow.js","views/Earn/components/PoolsTable/PoolsTable.js","views/Earn/index.js","views/Ifos/components/IsoTabButtons/index.js","views/Ifos/components/Hero.js","views/Ifos/components/IsoCard/IsoCardHeading.js","views/Ifos/components/IsoCard/IsoCardDetails.js","views/Ifos/hooks/useApproveIso.js","views/Ifos/hooks/useHarvestIso.js","views/Ifos/hooks/useAllowanceIso.js","components/Input/Input.js","components/Input/BalanceInput.js","views/Ifos/hooks/useDepositIso.js","views/Ifos/components/IsoCard/ContributeModal.js","views/Ifos/components/IsoCard/IsoCardContribute.js","views/Ifos/components/IsoCard/index.js","views/Ifos/components/IsoCards.js","views/Ifos/CurrentIso.js","views/Ifos/PastIso.js","store/slices/iso-slice/hooks.js","views/Ifos/index.js","views/Referral/components/Divider.js","views/Referral/components/Card.js","views/Referral/components/LinkCard.js","views/Referral/components/Hero.js","views/Referral/index.js","hooks/useEagerConnect.js","Root/App.js","Root/index.js","contexts/BlockContext.js","reportWebVitals.js","store/slices/lists-slice/updater.js","hooks/useInterval.js","store/slices/multicall-slice/retry.js","store/slices/multicall-slice/updater.js","store/slices/multicall-slice/chunkArray.js","store/slices/transactions-slice/updater.js","index.js"],"names":["nodes","getNodeUrl","sample","RPC_URL","getRpcUrl","simpleRpcProvider","ethers","providers","JsonRpcProvider","DEFAULT_CHAINID","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","useState","provider","setprovider","useEffect","current","contracts","havenToken","dividendDistributor","sltToken","safeChef","havenLayerReferral","multiCall","safeStake","havenISO","getAddress","address","ChainId","MAINNET","getHavenTokenAddress","addresses","getDividendDistributorAddress","getsltTokenAddress","getSafeChefAddress","getHavenISOAdress","getMulticallAddress","serializeToken","token","decimals","symbol","name","projectLink","deserializeToken","serializedToken","Token","GAS_PRICE","GAS_PRICE_GWEI","default","parseUnits","toString","fast","instant","testnet","TESTNET","mainnetTokens","wbnb","bnb","haven","slt","cake","tlos","stephero","qbt","cvp","bscdefi","busd","dai","usdt","btcb","ust","eth","usdc","kalm","hotcross","belt","watch","bry","wsote","helmet","ten","ditto","blink","syrup","pha","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","ramp","bfi","dexe","bel","tpt","xmark","bmxx","iotx","bor","bopen","dodo","swingby","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","front","btcst","bscx","balbt","asr","atm","og","reef","juv","psg","vai","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","ltc","ada","band","dot","eos","link","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","pots","gnt","rusd","bp","sfund","naos","testnetTokens","tokens","parseInt","Object","keys","reduce","accum","key","serializeTokens","unserializedTokens","serializedTokens","pools","sousId","stakingToken","earningToken","contractAddress","harvest","sortOrder","tokenPerBlock","isFinished","getContract","abi","signer","signerOrProvider","Contract","getDividendDistributorContract","dividendDistributorABI","getsltTokenContract","sltTokenABI","getSafeChefContract","safeChefABI","getHavenLayerReferralContract","havenLayerReferralABI","getBep20Contract","bep20Abi","getMulticallContract","MultiCallAbi","getSouschefV2Contract","id","config","poolsConfig","find","pool","sousChefV2","setAll","state","properties","forEach","loadAppDetails","createAsyncThunk","a","account","wrappedBNBContract","WrappedBNBContractABI","BUSDContract","BusdContractABI","havenContract","havenTokenABI","dividendDistributorContract","sltTokenContract","balanceOf","Math","pow","WBNBbalanceOfLP","HavenBalanceOfLP","getCirculatingSupply","circulatingSupply","totalSupply","slttotalSupply","priceOfSLTInBNB","priceOfCoinInBNB","priceOfBNB","priceOfOneHaven","priceOfOneSLT","isNaN","marketCap","sltmarketCap","liquidityPoolInDollars","balanceOfUser","utils","formatEther","getTotalFee","totalBNBFee","unpaidEarnings","getUnpaidEarnings","buyTaxFee","totalRealised","shares","burntTokens","sltburntTokens","taxSaleInPercentage","buyTaxInPercentage","totalDistributed","getBalance","balanceOfContract","changeDrawer","createAction","appSlice","createSlice","initialState","loading","isDrawerSmall","reducers","fetchAppSuccess","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","error","console","log","actions","createSelector","app","Loader","className","CircularProgress","size","color","BIG_ZERO","BigNumber","BIG_ONE","BIG_TEN","ROUTER_ADDRESS","BASE_BSC_SCAN_URLS","BASE_URL","BASE_BSC_SCAN_URL","BLOCKS_PER_YEAR","DEFAULT_TOKEN_DECIMAL","ZERO_PERCENT","Percent","ONE_HUNDRED_PERCENT","ONE_BIPS","JSBI","BigInt","BETTER_TRADE_LESS_HOPS_THRESHOLD","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","SUGGESTED_BASES","ADDITIONAL_BASES","CUSTOM_BASES","BASES_TO_CHECK_TRADES_AGAINST","MIN_BNB","exponentiate","BLOCKED_ADDRESSES","setupNetwork","window","ethereum","request","method","params","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","registerToken","tokenAddress","tokenSymbol","tokenDecimals","type","options","image","tokenAdded","rpcUrl","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","ConnectorNames","Injected","WalletConnect","BSC","types","alertVariants","INFO","SUCCESS","DANGER","WARNING","styled","div","theme","mediaQueries","sm","isAddress","value","getBscScanLink","data","calculateGasMargin","mul","from","add","ABI","AddressZero","Error","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","IUniswapV2Router02ABI","truncateHash","startLength","endLength","substring","length","DescriptionWithTx","txHash","children","as","external","href","ToastsContext","createContext","undefined","ToastsProvider","toasts","setToasts","toast","useCallback","title","description","prevToasts","kebabCase","currentToasts","filter","prevToast","Provider","clear","remove","toastError","toastTypes","toastInfo","toastSuccess","toastWarning","useToast","toastContext","useContext","useAuth","dispatch","useDispatch","activate","deactivate","login","connectorID","connector","UnsupportedChainIdError","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","message","logout","getItem","close","EN","locale","language","code","languages","LS_KEY","fetchLocale","getLanguageCodeFromLS","isFetching","currentLanguage","languageMap","Map","set","LanguageContext","LanguageProvider","codeFromStorage","setState","fetchInitialLocales","enLocale","get","currentLocale","prevState","setLanguage","has","setItem","translate","translatedText","match","interpolatedText","dataKey","templateKey","RegExp","replace","t","useTranslation","languageContext","ConnectMenu","onPresentConnectModal","useWalletModal","buttonText","onClick","useStyles","makeStyles","appBar","justifyContent","alignItems","background","backdropFilter","zIndex","width","Header","handleDrawerToggle","mobileOpen","classes","isSmallerScreen","useMediaQuery","AppBar","position","elevation","Toolbar","disableGutters","variant","src","Drawer1Icon","height","alt","Drawer2Icon","Link","SafeHavenIcon","SafeHavenTextLogo","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgGithub","_ref","svgRef","titleId","props","xmlns","xmlnsXlink","viewBox","ref","style","stroke","fillRule","fill","fillOpacity","d","ForwardRef","SvgTwitter","SvgTelegram","SvgDiscord","Social","flexDirection","SvgIcon","component","GitHub","Twitter","Telegram","Discord","NavContent","isActive","checkPage","location","page","currentPath","pathname","minWidth","paddingTop","NavLink","to","classnames","active","DashboardIcon","marginRight","SafeFarmIcon","marginLeft","FarmsIcon","StakeIcon","EarnIcon","SafePadIcon","SwapIcon","ReferralIcon","DocsIcon","drawerPaper","borderRight","Sidebar","Drawer","anchor","paper","marginTop","NavDrawer","open","onClose","ModalProps","keepMounted","drawer","flexShrink","content","transition","overflow","contentShift","contentMobile","ViewBase","setMobileOpen","backgroundImage","Background","FlexLayout","Container","px","maxWidth","StyledPage","lg","Page","farms","pid","stakeSymbol","lpAddresses","quoteToken","strat","isStatus","RefreshContext","React","slow","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","interval","setInterval","prev","clearInterval","useRefresh","fastRefresh","slowRefresh","multicall","calls","multi","itf","Interface","calldata","map","toLowerCase","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","fetchStake","stake","lpAddress","erc20","tokenBalance","tokenBalanceLP","quoteTokenBalanceLP","quoteTokenDecimals","strategyChefABI","ratio","ratioNumber","parseFloat","stakeTokenRatio","tokenAmountTotal","tokenAmountContract","quoteTokenAmountTotal","tokenAmountTotalInContract","tokenAmountMc","times","stakedTotalToken","masterChefABI","safechefABI","info","totalAllocPoint","earningsPerBlock","allocPoint","_hex","poolWeight","lastRewardBlock","accEarningsPerShare","stratAddress","depositFeeBP","isWithdrawFee","toJSON","tokenPriceVsQuote","multiplier","isCommunity","fetchPublicStakeData","stakePublicData","fetchStakes","stakesToFetch","Promise","all","stakeConfig","serializedStake","fetchStakeUserAllowances","safeChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchStakeUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchStakeUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchStakeUserEarnings","rawEarnings","parsedEarnings","earnings","fetchStakeWithdrawFee","fees","withdrawFee","fee","fetchStakeUserLastDepositTime","rawLastDepositTimes","lastDepositTimes","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","farm","some","getFarmFromTokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","tokenPriceBusd","quoteTokenPriceBusd","getPoolApr","stakingTokenPrice","rewardTokenPrice","totalStaked","totalAmount","totalRewardPricePerYear","totalStakingTokenInPool","apr","isFinite","toNumber","stakesConfig","userData","allowance","userDataLoaded","fetchStakesPublicDataAsync","pids","includes","stakes","stakesWithPrices","stakesWithoutHelperLps","tvlStakes","tvlPriceBusd","stakesWithApr","totalLiquidity","liquidity","fetchStakeUserDataAsync","userStakeAllowances","userStakeTokenBalances","userStakedBalances","userStakeEarnings","userFarmWithdrawFee","lastDepositTime","stakeAllowance","index","stakesSlice","liveStakeData","stakeData","userDataEl","findIndex","deserializeStakeUserData","deserializeStake","dual","tokenTotalSupply","usePollStakesWithUserData","stakeToFetch","useStakes","useSelector","deserializedStakesData","useStakeUser","f","useStakeFromPid","useIntersectionObserver","observerRef","intersectionObserverRef","observerIsSet","setObserverIsSet","isIntersecting","setIsIntersecting","IntersectionObserver","entry","rootMargin","threshold","observe","disconnect","getDecimalAmount","amount","getBalanceAmount","getBalanceNumber","balance","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","minimumFractionDigits","maximumFractionDigits","toLocaleString","displayNumber","toPrecision","Latinise","latin_map","τ","Τ","latinise","input","x","FarmStakedOnly","StakeStakedOnly","ViewMode","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","updateUserStakeStakedOnly","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserStakesViewMode","updateUserPredictionAcceptedRisk","updateUserPredictionChartDisclaimerShow","updateUserExpertModeAcknowledgementShow","updateUserUsernameVisibility","updateGasPrice","addWatchlistToken","addWatchlistPool","useAudioModeManager","audioPlay","user","toggleSetAudioMode","useExpertModeManager","expertMode","userExpertMode","toggleSetExpertMode","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","slippage","useGasPrice","userGas","gasPrice","PageHeader","Loading","ExpandableSectionButton","expanded","role","bold","defaultProps","DetailsSection","bscScanAddress","removed","infoAddress","totalValueFormatted","stakeLabel","getTokenLink","CoreTag","outline","startIcon","mr","DualTag","ManualPoolTag","CardHeading","isCommunityStake","mb","getImageUrlFromToken","split","ml","ERC20_INTERFACE","ERC20_ABI","ERC20_BYTES32_ABI","useSafeChef","useMemo","useERC20","useIso","isoABI","useContract","withSignerIfPossible","useMulticallContract","multiCallAbi","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useTokenContract","useSafeStake","safeStakeABI","getSafeStakeContract","ConnectWalletButton","Balance","isDisabled","unit","prefix","previousValue","start","end","suffix","duration","separator","StyledSpacer","Spacer","s","spacing","ThemeContext","StyledModalActions","StyledModalAction","ModalActions","l","Children","toArray","child","StyledTokenInput","isWarning","shadows","warning","inset","StyledInput","Input","xs","StyledErrorMessage","Text","ModalInput","max","onChange","onSelectMax","usdToStake","addLiquidityUrl","inputTitle","isBalanceZero","pl","fontSize","remainder","mod","formatUnits","sub","formatBigNumber","pattern","inputMode","step","min","placeholder","scale","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","earningTokenPrice","compoundFrequency","performanceFee","timesCompounded","aprAsDecimal","roundingDecimalsNew","round","days","daysAsDecimalOfYear","principal","interestEarned","calculateSltEarnedPerThousandDollars","numberOfDays","apyAsDecimal","farmApr","finalAmount","apyModalRoi","amountEarned","amountInvested","StyledModal","Modal","ScrollableContainer","RoiCalculatorModal","onDismiss","onBack","linkLabel","linkHref","oneThousandDollarsWorthOfSlt","sltEarnedPerThousand1D","sltEarnedPerThousand7D","sltEarnedPerThousand30D","sltEarnedPerThousand365D","headerBackground","mt","AnnualRoiContainer","Flex","AnnualRoiDisplay","DepositModal","onConfirm","tokenName","stakePrice","sltPrice","val","setVal","pendingTx","setPendingTx","showRoiCalculator","setShowRoiCalculator","fullBalance","stakeTokensToStake","fullBalanceNumber","interestBreakdown","annualRoi","formattedAnnualRoi","gt","handleChange","e","currentTarget","validity","valid","handleSelectMax","disabled","eq","alignSelf","WithdrawModal","valNumber","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","userDeadline","pairs","timestamp","isDark","userFarmStakedOnly","userPoolStakedOnly","userStakeStakedOnly","userPoolsViewMode","userFarmsViewMode","userStakesViewMode","userPredictionAcceptedRisk","userPredictionChartDisclaimerShow","userExpertModeAcknowledgementShow","userUsernameVisibility","watchlistTokens","watchlistPools","createReducer","lastUpdateVersionTimestamp","serializedPair","token0","token1","tokenAAddress","tokenBAddress","userAcceptedRisk","userShowDisclaimer","tokenWatchlist","newTokens","poolsWatchlist","newPools","lpSymbol","fetchFarm","wantAddress","lpABI","totalLPsupply","lpTokenRatio","quoteTokenAmountMc","lpTotalInQuoteToken","lpTotalSupply","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","serializedFarm","fetchFarmUserAllowances","fetchFarmUserTokenBalances","fetchFarmUserStakedBalances","fetchFarmUserEarnings","fetchFarmWithdrawFee","fetchFarmUserLastDepositTime","farmsConfig","fetchFarmsPublicDataAsync","sltTokenPrice","farmsWithApr","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userFarmEarnings","farmAllowance","farmsSlice","liveFarmData","farmData","blockSlice","currentBlock","initialBlock","setBlock","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","test","callData","parseCallKey","callKey","pcs","addMulticallListeners","removeMulticallListeners","fetchingMulticallResults","errorFetchingMulticallResults","updateMulticallResults","callResults","blocksPerFetch","listeners","callListeners","fetchingBlockNumber","blockNumber","results","Field","selectCurrency","switchCurrencies","typeInput","replaceSwapState","setRecipient","independentField","typedValue","currencyId","recipient","field","inputCurrencyId","outputCurrencyId","otherField","UNSUPPORTED_LIST_URLS","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","addList","removeList","enableList","disableList","acceptListUpdate","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","byUrl","concat","memo","listUrl","activeListUrls","requestId","url","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","push","errorMessage","u","lastInitializedSet","Set","newListOfListsSet","addTransaction","clearAllTransactions","finalizeTransaction","checkedTransaction","now","transactions","hash","approval","summary","claim","txs","addedTime","tx","lastCheckedBlockNumber","receipt","confirmedTime","fetchPoolsBlockLimits","callsStartBlock","poolConfig","callsEndBlock","callsRewardTokenPerBlock","callsDepositFee","starts","ends","rewardTokenPerBlock","depositFee","sltPoolConfig","startBlock","endBlock","fetchPoolsTotalStaking","callsPools","sltABI","PoolsTotalStaked","p","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","safeChefContract","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingReward","fetchUserWithdrawFee","withdrawFeeBP","withdrawFees","transformUserData","stakingTokenBalance","transformPool","rest","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","setPoolsUserData","userPoolData","ifos","tokenLabel","fetchIso","iso","viewPoolInformation","viewPoolTaxRateOverflow","hasTax","hasWhitelist","isStopDeposit","limitPerUserInLP","maxCommitRatio","minHavenToJoin","offeringAmountPool","raisingAmountPool","sumTaxesOverflow","totalAmountPool","totalCommittedPercent","getCommittedValue","totalLPCommitted","fetchPublicIsoData","isoPublicData","fetchIsos","isoToFetch","isoConfig","serializedIso","fetchIsoUserReferralsCount","referralsCount","fetchIsoUserInfo","viewUserInfo","userAmounts","userClaimed","fetchUserHavenAmount","userHavenAmount","isosConfig","claimed","userhavenAmount","fetchIsosPublicDataAsync","isosToFetch","isos","fetchIsoUserDataAsync","userIsoReferralsCount","userIsoInfo","isosSlice","liveIsoData","isoData","store","configureStore","reducer","appReducer","userReducer","farmsReducer","stakeReducer","block","blockReducer","multicallReducer","swap","swapReducer","lists","listsReducer","transactionsReducer","poolsReducer","isoReducer","middleware","getDefaultMiddleware","serializableCheck","getGasPrice","getState","stakeFarm","deposit","wait","status","unstakeFarm","withdraw","harvestFarm","safePad","isoContract","depositPool","useUnstakeFarms","handleUnstake","onUnstake","useStakeFarms","handleStake","onStake","StakeAction","useUnstakeStakes","useLocation","displayBalance","stakedBalanceBigNumber","lt","ROUND_DOWN","useModal","onPresentDeposit","onPresentWithdraw","item","useHarvestFarm","farmPid","onReward","HarvestAction","useHarvestStake","rawEarningsBalance","earningsBusd","multipliedBy","useCallWithGasPrice","callWithGasPrice","contract","methodName","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","useApproveStake","stakeContract","onApprove","constants","MaxUint256","CardActions","requestedApproval","setRequestedApproval","isApproved","isGreaterThan","handleApprove","textTransform","pr","ApyButton","onPresentApyModal","event","stopPropagation","StakeCard","showExpandableSection","setShowExpandableSection","toUpperCase","earnLabel","isPromotedStake","display","CardActionsContainer","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","AprWrapper","Apr","originalValue","hideButton","TokenWrapper","Stake","label","rawStakedBalance","Amount","span","Earned","userDataReady","earned","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isDesktop","useMatchBreakpoints","ReferenceElement","MultiplierWrapper","Multiplier","displayMultiplier","tooltipContent","my","useTooltip","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","LiquidityWrapper","Liquidity","displayLiquidity","Number","ActionContainer","xl","ActionTitles","ActionContent","earningsBigNumber","isZero","IconButtonWrapper","Staked","expandAnimation","keyframes","collapseAnimation","css","StyledLinkExternal","LinkExternal","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","bsc","StakedAction","Label","ContentContainer","CellLayout","MobileColumnSchema","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","StakeMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","toggleActionPanel","isMobile","tableSchema","columnNames","column","columnIndex","createElement","colSpan","card","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","StakeTable","tableWrapperEl","columns","rows","useTable","sortColumn","row","original","scrollIntoView","behavior","StakeTabButtons","activeIndex","hasStakeInFinishedStakes","useRouteMatch","show","ToggleView","viewMode","onToggle","handleToggle","mode","ControlContainer","ToggleWrapper","ViewControls","Stakes","path","stakesData","query","useUserStakesViewMode","setViewMode","chosenStakesLength","isInactive","setUserStakeStakedOnly","stakedOnly","useUserStakeStakedOnly","setStakedOnly","activeStakes","inactiveStakes","stakedOnlyStakes","stakedInactiveStakes","stakesList","stakesToDisplay","stakesToDisplayWithAPR","lowercaseQuery","numberOfStakesVisible","setNumberOfStakesVisible","chosenStakesMemoized","chosenStakes","slice","stakesCurrentlyVisible","rowData","checked","sort","b","margin","exact","renderContent","web3","Web3","HttpProvider","Dashboard","isAppLoading","volume","setVolume","usersReward","setUsersReward","claimBNB","alert","methods","claimDividend","encodeABI","Data","Txdetail","toHex","toWei","gasLimit","then","ethFlag","getTransactionReceipt","Zoom","in","Grid","container","md","Intl","NumberFormat","format","percentageOfUserBalance","NotFound","deserializeFarmUserData","deserializeFarm","usePollFarmsWithUserData","farmToFetch","useFarms","deserializedFarmsData","useFarmFromPid","useFarmUser","useLpTokenPrice","useFarmFromLpSymbol","farmTokenPriceInUsd","useBusdPriceFromPid","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","getLiquidityUrlPathParts","quoteTokenAddress","wBnbAddress","secondPart","lpLabel","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","isCommunityFarm","lpPrice","lpTokensToStake","useApproveFarm","lpContract","FarmCard","liquidityUrlPathParts","isPromotedFarm","Farm","FarmMobileCell","FarmTable","FarmTabButtons","hasStakeInFinishedFarms","Farms","farmsLP","useUserFarmsViewMode","chosenFarmsLength","setUserFarmStakedOnly","useUserFarmStakedOnly","activeFarms","inactiveFarms","stakedOnlyFarms","stakedInactiveFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","numberOfFarmsVisible","setNumberOfFarmsVisible","chosenFarmsMemoized","chosenFarms","farmsCurrentlyVisible","SltHarvestBalance","earningsSum","lineHeight","SltWalletBalance","sltBalance","useAllEarnings","balances","setBalance","fetchAllBalances","farmsCalls","stakesCalls","useFarmsWithBalance","farmsWithBalances","setFarmsWithBalances","stakesLP","fetchBalances","farmsRawResults","farmsResults","stakesrawResults","stakesResults","useAllHarvest","farmPids","harvestPromises","FetchStatus","useTokenBalance","NOT_FETCHED","FAILED","fetchStatus","balanceState","setBalanceState","fetchBalance","SafeFarms","allEarnings","tvlData","tvldata","setTVLData","fetchAllData","farmTVL","stakeTVL","tvl","useTVL","aprs","setAprs","farmAprs","stakeAprs","useAprs","tvlValue","partial_sum","farmsWithBalance","earning","balancesWithValue","balanceType","farmWithBalance","harvestAllFarms","HavenLogo","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","currencyEquals","inputAmount","currency","outputAmount","equalTo","executionPrice","lessThan","raw","multiply","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","isVisible","setIsVisible","handleVisibilityChange","useBlock","isMethodArg","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","NEVER_RELOAD","Infinity","useCallsData","serializedCallKeys","JSON","stringify","c","callKeys","parse","result","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useMultipleContractSingleData","callInputs","getFunction","useSingleCallResult","inputs","interface","wrappedCurrency","ETHER","WETH","PAIR_INTERFACE","IUniswapV2PairABI","PairState","usePairs","currencies","currencyA","currencyB","tokenA","tokenB","equals","Pair","reserves","reserve0","reserve1","sortsBefore","TokenAmount","sortByListPriority","urlA","urlB","first","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","logoURI","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tokenMap","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","allTokens","currentUrl","useActiveListUrls","useCombinedActiveList","DEFAULT_TOKEN_LIST","useCombinedInactiveList","allActiveListUrls","useInactiveListUrls","useUserAddedTokens","serializedTokensMap","values","filterTokens","search","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","searchQuery","symbolMatch","exactMatches","symbolSubtrings","trim","useTokensFromMap","includeUserAdded","userAddedTokens","mapWithoutUrls","newMap","tokenMap_","useAllTokens","useAllInactiveTokens","inactiveTokens","activeTokensAddresses","useUnsupportedTokens","UNSUPPORTED_TOKEN_LIST","useIsUserAddedToken","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","useBytes32TokenContract","tokenNameBytes32","symbolBytes32","useCurrency","isBNB","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","flatMap","base","otherBase","allPairs","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","curr","liquidityToken","SwapWarningTokens","hexNumberString","useDebounce","delay","debouncedValue","setDebouncedValue","handler","useENS","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","substr","resolverAddress","resolverAddressResult","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","Column","ColumnCenter","AutoColumn","gap","justify","Box","align","padding","border","borderRadius","RowBetween","AutoRow","RowFixed","InputPanel","ContainerRow","InputContainer","AddressInputPanel","handleInput","withoutSpaces","small","autoComplete","autoCorrect","autoCapitalize","spellCheck","Card","LightGreyCard","GreyCard","Wrapper","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","textAlign","TransactionSubmittedContent","currencyToAdd","strokeWidth","isMetaMask","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","handleDismiss","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","quotient","CurrencyAmount","ether","computeSlippageAdjustedAmounts","allowedSlippage","num","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","invert","toSignificant","QuestionWrapper","QuestionHelper","text","trigger","ArrowWrapper","clickable","ErrorText","severity","StyledBalanceMaxMini","button","TruncatedText","attrs","ellipsis","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","radii","SwapModalFooter","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","slippageAdjustedAmounts","paddingLeft","TradeType","EXACT_INPUT","UTF_8_DECODER","TextDecoder","contenthashToUri","contenthash","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","ENS_NAME_REGEX","parseENSAddress","ensAddress","ensPath","uriToHttp","uri","useHttpLocations","ens","resolvedContentHash","useENSContentHash","getTokenLogoURL","BAD_SRCS","Logo","srcs","refresh","onError","StyledLogo","CurrencyLogo","uriLocations","DoubleCurrencyLogo","currency0","currency1","StyledListLogo","ListLogo","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","estimatedText","transactionRevertText","truncatedRecipient","recipientSentToText","postSentToText","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","modalHeader","modalBottom","confirmationContent","useBNBBalances","uncheckedAddresses","multicallContract","useSingleContractMultipleData","useTokenBalances","validatedTokens","vt","anyLoading","callState","useTokenBalancesWithLoadingIndicator","useCurrencyBalances","ethBalance","useCurrencyBalance","usePreviousValue","BaseWrapper","disable","CommonBases","onSelect","selectedCurrency","selected","rotate","StyledSVG","svg","CircleLoader","strokeLinecap","strokeLinejoin","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","inactiveTokenList","isAdded","activeTokens","useIsTokenActive","opacity","currencyKey","StyledBalanceText","FixedContentRow","toExact","MenuItem","CurrencyRow","isSelected","otherSelected","isOnSelectedList","defaultTokens","isTokenOnList","customAdded","justifySelf","CurrencyList","onCurrencySelect","otherCurrency","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","useAllTokenBalances","comparator","balanceA","balanceB","balanceComp","greaterThan","getTokenComparator","swapSound","Audio","CurrencySearch","otherSelectedCurrency","showCommonBases","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","filteredSortedTokens","handleCurrencySelect","play","inputRef","focus","checksummedInput","scrollTo","handleEnter","useFoundOnInactiveList","filteredInactiveTokens","onKeyDown","ImportToken","confirmed","setConfirmed","addToken","useAddUserToken","gridTemplateRows","gridGap","userSelect","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","isLast","response","fetch","ok","json","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","resolverContract","ensRegistrarContract","resolver","useFetchListCallback","ensResolver","sendDispatch","nanoid","catch","CurrencyModalView","manage","importToken","importList","RowWrapper","listUrlRowHTMLId","ListRow","listsByUrl","useIsListActive","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","flex","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","textOverflow","Footer","ManageTokens","removeToken","useRemoveUserAddedToken","handleRemoveAll","isAddressValid","StyledButtonMenu","ButtonMenu","Manage","showLists","setShowLists","onItemClick","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","CurrencySearchModal","modalView","prevView","usePrevious","inputRegex","onUserInput","nextUserInput","minLength","maxLength","InputRow","CurrencySelectButton","Button","LabelRow","hideInput","CurrencyInputPanel","onMax","showMaxButton","disableCurrencySelect","hideBalance","pair","selectedCurrencyBalance","translatedLabel","onPresentCurrencyModal","cursor","TradePrice","price","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onChangeRecipient","tryParseAmount","typedValueParsed","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","useTradeExactIn","bestTradeExactOut","currencyIn","currencyAmountOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","parsed","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","setUserSlippageTolerance","deadline","useUserTransactionTTL","ttl","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","flexWrap","onBlur","isSuccess","ExpertModal","setShowConfirmExpertModal","setShowExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","prompt","GasSettings","useGasPriceManager","setGasPrice","PancakeToggleWrapper","SettingsModal","showConfirmExpertModal","showAcknowledgement","useUserExpertModeAcknowledgementShow","showExpertModeAcknowledgement","setSingleHopOnly","pb","borderTop","TransactionSettings","GlobalSettings","onPresentSettingsModal","useTransactionAdder","useAllTransactions","isTransactionRecent","TransactionState","IconWrapper","Transaction","newTransactionsFirst","renderTransactions","TransactionsModal","allTransactions","sortedRecentTransactions","clearAllTransactionsCallback","Transactions","onPresentTransactionsModal","AppHeaderContainer","AppHeader","subtitle","helper","backTo","noConfig","BodyWrapper","AppBody","useTokenAllowance","owner","spender","ApprovalState","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","approve","useExact","estimateGas","estimatedGas","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","useWrapCallback","wethContract","WETH_ABI","useWETHContract","sufficientBalance","execute","txReceipt","maxAmountSpend","currencyAmount","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","Swap","history","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","onWrap","wrapInputError","showWrap","parsedAmounts","isValid","dependentField","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","formattedAmounts","userHasSpecifiedInputOutput","noRoute","useApproveCallbackFromTrade","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","callback","args","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","ix","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmWord","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","entries","warningTokenConfig","warningTokenData","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","unsupportedTokens","tokenIn","tokenOut","useIsTransactionUnsupported","INPUT","OUTPUT","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToSwap","useFetchPublicPoolsData","fetchPoolsPublicData","getBlockNumber","blockLimits","totalStakings","prices","toLocaleLowerCase","liveData","blockLimit","totalStaking","isPoolFinished","stakingTokenAddress","earningTokenAddress","stakingLimitData","useFetchUserPools","stakingTokenBalances","fetchPoolsUserDataAsync","getAprData","autoCompoundFrequency","getPoolBlockInfo","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","ApyLabelContainer","AprRow","earningsPercentageToDisplay","apyModalLink","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","isMetaMaskInScope","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","gte","ExpandableButtonWrapper","isExpanded","setIsExpanded","CardHeader","StyledCardHeader","isStaking","useApprovePool","earningTokenSymbol","safeStakeContract","transactionHash","ApprovalAction","isLoading","stakingTokenContract","endIcon","spin","useTheme","toggleThemeAction","useThemeManager","StyledThemeContext","StyledLink","NotEnoughTokensModal","colors","gradients","cardHeader","StyledButton","PercentageButton","sousStake","useStakePool","sousUnstake","units","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","StakeModal","isRemovingStake","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","setPercent","getCalculatedStakingLimit","fullDecimalStakeAmount","userNotEnoughToken","usdValueStaked","formattedUsdValueStaked","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","dividedBy","amountToStake","handleConfirmClick","convertedInput","percentage","floor","currencyValue","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","useHarvestPool","CollectModal","formattedBalance","earningsDollarValue","handleHarvestConfirm","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","CardFooter","PoolTabButtons","hasStakeInFinishedPools","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","BaseCell","CellContent","StyledCell","NameCell","stakingTokenSymbol","showStakedTag","EarningsCell","labelText","AprLabelContainer","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","isFullLayout","actionTitle","isNotVaultAndHasStake","StyledActionPanel","InfoSection","breakpoints","isXs","isSm","isMd","poolStakingTokenBalance","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","Harvest","StyledRow","PoolRow","isLg","isXl","isXxl","isTablet","isLargerScreen","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTableBorder","PoolsTable","CardLayout","PoolControls","Pools","usePools","useUserPoolStakedOnly","useUserPoolsViewMode","numberOfPoolsVisible","setNumberOfPoolsVisible","sortOption","chosenPoolsLength","partition","finishedPools","openPools","stakedOnlyFinishedPools","stakedOnlyOpenPools","usePollFarmsPublicData","poolsCurrentlyVisible","chosenPools","showFinishedPools","poolsToSort","orderBy","NaN","sortPools","cardLayout","tableLayout","IsoTabButtons","Hero","IsoCardHeading","SectionSide","IsoCardDetails","tokenPrice","useApproveIso","havenISOAddress","useHarvestIso","onHarvest","useAllowanceIso","dependency","setAllowance","StyledInputWrapper","primary","endAdornment","startAdornment","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","BalanceInput","useDepositIso","handleDeposit","onDeposit","ContributeModal","setValue","onConfirmModal","IsoCardContribute","onPresentContributeModal","StyledIsoCard","IsoCard","IsoCardWrapper","LaunchIsoCallout","BaseLayout","SubTitle","Lists","ul","List","li","Iso","IsoCards","PastIso","usePollIsosWithUserData","Isos","isosData","useIsos","CurrentIso","StyledDivider","Divider","Title","Value","LinkText","CopyButton","LinkCard","copySuccess","setCopySuccess","copyTextRef","onCopy","CardBox","Referral","encodeAccount","sign","havenLayerReferralContract","setReferralsCount","totalReferralCommissions","setTotalReferralCommissions","origin","_binanceChainListener","resolve","defineProperty","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","App","timer","usePollBlockNumber","setIsAppLoading","whichDetails","loadApp","loadProvider","loadDetails","Ifos","Root","BlockContext","BlockContextProvider","previousBlock","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Updater","useWeb3Provider","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","reject","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","blocksSinceCheck","minutesPending","shouldCheck","blockHash","transactionIndex","Updaters","Blocklist","ReactDOM","render","getLibrary","Web3Provider","themes","getElementById"],"mappings":"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EF4C,KAAM,IAAI5B,IACRhB,EACA,6CACA,GACA,OACA,eACA,sBAEF6C,SAAU,IAAI7B,IACZhB,EACA,6CACA,GACA,WACA,iBACA,6BAEF8C,KAAM,IAAI9B,IACRhB,EACA,6CACA,GACA,OACA,aACA,yBAEF+C,MAAO,IAAI/B,IACThB,EACA,6CACA,GACA,QACA,mBACA,2BAEFgD,IAAK,IAAIhC,IACPhB,EACA,6CACA,GACA,MACA,cACA,yBAEFiD,MAAO,IAAIjC,IACThB,EACA,6CACA,GACA,QACA,gBACA,4BAEFkD,OAAQ,IAAIlC,IACVhB,EACA,6CACA,GACA,SACA,eACA,8BAEFmD,IAAK,IAAInC,IACPhB,EACA,6CACA,GACA,MACA,cACA,2BAEFoD,MAAO,IAAIpC,IACThB,EACA,6CACA,EACA,QACA,cACA,wBAEFqD,MAAO,IAAIrC,IACThB,EACA,6CACA,EACA,QACA,cACA,0BAEFsD,MAAO,IAAItC,IACThB,EACA,6CACA,GACA,QACA,iBACA,gCAEFuD,IAAK,IAAIvC,IACPhB,EACA,6CACA,GACA,MACA,cACA,yBAEFwD,SAAU,IAAIxC,IACZhB,EACA,6CACA,GACA,WACA,kBACA,yBAEFyD,KAAM,IAAIzC,IACRhB,EACA,6CACA,GACA,OACA,gBACA,wBAEF0D,KAAM,IAAI1C,IACRhB,EACA,6CACA,GACA,OACA,iBACA,wBAEF2D,IAAK,IAAI3C,IACPhB,EACA,6CACA,GACA,MACA,0BACA,mBAEF4D,KAAM,IAAI5C,IACRhB,EACA,6CACA,GACA,OACA,oBACA,oCAEF6D,KAAM,IAAI7C,IACRhB,EACA,6CACA,GACA,OACA,aACA,+BAEF8D,MAAO,IAAI9C,IACThB,EACA,6CACA,GACA,QACA,qBACA,gCAEF+D,GAAI,IAAI/C,IACNhB,EACA,6CACA,GACA,KACA,2BACA,+BAEFgE,IAAK,IAAIhD,IACPhB,EACA,6CACA,GACA,MACA,sBACA,6BAEFiE,MAAO,IAAIjD,IACThB,EACA,6CACA,GACA,QACA,cACA,0BAEFkE,MAAO,IAAIlD,IACThB,EACA,6CACA,GACA,QACA,kBACA,yBAEFmE,QAAS,IAAInD,IACXhB,EACA,6CACA,GACA,MACA,oBACA,4BAEFoE,KAAM,IAAIpD,IAAMhB,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjGqE,IAAK,IAAIrD,IACPhB,EACA,6CACA,GACA,MACA,wBACA,4BAEFsE,IAAK,IAAItD,IACPhB,EACA,6CACA,GACA,MACA,qBACA,4BAEFuE,OAAQ,IAAIvD,IACVhB,EACA,6CACA,GACA,SACA,eACA,uBAEFwE,OAAQ,IAAIxD,IACVhB,EACA,6CACA,GACA,SACA,uBACA,iCAEFyE,KAAM,IAAIzD,IACRhB,EACA,6CACA,GACA,OACA,kBACA,yBAEF0E,IAAK,IAAI1D,IAAMhB,EAAS,6CAA8C,GAAI,MAAO,aAAc,qBAC/F2E,KAAM,IAAI3D,IACRhB,EACA,6CACA,GACA,OACA,aACA,yBAEF4E,IAAK,IAAI5D,IACPhB,EACA,6CACA,GACA,MACA,kBACA,6BAEF6E,MAAO,IAAI7D,IACThB,EACA,6CACA,GACA,QACA,qBACA,iCAEF8E,MAAO,IAAI9D,IACThB,EACA,6CACA,EACA,QACA,0BACA,oCAEF+E,IAAK,IAAI/D,IACPhB,EACA,6CACA,GACA,MACA,gBACA,6BAEFgF,IAAK,IAAIhE,IACPhB,EACA,6CACA,GACA,MACA,mBACA,kCAEFiF,KAAM,IAAIjE,IACRhB,EACA,6CACA,EACA,OACA,aACA,wBAEFkF,KAAM,IAAIlE,IACRhB,EACA,6CACA,GACA,OACA,kBACA,yBAEFmF,IAAK,IAAInE,IACPhB,EACA,6CACA,GACA,MACA,iBACA,qBAEFoF,KAAM,IAAIpE,IACRhB,EACA,6CACA,GACA,OACA,aACA,yBAEFqF,IAAK,IAAIrE,IACPhB,EACA,6CACA,GACA,MACA,uBACA,qBAEFsF,IAAK,IAAItE,IACPhB,EACA,6CACA,EACA,MACA,oBACA,gCAEFuF,MAAO,IAAIvE,IACThB,EACA,6CACA,EACA,QACA,2BACA,sCAEFwF,KAAM,IAAIxE,IACRhB,EACA,6CACA,GACA,OACA,mBACA,+BAEFyF,KAAM,IAAIzE,IACRhB,EACA,6CACA,GACA,OACA,kCACA,qBAEF0F,IAAK,IAAI1E,IACPhB,EACA,6CACA,GACA,MACA,kBACA,8BAEF2F,MAAO,IAAI3E,IACThB,EACA,6CACA,GACA,QACA,wBACA,uBAEF4F,KAAM,IAAI5E,IACRhB,EACA,6CACA,GACA,OACA,aACA,sBAEF6F,QAAS,IAAI7E,IACXhB,EACA,6CACA,GACA,UACA,wBACA,4BAEF8F,IAAK,IAAI9E,IACPhB,EACA,6CACA,GACA,MACA,iBACA,wBAEF+F,KAAM,IAAI/E,IACRhB,EACA,6CACA,GACA,OACA,aACA,0BAEFgG,IAAK,IAAIhF,IACPhB,EACA,6CACA,GACA,MACA,YACA,0BAEFiG,IAAK,IAAIjF,IACPhB,EACA,6CACA,GACA,MACA,gBACA,2BAEFkG,KAAM,IAAIlF,IACRhB,EACA,6CACA,GACA,OACA,uBACA,2BAEFmG,IAAK,IAAInF,IACPhB,EACA,6CACA,GACA,MACA,iBACA,6BAEFoG,KAAM,IAAIpF,IACRhB,EACA,6CACA,EACA,OACA,eACA,2BAEFqG,IAAK,IAAIrF,IACPhB,EACA,6CACA,GACA,MACA,gBACA,uBAEFsG,KAAM,IAAItF,IACRhB,EACA,6CACA,GACA,OACA,eACA,uBAEFuG,MAAO,IAAIvF,IACThB,EACA,6CACA,GACA,QACA,iBACA,yBAEFwG,MAAO,IAAIxF,IACThB,EACA,6CACA,GACA,QACA,4BACA,uBAEFyG,KAAM,IAAIzF,IACRhB,EACA,6CACA,GACA,OACA,aACA,sBAEF0G,MAAO,IAAI1F,IACThB,EACA,6CACA,GACA,QACA,sBACA,6BAEF2G,IAAK,IAAI3F,IACPhB,EACA,6CACA,EACA,MACA,gBACA,0BAEF4G,IAAK,IAAI5F,IACPhB,EACA,6CACA,EACA,MACA,yBACA,0BAEF6G,GAAI,IAAI7F,IACNhB,EACA,6CACA,EACA,KACA,gBACA,0BAEF8G,KAAM,IAAI9F,IACRhB,EACA,6CACA,GACA,OACA,qBACA,yBAEF+G,IAAK,IAAI/F,IACPhB,EACA,6CACA,EACA,MACA,iBACA,0BAEFgH,IAAK,IAAIhG,IACPhB,EACA,6CACA,EACA,MACA,4BACA,0BAEFiH,IAAK,IAAIjG,IACPhB,EACA,6CACA,GACA,MACA,iBACA,8CAEFkH,KAAM,IAAIlG,IACRhB,EACA,6CACA,GACA,OACA,aACA,6BAEFmH,IAAK,IAAInG,IACPhB,EACA,6CACA,GACA,MACA,qBACA,4BAEFoH,KAAM,IAAIpG,IACRhB,EACA,6CACA,EACA,OACA,aACA,wBAEFqH,QAAS,IAAIrG,IACXhB,EACA,6CACA,GACA,UACA,eACA,sBAEFsH,KAAM,IAAItG,IACRhB,EACA,6CACA,GACA,OACA,gBACA,4BAEFuH,IAAK,IAAIvG,IACPhB,EACA,6CACA,GACA,MACA,oBACA,4BAEFwH,IAAK,IAAIxG,IACPhB,EACA,6CACA,GACA,MACA,iBACA,yBAEFyH,IAAK,IAAIzG,IACPhB,EACA,6CACA,EACA,MACA,eACA,kCAEF0H,IAAK,IAAI1G,IACPhB,EACA,6CACA,GACA,MACA,2BACA,kCAEF2H,IAAK,IAAI3G,IAAMhB,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChG4H,MAAO,IAAI5G,IACThB,EACA,6CACA,GACA,QACA,sBACA,4BAEF6H,IAAK,IAAI7G,IAAMhB,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChG8H,MAAO,IAAI9G,IACThB,EACA,6CACA,GACA,QACA,yBACA,sBAEF+H,KAAM,IAAI/G,IACRhB,EACA,6CACA,GACA,OACA,yBACA,6BAEFgI,KAAM,IAAIhH,IACRhB,EACA,6CACA,GACA,OACA,sBACA,0BAEFiI,KAAM,IAAIjH,IACRhB,EACA,6CACA,GACA,OACA,qBACA,yBAEFkI,KAAM,IAAIlH,IACRhB,EACA,6CACA,GACA,OACA,qBACA,8CAEFmI,MAAO,IAAInH,IACThB,EACA,6CACA,GACA,QACA,4BACA,2BAEFoI,OAAQ,IAAIpH,IACVhB,EACA,6CACA,GACA,SACA,6BACA,2BAEFqI,MAAO,IAAIrH,IACThB,EACA,6CACA,GACA,QACA,4BACA,2BAEFsI,MAAO,IAAItH,IACThB,EACA,6CACA,GACA,QACA,4BACA,2BAEFuI,IAAK,IAAIvH,IACPhB,EACA,6CACA,GACA,MACA,6BACA,yBAEFwI,IAAK,IAAIxH,IACPhB,EACA,6CACA,GACA,MACA,6BACA,4BAEFyI,KAAM,IAAIzH,IACRhB,EACA,6CACA,GACA,OACA,kCACA,6BAEF0I,IAAK,IAAI1H,IACPhB,EACA,6CACA,GACA,MACA,6BACA,6BAEF2I,IAAK,IAAI3H,IACPhB,EACA,6CACA,GACA,MACA,wBACA,mBAEF4I,KAAM,IAAI5H,IACRhB,EACA,6CACA,GACA,OACA,8BACA,uBAEF6I,IAAK,IAAI7H,IACPhB,EACA,6CACA,GACA,MACA,wBACA,2BAEF8I,KAAM,IAAI9H,IACRhB,EACA,6CACA,GACA,OACA,2BACA,2BAEF+I,KAAM,IAAI/H,IACRhB,EACA,6CACA,GACA,OACA,iCACA,wBAEFgJ,IAAK,IAAIhI,IACPhB,EACA,6CACA,GACA,MACA,0BACA,0BAEFiJ,IAAK,IAAIjI,IACPhB,EACA,6CACA,GACA,MACA,iCACA,qBAEFkJ,IAAK,IAAIlI,IACPhB,EACA,6CACA,GACA,MACA,kCACA,0BAEFmJ,IAAK,IAAInI,IACPhB,EACA,6CACA,GACA,MACA,4BACA,wBAEFoJ,IAAK,IAAIpI,IACPhB,EACA,6CACA,GACA,MACA,6BACA,wBAEFqJ,KAAM,IAAIrI,IACRhB,EACA,6CACA,GACA,OACA,mBACA,+BAEFsJ,OAAQ,IAAItI,IACVhB,EACA,6CACA,GACA,SACA,mBACA,2BAEFuJ,MAAO,IAAIvI,IACThB,EACA,6CACA,GACA,QACA,yBACA,2BAEFwJ,QAAS,IAAIxI,IACXhB,EACA,6CACA,GACA,UACA,2BACA,2BAEFyJ,MAAO,IAAIzI,IACThB,EACA,6CACA,GACA,QACA,iBACA,yBAEF0J,IAAK,IAAI1I,IACPhB,EACA,6CACA,GACA,MACA,iBACA,uBAEF2J,IAAK,IAAI3I,IACPhB,EACA,6CACA,GACA,MACA,wBACA,2BAEF4J,KAAM,IAAI5I,IACRhB,EACA,6CACA,GACA,OACA,oBACA,uBAEF6J,IAAK,IAAI7I,IACPhB,EACA,6CACA,GACA,MACA,oBACA,2BAEF8J,KAAM,IAAI9I,IACRhB,EACA,6CACA,GACA,OACA,mBACA,kCAEF+J,IAAK,IAAI/I,IACPhB,EACA,6CACA,GACA,MACA,gBACA,4BAEFgK,KAAM,IAAIhJ,IACRhB,EACA,6CACA,EACA,OACA,qBACA,yBAEFiK,KAAM,IAAIjJ,IACRhB,EACA,6CACA,EACA,OACA,yBACA,6BAEFkK,IAAK,IAAIlJ,IACPhB,EACA,6CACA,GACA,MACA,gBACA,gCAEFmK,IAAK,IAAInJ,IACPhB,EACA,6CACA,GACA,MACA,sBACA,6BAEFoK,KAAM,IAAIpJ,IACRhB,EACA,6CACA,GACA,OACA,qBACA,iCAEFqK,IAAK,IAAIrJ,IACPhB,EACA,6CACA,GACA,MACA,sBACA,qBAEFsK,KAAM,IAAItJ,IACRhB,EACA,6CACA,GACA,OACA,aACA,2BAEFuK,KAAM,IAAIvJ,IAAMhB,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjGwK,IAAK,IAAIxJ,IAAMhB,EAAS,6CAA8C,EAAG,MAAO,YAAa,oBAC7FyK,KAAM,IAAIzJ,IACRhB,EACA,6CACA,GACA,OACA,iBACA,wBAEF0K,OAAQ,IAAI1J,IACVhB,EACA,6CACA,GACA,SACA,eACA,+BAEF2K,IAAK,IAAI3J,IACPhB,EACA,6CACA,GACA,MACA,mBACA,+BAEF4K,KAAM,IAAI5J,IACRhB,EACA,6CACA,GACA,OACA,qBACA,yBAEF6K,KAAM,IAAI7J,IACRhB,EACA,6CACA,GACA,OACA,kBACA,yBAEF8K,IAAK,IAAI9J,IACPhB,EACA,6CACA,GACA,MACA,yBACA,6BAEF+K,IAAK,IAAI/J,IACPhB,EACA,6CACA,GACA,MACA,wBACA,wBAEFgL,IAAK,IAAIhK,IACPhB,EACA,6CACA,EACA,MACA,6BACA,2BAEFiL,KAAM,IAAIjK,IACRhB,EACA,6CACA,GACA,OACA,SACA,4BAEFkL,KAAM,IAAIlK,IACRhB,EACA,6CACA,GACA,OACA,YACA,4BAEFmL,IAAK,IAAInK,IACPhB,EACA,6CACA,GACA,MACA,yBACA,gCAEFoL,MAAO,IAAIpK,IACThB,EACA,6CACA,GACA,QACA,iBACA,+BAEFqL,IAAK,IAAIrK,IACPhB,EACA,6CACA,GACA,MACA,oBACA,8BAEFsL,IAAK,IAAItK,IACPhB,EACA,6CACA,GACA,MACA,YACA,oCAEFuL,MAAO,IAAIvK,IACThB,EACA,6CACA,GACA,QACA,cACA,0BAEFwL,IAAK,IAAIxK,IACPhB,EACA,6CACA,GACA,MACA,gBACA,4BAEFyL,YAAM,IAAIzK,IACRhB,EACA,6CACA,EACA,YACA,sBACA,8BAEF0L,OAAQ,IAAI1K,IACVhB,EACA,6CACA,GACA,SACA,cACA,kCAEF2L,IAAK,IAAI3K,IACPhB,EACA,6CACA,GACA,MACA,iBACA,yBAEF4L,IAAK,IAAI5K,IACPhB,EACA,6CACA,GACA,MACA,qBACA,yBAEF6L,IAAK,IAAI7K,IACPhB,EACA,6CACA,GACA,MACA,+BACA,+BAEF8L,IAAK,IAAI9K,IACPhB,EACA,6CACA,GACA,MACA,aACA,yBAEF+L,IAAK,IAAI/K,IACPhB,EACA,6CACA,GACA,MACA,YACA,yBAEFgM,MAAO,IAAIhL,IACThB,EACA,6CACA,GACA,QACA,4BACA,2BAEFiM,KAAM,IAAIjL,IACRhB,EACA,6CACA,GACA,OACA,aACA,2BAEFkM,IAAK,IAAIlL,IACPhB,EACA,6CACA,GACA,MACA,wBACA,0BAEFmM,IAAK,IAAInL,IACPhB,EACA,6CACA,GACA,MACA,gCACA,0BAEFoM,KAAM,IAAIpL,IACRhB,EACA,6CACA,GACA,OACA,aACA,uBAEFqM,IAAK,IAAIrL,IACPhB,EACA,6CACA,EACA,MACA,mBACA,wBAEFsM,KAAM,IAAItL,IACRhB,EACA,6CACA,EACA,OACA,uBACA,yBAEFuM,KAAM,IAAIvL,IACRhB,EACA,6CACA,GACA,OACA,kBACA,0BAEFwM,IAAK,IAAIxL,IACPhB,EACA,6CACA,GACA,MACA,eACA,2BAEFyM,KAAM,IAAIzL,IACRhB,EACA,6CACA,GACA,OACA,iBACA,yBAEF0M,aAAO,IAAI1L,IACThB,EACA,6CACA,EACA,aACA,iBACA,8BAEF2M,IAAK,IAAI3L,IACPhB,EACA,6CACA,GACA,MACA,eACA,2BAEF4M,KAAM,IAAI5L,IACRhB,EACA,6CACA,GACA,OACA,eACA,uBAEF6M,MAAO,IAAI7L,IACThB,EACA,6CACA,EACA,QACA,qBACA,2BAEF8M,KAAM,IAAI9L,IACRhB,EACA,6CACA,GACA,OACA,aACA,8BAEF+M,KAAM,IAAI/L,IACRhB,EACA,6CACA,GACA,OACA,aACA,yBAEFgN,IAAK,IAAIhM,IAAMhB,EAAS,6CAA8C,GAAI,MAAO,YAAa,wBAC9FiN,IAAK,IAAIjM,IACPhB,EACA,6CACA,EACA,MACA,eACA,wBAEFkN,KAAM,IAAIlM,IACRhB,EACA,6CACA,GACA,OACA,aACA,gCAEFmN,KAAM,IAAInM,IACRhB,EACA,6CACA,GACA,OACA,gBACA,8BAEFoN,IAAK,IAAIpM,IACPhB,EACA,6CACA,GACA,MACA,kBACA,0BAEFqN,OAAQ,IAAIrM,IACVhB,EACA,6CACA,GACA,SACA,cACA,0BAEFsN,MAAO,IAAItM,IACThB,EACA,6CACA,GACA,QACA,wBACA,uBAEFuN,GAAI,IAAIvM,IACNhB,EACA,6CACA,GACA,KACA,gBACA,2BAEFwN,IAAK,IAAIxM,IACPhB,EACA,6CACA,GACA,MACA,qBACA,qBAEFyN,KAAM,IAAIzM,IACRhB,EACA,6CACA,GACA,OACA,4BACA,4BAEF0N,KAAM,IAAI1M,IACRhB,EACA,6CACA,GACA,OACA,qBACA,yBAEF2N,IAAK,IAAI3M,IACPhB,EACA,6CACA,GACA,MACA,gBACA,uBAEF4N,IAAK,IAAI5M,IACPhB,EACA,6CACA,GACA,MACA,mBACA,0BAEF6N,KAAM,IAAI7M,IACRhB,EACA,6CACA,GACA,OACA,oBACA,mCAEF8N,GAAI,IAAI9M,IAAMhB,EAAS,6CAA8C,GAAI,KAAM,WAAY,wBAC3F+N,IAAK,IAAI/M,IACPhB,EACA,6CACA,GACA,MACA,iBACA,4BAEFgO,KAAM,IAAIhN,IACRhB,EACA,6CACA,GACA,OACA,cACA,2BAEFiO,OAAQ,IAAIjN,IACVhB,EACA,6CACA,GACA,SACA,kBACA,8BAEFkO,MAAO,IAAIlN,IACThB,EACA,6CACA,GACA,QACA,kBACA,yBAEFmO,KAAM,IAAInN,IACRhB,EACA,6CACA,EACA,OACA,aACA,+BAEFoO,GAAI,IAAIpN,IACNhB,EACA,6CACA,GACA,KACA,gBACA,uBAEFqO,IAAK,IAAIrN,IAAMhB,EAAS,6CAA8C,EAAG,MAAO,eAAgB,sBAChGsO,IAAK,IAAItN,IACPhB,EACA,6CACA,GACA,MACA,eACA,0BAEFuO,IAAK,IAAIvN,IACPhB,EACA,6CACA,GACA,MACA,yBACA,wBAEFwO,IAAK,IAAIxN,IACPhB,EACA,6CACA,GACA,MACA,wBACA,4BAEFyO,SAAU,IAAIzN,IACZhB,EACA,6CACA,EACA,WACA,iBACA,yBAEF0O,IAAK,IAAI1N,IACPhB,EACA,6CACA,GACA,MACA,qCACA,6BAEF2O,IAAK,IAAI3N,IACPhB,EACA,6CACA,GACA,MACA,eACA,uBAEF4O,KAAM,IAAI5N,IACRhB,EACA,6CACA,GACA,OACA,gBACA,wBAEF6O,IAAK,IAAI7N,IACPhB,EACA,6CACA,GACA,MACA,mBACA,oCAEF8O,KAAM,IAAI9N,IACRhB,EACA,6CACA,GACA,OACA,aACA,iCAEF+O,GAAI,IAAI/N,IACNhB,EACA,6CACA,GACA,KACA,kBACA,8BAEFgP,MAAO,IAAIhO,IACThB,EACA,6CACA,GACA,QACA,qBACA,yBAEFiP,KAAM,IAAIjO,IACRhB,EACA,6CACA,GACA,OACA,YACA,0BAISkP,EAAgB,CAC3BvN,KAAM,IAAIX,IACRS,EACA,6CACA,GACA,OACA,cACA,4BAEFM,KAAM,IAAIf,IACRS,EACA,6CACA,GACA,OACA,oBACA,gCAEFY,KAAM,IAAIrB,IACRS,EACA,6CAC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","file":"static/js/main.aceb63c1.chunk.js","sourcesContent":["import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [\n  // \"https://bsc-dataseed.binance.org/\",\n  \"https://bsc-dataseed1.ninicoin.io\",\n  \"https://nodes.pancakeswap.com\"\n]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import { ethers } from 'ethers'\nimport getRpcUrl from './getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)","export const DEFAULT_CHAINID = 56;","import { useEffect, useState, useRef } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { simpleRpcProvider } from '../utils/providers'\r\nimport { DEFAULT_CHAINID } from '../constants/network'\r\n// eslint-disable-next-line import/no-unresolved\r\n\r\nconst useActiveWeb3React = () => {\r\n  const { library, chainId, ...web3React } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setprovider(library || simpleRpcProvider)\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n  return { library: provider, chainId: chainId || DEFAULT_CHAINID, ...web3React }\r\n}\r\n\r\nexport default useActiveWeb3React\r\n","const contracts = {\r\n  havenToken: {\r\n    97: '',\r\n    56: '0x9caE753B661142aE766374CEFA5dC800d80446aC'\r\n  },\r\n  dividendDistributor: {\r\n    97: '',\r\n    56: '0x027801c6DB5cd5a561B72dEf4551060E4009cC6e'\r\n  },\r\n  sltToken: {\r\n    97: '0xEDD56Df89E3c85A62e869C752E88B67c320c8178',\r\n    56: '0x50040Dd0C86206d606F6b3E760f078c3514C0B37'\r\n  },\r\n  safeChef: {\r\n    97: '0x767b7dc77587ca9c733d517c1e1e461c72876328',\r\n    56: '0xD98367372F412BB471e189e6596118c72Fe3f1F6'\r\n  },\r\n  havenLayerReferral: {\r\n    97: '0x89b1cbbae3f3a8d93a11751533daf76fa14f8be9',\r\n    56: '0xbCF4F74Abfe957612792f51ab8D7F6048E57e3d8'\r\n  },\r\n  multiCall: {\r\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\r\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\r\n  },\r\n  safeStake: {\r\n    97: '',\r\n    56: '0x636b816CffFd88096a02660f17F2e0ee48024861'\r\n  },\r\n  havenISO: {\r\n    97: '',\r\n    56: '0x6dA800d4cB156d3df7Cb23e0DB57EE95B7B6088c'\r\n  },\r\n}\r\n\r\nexport default contracts;","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from '../constants/contracts';\nimport { DEFAULT_CHAINID } from '../constants/network';\n\nexport const getAddress = (address) => {\n  const chainId = DEFAULT_CHAINID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getHavenTokenAddress = () => {\n  return getAddress(addresses.havenToken);\n}\nexport const getDividendDistributorAddress = () => {\n  return getAddress(addresses.dividendDistributor);\n}\nexport const getsltTokenAddress = () => {\n  return getAddress(addresses.sltToken);\n}\nexport const getSafeChefAddress = () => {\n  return getAddress(addresses.safeChef);\n}\nexport const getHavenISOAdress = () => {\n  return getAddress(addresses.havenISO)\n}\nexport const getHavenLayerReferralAddress = () => {\n  return getAddress(addresses.havenLayerReferral)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}","import { Token } from '@pancakeswap/sdk'\nimport { parseUnits } from 'ethers/lib/utils'\n\nexport function serializeToken(token) {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n    projectLink: token.projectLink,\n  }\n}\n\nexport function deserializeToken(serializedToken) {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n    serializedToken.projectLink,\n  )\n}\n\nexport const GAS_PRICE = {\n  default: '5',\n  fast: '6',\n  instant: '7',\n  testnet: '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n","import { ChainId, Token } from '@pancakeswap/sdk'\r\nimport { serializeToken } from '../store/slices/user-slice/hooks/helpers';\r\nimport { DEFAULT_CHAINID } from './network';\r\n\r\nconst { MAINNET, TESTNET } = ChainId\r\n\r\nexport const mainnetTokens = {\r\n  wbnb: new Token(\r\n    MAINNET,\r\n    '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n    18,\r\n    'WBNB',\r\n    'Wrapped BNB',\r\n    'https://www.binance.com/',\r\n  ),\r\n  // bnb here points to the wbnb contract. Wherever the currency BNB is required, conditional checks for the symbol 'BNB' can be used\r\n  bnb: new Token(\r\n    MAINNET, \r\n    '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', \r\n    18, \r\n    'BNB', \r\n    'BNB', \r\n    'https://www.binance.com/'\r\n  ),\r\n  haven: new Token(\r\n    MAINNET, '0x9caE753B661142aE766374CEFA5dC800d80446aC', \r\n    9, \r\n    'HAVEN', \r\n    'HAVEN', \r\n    ''\r\n  ),\r\n  slt: new Token(\r\n    MAINNET, \r\n    '0x50040Dd0C86206d606F6b3E760f078c3514C0B37', \r\n    18, 'HAVENLAYER1',\r\n    'HAVENLAYER1', \r\n    ''\r\n  ),\r\n  cake: new Token(\r\n    MAINNET,\r\n    '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n    18,\r\n    'CAKE',\r\n    'PancakeSwap Token',\r\n    'https://pancakeswap.finance/',\r\n  ),\r\n  tlos: new Token(MAINNET, '0xb6C53431608E626AC81a9776ac3e999c5556717c', 18, 'TLOS', 'Telos', 'https://www.telos.net/'),\r\n  stephero: new Token(\r\n    MAINNET,\r\n    '0xE8176d414560cFE1Bf82Fd73B986823B89E4F545',\r\n    18,\r\n    'HERO',\r\n    'StepHero',\r\n    'https://stephero.io/',\r\n  ),\r\n  qbt: new Token(MAINNET, '0x17B7163cf1Dbd286E262ddc68b553D899B93f526', 18, 'QBT', 'Qubit Token', 'https://qbt.fi/'),\r\n  cvp: new Token(\r\n    MAINNET,\r\n    '0x5Ec3AdBDae549Dce842e24480Eb2434769e22B2E',\r\n    18,\r\n    'CVP',\r\n    'Concentrated Voting Power Token',\r\n    'https://powerpool.finance/',\r\n  ),\r\n  bscdefi: new Token(\r\n    MAINNET,\r\n    '0x40E46dE174dfB776BB89E04dF1C47d8a66855EB3',\r\n    18,\r\n    'BSCDEFI',\r\n    'BSC Defi blue chips token',\r\n    'https://powerpool.finance/',\r\n  ),\r\n  busd: new Token(\r\n    MAINNET,\r\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n    18,\r\n    'BUSD',\r\n    'Binance USD',\r\n    'https://www.paxos.com/busd/',\r\n  ),\r\n  dai: new Token(\r\n    MAINNET,\r\n    '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\r\n    18,\r\n    'DAI',\r\n    'Dai Stablecoin',\r\n    'https://www.makerdao.com/',\r\n  ),\r\n  usdt: new Token(\r\n    MAINNET,\r\n    '0x55d398326f99059fF775485246999027B3197955',\r\n    18,\r\n    'USDT',\r\n    'Tether USD',\r\n    'https://tether.to/',\r\n  ),\r\n  btcb: new Token(\r\n    MAINNET,\r\n    '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\r\n    18,\r\n    'BTCB',\r\n    'Binance BTC',\r\n    'https://bitcoin.org/',\r\n  ),\r\n  ust: new Token(\r\n    MAINNET,\r\n    '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\r\n    18,\r\n    'UST',\r\n    'Wrapped UST Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  eth: new Token(\r\n    MAINNET,\r\n    '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n    18,\r\n    'ETH',\r\n    'Binance-Peg Ethereum Token',\r\n    'https://ethereum.org/en/',\r\n  ),\r\n  usdc: new Token(\r\n    MAINNET,\r\n    '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\r\n    18,\r\n    'USDC',\r\n    'Binance-Peg USD Coin',\r\n    'https://www.centre.io/usdc',\r\n  ),\r\n  kalm: new Token(\r\n    MAINNET,\r\n    '0x4BA0057f784858a48fe351445C672FF2a3d43515',\r\n    18,\r\n    'KALM',\r\n    'Kalmar Token',\r\n    'https://kalmar.io/',\r\n  ),\r\n  hotcross: new Token(\r\n    MAINNET,\r\n    '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\r\n    18,\r\n    'HOTCROSS',\r\n    'Hotcross Token',\r\n    'https://www.hotcross.com/',\r\n  ),\r\n  belt: new Token(\r\n    MAINNET,\r\n    '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\r\n    18,\r\n    'BELT',\r\n    'Belt Token',\r\n    'https://beta.belt.fi/',\r\n  ),\r\n  watch: new Token(\r\n    MAINNET,\r\n    '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\r\n    18,\r\n    'WATCH',\r\n    'Yieldwatch Token',\r\n    'https://yieldwatch.net/',\r\n  ),\r\n  bry: new Token(\r\n    MAINNET,\r\n    '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\r\n    18,\r\n    'BRY',\r\n    'Berry Token',\r\n    'https://berrydata.co/',\r\n  ),\r\n  wsote: new Token(\r\n    MAINNET,\r\n    '0x541E619858737031A1244A5d0Cd47E5ef480342c',\r\n    18,\r\n    'wSOTE',\r\n    'Soteria Token',\r\n    'https://soteria.finance/',\r\n  ),\r\n  helmet: new Token(\r\n    MAINNET,\r\n    '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\r\n    18,\r\n    'Helmet',\r\n    'Helmet Token',\r\n    'https://www.helmet.insure/',\r\n  ),\r\n  ten: new Token(\r\n    MAINNET,\r\n    '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\r\n    18,\r\n    'TEN',\r\n    'Tenet Token',\r\n    'https://www.tenet.farm/',\r\n  ),\r\n  ditto: new Token(\r\n    MAINNET,\r\n    '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\r\n    9,\r\n    'DITTO',\r\n    'Ditto Token',\r\n    'https://ditto.money/',\r\n  ),\r\n  blink: new Token(\r\n    MAINNET,\r\n    '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\r\n    6,\r\n    'BLINK',\r\n    'Blink Token',\r\n    'https://blink.wink.org',\r\n  ),\r\n  syrup: new Token(\r\n    MAINNET,\r\n    '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\r\n    18,\r\n    'SYRUP',\r\n    'SyrupBar Token',\r\n    'https://pancakeswap.finance/',\r\n  ),\r\n  pha: new Token(\r\n    MAINNET,\r\n    '0x0112e557d400474717056C4e6D40eDD846F38351',\r\n    18,\r\n    'PHA',\r\n    'Phala Token',\r\n    'https://phala.network',\r\n  ),\r\n  babycake: new Token(\r\n    MAINNET,\r\n    '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\r\n    18,\r\n    'BABYCAKE',\r\n    'Baby Cake Token',\r\n    'https://babycake.app/',\r\n  ),\r\n  bmon: new Token(\r\n    MAINNET,\r\n    '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\r\n    18,\r\n    'BMON',\r\n    'Binamon Token',\r\n    'https://binamon.org/',\r\n  ),\r\n  hero: new Token(\r\n    MAINNET,\r\n    '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\r\n    18,\r\n    'HERO',\r\n    'Metahero Token',\r\n    'https://metahero.io/',\r\n  ),\r\n  wsg: new Token(\r\n    MAINNET,\r\n    '0xA58950F05FeA2277d2608748412bf9F802eA4901',\r\n    18,\r\n    'WSG',\r\n    'Wall Street Games Token',\r\n    'https://wsg.gg/',\r\n  ),\r\n  mcrn: new Token(\r\n    MAINNET,\r\n    '0xacb2d47827C9813AE26De80965845D80935afd0B',\r\n    18,\r\n    'MCRN',\r\n    'Macaronswap Token',\r\n    'https://www.macaronswap.finance/',\r\n  ),\r\n  revv: new Token(\r\n    MAINNET,\r\n    '0x833F307aC507D47309fD8CDD1F835BeF8D702a93',\r\n    18,\r\n    'REVV',\r\n    'REVV Token',\r\n    'https://revvmotorsport.com/',\r\n  ),\r\n  skill: new Token(\r\n    MAINNET,\r\n    '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\r\n    18,\r\n    'SKILL',\r\n    'Cryptoblades Token',\r\n    'https://www.cryptoblades.io/',\r\n  ),\r\n  if: new Token(\r\n    MAINNET,\r\n    '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\r\n    18,\r\n    'IF',\r\n    'Impossible Finance Token',\r\n    'https://impossible.finance/',\r\n  ),\r\n  sps: new Token(\r\n    MAINNET,\r\n    '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\r\n    18,\r\n    'SPS',\r\n    'Splinterlands Token',\r\n    'https://splinterlands.com',\r\n  ),\r\n  chess: new Token(\r\n    MAINNET,\r\n    '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\r\n    18,\r\n    'CHESS',\r\n    'Chess Token',\r\n    'https://tranchess.com/',\r\n  ),\r\n  titan: new Token(\r\n    MAINNET,\r\n    '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\r\n    18,\r\n    'TITAN',\r\n    'Titanswap Token',\r\n    'https://titanswap.org',\r\n  ),\r\n  harmony: new Token(\r\n    MAINNET,\r\n    '0x03fF0ff224f904be3118461335064bB48Df47938',\r\n    18,\r\n    'ONE',\r\n    'Harmony ONE Token',\r\n    'https://www.harmony.one/',\r\n  ),\r\n  mask: new Token(MAINNET, '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3', 18, 'MASK', 'Mask Token', 'https://mask.io/'),\r\n  dvi: new Token(\r\n    MAINNET,\r\n    '0x758FB037A375F17c7e195CC634D77dA4F554255B',\r\n    18,\r\n    'DVI',\r\n    'Dvision Network Token',\r\n    'https://dvision.network/',\r\n  ),\r\n  adx: new Token(\r\n    MAINNET,\r\n    '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\r\n    18,\r\n    'ADX',\r\n    'Adex Network Token',\r\n    'https://www.adex.network',\r\n  ),\r\n  bscpad: new Token(\r\n    MAINNET,\r\n    '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\r\n    18,\r\n    'BSCPAD',\r\n    'Bscpad Token',\r\n    'https://bscpad.com/',\r\n  ),\r\n  rabbit: new Token(\r\n    MAINNET,\r\n    '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\r\n    18,\r\n    'RABBIT',\r\n    'Rabbit Finance Token',\r\n    'https://rabbitfinance.io/earn',\r\n  ),\r\n  form: new Token(\r\n    MAINNET,\r\n    '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\r\n    18,\r\n    'FORM',\r\n    'Formation Token',\r\n    'https://formation.fi/',\r\n  ),\r\n  txl: new Token(MAINNET, '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5', 18, 'TXL', 'Tixl Token', 'https://tixl.org/'),\r\n  orbs: new Token(\r\n    MAINNET,\r\n    '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\r\n    18,\r\n    'ORBS',\r\n    'Orbs Token',\r\n    'https://www.orbs.com/',\r\n  ),\r\n  cos: new Token(\r\n    MAINNET,\r\n    '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\r\n    18,\r\n    'COS',\r\n    'Contentos Token',\r\n    'https://www.contentos.io/',\r\n  ),\r\n  bunny: new Token(\r\n    MAINNET,\r\n    '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\r\n    18,\r\n    'BUNNY',\r\n    'Pancakebunny Token',\r\n    'https://pancakebunny.finance/',\r\n  ),\r\n  alice: new Token(\r\n    MAINNET,\r\n    '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\r\n    6,\r\n    'ALICE',\r\n    'My Neighbor Alice Token',\r\n    'https://www.myneighboralice.com/',\r\n  ),\r\n  for: new Token(\r\n    MAINNET,\r\n    '0x658A109C5900BC6d2357c87549B651670E5b0539',\r\n    18,\r\n    'FOR',\r\n    'Fortube Token',\r\n    'https://www.for.tube/home',\r\n  ),\r\n  bux: new Token(\r\n    MAINNET,\r\n    '0x211FfbE424b90e25a15531ca322adF1559779E45',\r\n    18,\r\n    'BUX',\r\n    'Bux Crypto Token',\r\n    'https://getbux.com/bux-crypto/',\r\n  ),\r\n  nuls: new Token(\r\n    MAINNET,\r\n    '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\r\n    8,\r\n    'NULS',\r\n    'Nuls Token',\r\n    'https://www.nuls.io/',\r\n  ),\r\n  ramp: new Token(\r\n    MAINNET,\r\n    '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\r\n    18,\r\n    'RAMP',\r\n    'RAMP DEFI Token',\r\n    'https://rampdefi.com/',\r\n  ),\r\n  bfi: new Token(\r\n    MAINNET,\r\n    '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\r\n    18,\r\n    'BFI',\r\n    'bearn.fi Token',\r\n    'https://bearn.fi/',\r\n  ),\r\n  dexe: new Token(\r\n    MAINNET,\r\n    '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\r\n    18,\r\n    'DEXE',\r\n    'DeXe Token',\r\n    'https://dexe.network/',\r\n  ),\r\n  bel: new Token(\r\n    MAINNET,\r\n    '0x8443f091997f06a61670B735ED92734F5628692F',\r\n    18,\r\n    'BEL',\r\n    'Bella Protocol Token',\r\n    'https://bella.fi/',\r\n  ),\r\n  tpt: new Token(\r\n    MAINNET,\r\n    '0xECa41281c24451168a37211F0bc2b8645AF45092',\r\n    4,\r\n    'TPT',\r\n    'Tokenpocket Token',\r\n    'https://www.tokenpocket.pro/',\r\n  ),\r\n  xmark: new Token(\r\n    MAINNET,\r\n    '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\r\n    9,\r\n    'xMARK',\r\n    'Benchmark Protocol Token',\r\n    'https://benchmarkprotocol.finance/',\r\n  ),\r\n  bmxx: new Token(\r\n    MAINNET,\r\n    '0x4131b87F74415190425ccD873048C708F8005823',\r\n    18,\r\n    'bMXX',\r\n    'Multiplier Token',\r\n    'https://multiplier.finance/',\r\n  ),\r\n  iotx: new Token(\r\n    MAINNET,\r\n    '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\r\n    18,\r\n    'IOTX',\r\n    'Binance-Peg IoTeX Network Token',\r\n    'https://iotex.io/',\r\n  ),\r\n  bor: new Token(\r\n    MAINNET,\r\n    '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\r\n    18,\r\n    'BOR',\r\n    'BoringDAO Token',\r\n    'https://www.boringdao.com/',\r\n  ),\r\n  bopen: new Token(\r\n    MAINNET,\r\n    '0xF35262a9d427F96d2437379eF090db986eaE5d42',\r\n    18,\r\n    'bOPEN',\r\n    'OPEN Governance Token',\r\n    'https://opendao.io/',\r\n  ),\r\n  dodo: new Token(\r\n    MAINNET,\r\n    '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\r\n    18,\r\n    'DODO',\r\n    'Dodo Token',\r\n    'https://dodoex.io/',\r\n  ),\r\n  swingby: new Token(\r\n    MAINNET,\r\n    '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\r\n    18,\r\n    'SWINGBY',\r\n    'Swingby Network Token',\r\n    'https://swingby.network/',\r\n  ),\r\n  zee: new Token(\r\n    MAINNET,\r\n    '0x44754455564474A89358B2C2265883DF993b12F0',\r\n    18,\r\n    'ZEE',\r\n    'Zeroswap Token',\r\n    'https://zeroswap.io/',\r\n  ),\r\n  swgb: new Token(\r\n    MAINNET,\r\n    '0xE40255C5d7fa7ceEc5120408C78C787CECB4cfdb',\r\n    18,\r\n    'SWGb',\r\n    'SWGb Token',\r\n    'https://swirgepay.com/',\r\n  ),\r\n  swg: new Token(\r\n    MAINNET,\r\n    '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\r\n    18,\r\n    'SWG',\r\n    'SWG Token',\r\n    'https://swirgepay.com/',\r\n  ),\r\n  sfp: new Token(\r\n    MAINNET,\r\n    '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\r\n    18,\r\n    'SFP',\r\n    'Safepal Token',\r\n    'https://www.safepal.io/',\r\n  ),\r\n  lina: new Token(\r\n    MAINNET,\r\n    '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\r\n    18,\r\n    'LINA',\r\n    'Linear Finance Token',\r\n    'https://linear.finance/',\r\n  ),\r\n  lit: new Token(\r\n    MAINNET,\r\n    '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\r\n    18,\r\n    'LIT',\r\n    'Litentry Token',\r\n    'https://www.litentry.com/',\r\n  ),\r\n  hget: new Token(\r\n    MAINNET,\r\n    '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\r\n    6,\r\n    'HGET',\r\n    'Hedget Token',\r\n    'https://www.hedget.com/',\r\n  ),\r\n  bdo: new Token(\r\n    MAINNET,\r\n    '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\r\n    18,\r\n    'BDO',\r\n    'Bdollar Token',\r\n    'https://bdollar.fi/',\r\n  ),\r\n  egld: new Token(\r\n    MAINNET,\r\n    '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\r\n    18,\r\n    'EGLD',\r\n    'Elrond Token',\r\n    'https://elrond.com/',\r\n  ),\r\n  front: new Token(\r\n    MAINNET,\r\n    '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\r\n    18,\r\n    'FRONT',\r\n    'Frontier Token',\r\n    'https://frontier.xyz/',\r\n  ),\r\n  btcst: new Token(\r\n    MAINNET,\r\n    '0x78650B139471520656b9E7aA7A5e9276814a38e9',\r\n    17,\r\n    'BTCST',\r\n    'StandardBTCHashrate Token',\r\n    'https://www.1-b.tc/',\r\n  ),\r\n  bscx: new Token(\r\n    MAINNET,\r\n    '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\r\n    18,\r\n    'BSCX',\r\n    'BSCX Token',\r\n    'https://bscex.org/',\r\n  ),\r\n  balbt: new Token(\r\n    MAINNET,\r\n    '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\r\n    18,\r\n    'bALBT',\r\n    'AllianceBlock Token',\r\n    'https://allianceblock.io/',\r\n  ),\r\n  asr: new Token(\r\n    MAINNET,\r\n    '0x80D5f92C2c8C682070C95495313dDB680B267320',\r\n    2,\r\n    'ASR',\r\n    'AS Roma Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  atm: new Token(\r\n    MAINNET,\r\n    '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\r\n    2,\r\n    'ATM',\r\n    'Athletico Madrid Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  og: new Token(\r\n    MAINNET,\r\n    '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\r\n    2,\r\n    'OG',\r\n    'OG Nice Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  reef: new Token(\r\n    MAINNET,\r\n    '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\r\n    18,\r\n    'REEF',\r\n    'Reef.finance Token',\r\n    'https://reef.finance/',\r\n  ),\r\n  juv: new Token(\r\n    MAINNET,\r\n    '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\r\n    2,\r\n    'JUV',\r\n    'Juventus Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  psg: new Token(\r\n    MAINNET,\r\n    '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\r\n    2,\r\n    'PSG',\r\n    'Paris Saint-Germain Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  vai: new Token(\r\n    MAINNET,\r\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\r\n    18,\r\n    'VAI',\r\n    'VAI Stablecoin',\r\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\r\n  ),\r\n  unfi: new Token(\r\n    MAINNET,\r\n    '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\r\n    18,\r\n    'UNFI',\r\n    'UNFI Token',\r\n    'https://unifiprotocol.com',\r\n  ),\r\n  twt: new Token(\r\n    MAINNET,\r\n    '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\r\n    18,\r\n    'TWT',\r\n    'Trust Wallet Token',\r\n    'https://trustwallet.com/',\r\n  ),\r\n  hard: new Token(\r\n    MAINNET,\r\n    '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\r\n    6,\r\n    'HARD',\r\n    'HARD Token',\r\n    'https://hard.kava.io',\r\n  ),\r\n  broobee: new Token(\r\n    MAINNET,\r\n    '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\r\n    18,\r\n    'bROOBEE',\r\n    'ROOBEE Token',\r\n    'https://roobee.io/',\r\n  ),\r\n  stax: new Token(\r\n    MAINNET,\r\n    '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\r\n    18,\r\n    'STAX',\r\n    'StableX Token',\r\n    'https://stablexswap.com/',\r\n  ),\r\n  nar: new Token(\r\n    MAINNET,\r\n    '0xA1303E6199b319a891b79685F0537D289af1FC83',\r\n    18,\r\n    'NAR',\r\n    'Narwhalswap Token',\r\n    'https://narwhalswap.org/',\r\n  ),\r\n  nya: new Token(\r\n    MAINNET,\r\n    '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\r\n    18,\r\n    'NYA',\r\n    'Nyanswop Token',\r\n    'https://nyanswop.org/',\r\n  ),\r\n  ctk: new Token(\r\n    MAINNET,\r\n    '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\r\n    6,\r\n    'CTK',\r\n    'Certik Token',\r\n    'https://www.certik.foundation/',\r\n  ),\r\n  inj: new Token(\r\n    MAINNET,\r\n    '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\r\n    18,\r\n    'INJ',\r\n    'Injective Protocol Token',\r\n    'https://injectiveprotocol.com/',\r\n  ),\r\n  sxp: new Token(MAINNET, '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A', 18, 'SXP', 'Swipe Token', 'https://swipe.io/'),\r\n  alpha: new Token(\r\n    MAINNET,\r\n    '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\r\n    18,\r\n    'ALPHA',\r\n    'Alpha Finance Token',\r\n    'https://alphafinance.io/',\r\n  ),\r\n  xvs: new Token(MAINNET, '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63', 18, 'XVS', 'Venus Token', 'https://venus.io/'),\r\n  sushi: new Token(\r\n    MAINNET,\r\n    '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\r\n    18,\r\n    'SUSHI',\r\n    'Binance-Peg SushiToken',\r\n    'https://sushi.com/',\r\n  ),\r\n  comp: new Token(\r\n    MAINNET,\r\n    '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\r\n    18,\r\n    'COMP',\r\n    'Compound Finance Token',\r\n    'https://compound.finance/',\r\n  ),\r\n  bifi: new Token(\r\n    MAINNET,\r\n    '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\r\n    18,\r\n    'BIFI',\r\n    'Beefy Finance Token',\r\n    'https://beefy.finance/',\r\n  ),\r\n  dusk: new Token(\r\n    MAINNET,\r\n    '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\r\n    18,\r\n    'DUSK',\r\n    'Dusk Network Token',\r\n    'https://dusk.network/',\r\n  ),\r\n  beth: new Token(\r\n    MAINNET,\r\n    '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\r\n    18,\r\n    'BETH',\r\n    'Binance Beacon ETH',\r\n    'https://ethereum.org/en/eth2/beacon-chain/',\r\n  ),\r\n  mamzn: new Token(\r\n    MAINNET,\r\n    '0x3947B992DC0147D2D89dF0392213781b04B25075',\r\n    18,\r\n    'mAMZN',\r\n    'Wrapped Mirror AMZN Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  mgoogl: new Token(\r\n    MAINNET,\r\n    '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\r\n    18,\r\n    'mGOOGL',\r\n    'Wrapped Mirror GOOGL Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  mnflx: new Token(\r\n    MAINNET,\r\n    '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\r\n    18,\r\n    'mNFLX',\r\n    'Wrapped Mirror NFLX Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  mtsla: new Token(\r\n    MAINNET,\r\n    '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\r\n    18,\r\n    'mTSLA',\r\n    'Wrapped Mirror TSLA Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  ltc: new Token(\r\n    MAINNET,\r\n    '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\r\n    18,\r\n    'LTC',\r\n    'Binance-Peg Litecoin Token',\r\n    'https://litecoin.org/',\r\n  ),\r\n  ada: new Token(\r\n    MAINNET,\r\n    '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\r\n    18,\r\n    'ADA',\r\n    ' Binance-Peg Cardano Token',\r\n    'https://www.cardano.org/',\r\n  ),\r\n  band: new Token(\r\n    MAINNET,\r\n    '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\r\n    18,\r\n    'BAND',\r\n    'Binance-Peg Band Protocol Token',\r\n    'https://bandprotocol.com/',\r\n  ),\r\n  dot: new Token(\r\n    MAINNET,\r\n    '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\r\n    18,\r\n    'DOT',\r\n    'Binance-Peg Polkadot Token',\r\n    'https://polkadot.network/',\r\n  ),\r\n  eos: new Token(\r\n    MAINNET,\r\n    '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\r\n    18,\r\n    'EOS',\r\n    'Binance-Peg EOS Token',\r\n    'https://eos.io/',\r\n  ),\r\n  link: new Token(\r\n    MAINNET,\r\n    '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\r\n    18,\r\n    'LINK',\r\n    'Binance-Peg Chainlink Token',\r\n    'https://chain.link/',\r\n  ),\r\n  xrp: new Token(\r\n    MAINNET,\r\n    '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\r\n    18,\r\n    'XRP',\r\n    'Binance-Peg XRP Token',\r\n    'https://ripple.com/xrp/',\r\n  ),\r\n  atom: new Token(\r\n    MAINNET,\r\n    '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\r\n    18,\r\n    'ATOM',\r\n    'Binance-Peg Cosmos Token',\r\n    'https://cosmos.network/',\r\n  ),\r\n  yfii: new Token(\r\n    MAINNET,\r\n    '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\r\n    18,\r\n    'YFII',\r\n    'Binance-Peg YFII.finance Token',\r\n    'https://dfi.money/#/',\r\n  ),\r\n  xtz: new Token(\r\n    MAINNET,\r\n    '0x16939ef78684453bfDFb47825F8a5F714f12623a',\r\n    18,\r\n    'XTZ',\r\n    'Binance-Peg Tezos Token',\r\n    'https://www.tezos.com/',\r\n  ),\r\n  bch: new Token(\r\n    MAINNET,\r\n    '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\r\n    18,\r\n    'BCH',\r\n    'Binance-Peg Bitcoin Cash Token',\r\n    'https://bch.info/',\r\n  ),\r\n  yfi: new Token(\r\n    MAINNET,\r\n    '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\r\n    18,\r\n    'YFI',\r\n    'Binance-Peg yearn.finance Token',\r\n    'https://yearn.finance/',\r\n  ),\r\n  uni: new Token(\r\n    MAINNET,\r\n    '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\r\n    18,\r\n    'UNI',\r\n    'Binance-Peg Uniswap Token',\r\n    'https://uniswap.org/',\r\n  ),\r\n  fil: new Token(\r\n    MAINNET,\r\n    '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\r\n    18,\r\n    'FIL',\r\n    'Binance-Peg Filecoin Token',\r\n    'https://filecoin.io/',\r\n  ),\r\n  bake: new Token(\r\n    MAINNET,\r\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    18,\r\n    'BAKE',\r\n    'Bakeryswap Token',\r\n    'https://www.bakeryswap.org/',\r\n  ),\r\n  burger: new Token(\r\n    MAINNET,\r\n    '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\r\n    18,\r\n    'BURGER',\r\n    'Burgerswap Token',\r\n    'https://burgerswap.org/',\r\n  ),\r\n  bdigg: new Token(\r\n    MAINNET,\r\n    '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\r\n    18,\r\n    'bDIGG',\r\n    'Badger Sett Digg Token',\r\n    'https://badger.finance/',\r\n  ),\r\n  bbadger: new Token(\r\n    MAINNET,\r\n    '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\r\n    18,\r\n    'bBadger',\r\n    'Badger Sett Badger Token',\r\n    'https://badger.finance/',\r\n  ),\r\n  trade: new Token(\r\n    MAINNET,\r\n    '0x7af173F350D916358AF3e218Bdf2178494Beb748',\r\n    18,\r\n    'TRADE',\r\n    'Unitrade Token',\r\n    'https://unitrade.app/',\r\n  ),\r\n  pnt: new Token(\r\n    MAINNET,\r\n    '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\r\n    18,\r\n    'PNT',\r\n    'pNetwork Token',\r\n    'https://ptokens.io/',\r\n  ),\r\n  mir: new Token(\r\n    MAINNET,\r\n    '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\r\n    18,\r\n    'MIR',\r\n    'Mirror Protocol Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  pbtc: new Token(\r\n    MAINNET,\r\n    '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\r\n    18,\r\n    'pBTC',\r\n    'pTokens BTC Token',\r\n    'https://ptokens.io/',\r\n  ),\r\n  lto: new Token(\r\n    MAINNET,\r\n    '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\r\n    18,\r\n    'LTO',\r\n    'LTO Network Token',\r\n    'https://ltonetwork.com/',\r\n  ),\r\n  pcws: new Token(\r\n    MAINNET,\r\n    '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\r\n    18,\r\n    'pCWS',\r\n    'PolyCrowns Token',\r\n    'https://game.seascape.network/',\r\n  ),\r\n  zil: new Token(\r\n    MAINNET,\r\n    '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\r\n    12,\r\n    'ZIL',\r\n    'Zilliqa Token',\r\n    'https://www.zilliqa.com/',\r\n  ),\r\n  lien: new Token(\r\n    MAINNET,\r\n    '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\r\n    8,\r\n    'LIEN',\r\n    'Lien Finance Token',\r\n    'https://lien.finance/',\r\n  ),\r\n  swth: new Token(\r\n    MAINNET,\r\n    '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\r\n    8,\r\n    'SWTH',\r\n    'Switcheo Network Token',\r\n    'https://switcheo.network/',\r\n  ),\r\n  dft: new Token(\r\n    MAINNET,\r\n    '0x42712dF5009c20fee340B245b510c0395896cF6e',\r\n    18,\r\n    'DFT',\r\n    'Dfuture Token',\r\n    'https://www.dfuture.com/home',\r\n  ),\r\n  gum: new Token(\r\n    MAINNET,\r\n    '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\r\n    18,\r\n    'GUM',\r\n    'GourmetGalaxy Token',\r\n    'https://gourmetgalaxy.io/',\r\n  ),\r\n  dego: new Token(\r\n    MAINNET,\r\n    '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\r\n    18,\r\n    'DEGO',\r\n    'Dego Finance Token',\r\n    'https://bsc.dego.finance/home',\r\n  ),\r\n  nrv: new Token(\r\n    MAINNET,\r\n    '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\r\n    18,\r\n    'NRV',\r\n    'Nerve Finance Token',\r\n    'https://nerve.fi/',\r\n  ),\r\n  easy: new Token(\r\n    MAINNET,\r\n    '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\r\n    18,\r\n    'EASY',\r\n    'EASY Token',\r\n    'https://easyfi.network/',\r\n  ),\r\n  oddz: new Token(MAINNET, '0xCD40F2670CF58720b694968698A5514e924F742d', 18, 'ODDZ', 'Oddz Token', 'https://oddz.fi/'),\r\n  hoo: new Token(MAINNET, '0xE1d1F66215998786110Ba0102ef558b22224C016', 8, 'HOO', 'Hoo Token', 'https://hoo.com/'),\r\n  apys: new Token(\r\n    MAINNET,\r\n    '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\r\n    18,\r\n    'APYS',\r\n    'APY Swap Token',\r\n    'https://apyswap.com/',\r\n  ),\r\n  bondly: new Token(\r\n    MAINNET,\r\n    '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\r\n    18,\r\n    'BONDLY',\r\n    'Bondly Token',\r\n    'https://www.bondly.finance/',\r\n  ),\r\n  tko: new Token(\r\n    MAINNET,\r\n    '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\r\n    18,\r\n    'TKO',\r\n    'Tokocrypto Token',\r\n    'https://www.tokocrypto.com/',\r\n  ),\r\n  itam: new Token(\r\n    MAINNET,\r\n    '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\r\n    18,\r\n    'ITAM',\r\n    'Itam Network Token',\r\n    'https://itam.network/',\r\n  ),\r\n  arpa: new Token(\r\n    MAINNET,\r\n    '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\r\n    18,\r\n    'ARPA',\r\n    'Arpachain Token',\r\n    'https://arpachain.io/',\r\n  ),\r\n  eps: new Token(\r\n    MAINNET,\r\n    '0xA7f552078dcC247C2684336020c03648500C6d9F',\r\n    18,\r\n    'EPS',\r\n    'Ellipsis Finance Token',\r\n    'https://ellipsis.finance/',\r\n  ),\r\n  jgn: new Token(\r\n    MAINNET,\r\n    '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\r\n    18,\r\n    'JGN',\r\n    'Juggernaut DeFi Token',\r\n    'https://jgndefi.com/',\r\n  ),\r\n  tlm: new Token(\r\n    MAINNET,\r\n    '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\r\n    4,\r\n    'TLM',\r\n    'Alien Worlds Trilium Token',\r\n    'https://alienworlds.io/',\r\n  ),\r\n  perl: new Token(\r\n    MAINNET,\r\n    '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\r\n    18,\r\n    'PERL',\r\n    'Perlin',\r\n    'https://perlinx.finance/',\r\n  ),\r\n  alpa: new Token(\r\n    MAINNET,\r\n    '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\r\n    18,\r\n    'ALPA',\r\n    'AlpaToken',\r\n    'https://bsc.alpaca.city/',\r\n  ),\r\n  hzn: new Token(\r\n    MAINNET,\r\n    '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\r\n    18,\r\n    'HZN',\r\n    'Horizon Protocol Token',\r\n    'https://horizonprotocol.com/',\r\n  ),\r\n  suter: new Token(\r\n    MAINNET,\r\n    '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\r\n    18,\r\n    'SUTER',\r\n    'Suterusu Token',\r\n    'https://shield.suterusu.io/',\r\n  ),\r\n  cgg: new Token(\r\n    MAINNET,\r\n    '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\r\n    18,\r\n    'CGG',\r\n    'pTokens CGG Token',\r\n    'https://chainguardians.io/',\r\n  ),\r\n  mix: new Token(\r\n    MAINNET,\r\n    '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\r\n    18,\r\n    'MIX',\r\n    'Mix Token',\r\n    'https://mixie.chainguardians.io/',\r\n  ),\r\n  hakka: new Token(\r\n    MAINNET,\r\n    '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\r\n    18,\r\n    'HAKKA',\r\n    'Hakka Token',\r\n    'https://hakka.finance/',\r\n  ),\r\n  xed: new Token(\r\n    MAINNET,\r\n    '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\r\n    18,\r\n    'XED',\r\n    'Exeedme Token',\r\n    'https://www.exeedme.com/',\r\n  ),\r\n  τbtc: new Token(\r\n    MAINNET,\r\n    '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\r\n    9,\r\n    'τBTC',\r\n    'τBitcoin Token',\r\n    'https://www.btcst.finance/',\r\n  ),\r\n  alpaca: new Token(\r\n    MAINNET,\r\n    '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\r\n    18,\r\n    'ALPACA',\r\n    'AlpacaToken',\r\n    'https://www.alpacafinance.org/',\r\n  ),\r\n  dfd: new Token(\r\n    MAINNET,\r\n    '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\r\n    18,\r\n    'DFD',\r\n    'DefiDollar DAO',\r\n    'https://dusd.finance/',\r\n  ),\r\n  lmt: new Token(\r\n    MAINNET,\r\n    '0x9617857E191354dbEA0b714d78Bc59e57C411087',\r\n    18,\r\n    'LMT',\r\n    'Lympo Market Token',\r\n    'https://lympo.io/lmt/',\r\n  ),\r\n  btt: new Token(\r\n    MAINNET,\r\n    '0x8595F9dA7b868b1822194fAEd312235E43007b49',\r\n    18,\r\n    'BTT',\r\n    'Binance-Peg BitTorrent Token',\r\n    'https://www.bittorrent.com/',\r\n  ),\r\n  trx: new Token(\r\n    MAINNET,\r\n    '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\r\n    18,\r\n    'TRX',\r\n    'TRON Token',\r\n    'https://tron.network/',\r\n  ),\r\n  win: new Token(\r\n    MAINNET,\r\n    '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\r\n    18,\r\n    'WIN',\r\n    'WIN Token',\r\n    'https://winklink.org/',\r\n  ),\r\n  mcoin: new Token(\r\n    MAINNET,\r\n    '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\r\n    18,\r\n    'MCOIN',\r\n    'Wrapped Mirror COIN Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  math: new Token(\r\n    MAINNET,\r\n    '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\r\n    18,\r\n    'MATH',\r\n    'MATH Token',\r\n    'https://mathwallet.org/',\r\n  ),\r\n  kun: new Token(\r\n    MAINNET,\r\n    '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\r\n    18,\r\n    'KUN',\r\n    'QIAN governance token',\r\n    'https://chemix.io/home',\r\n  ),\r\n  qsd: new Token(\r\n    MAINNET,\r\n    '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\r\n    18,\r\n    'QSD',\r\n    'QIAN second generation dollar',\r\n    'https://chemix.io/home',\r\n  ),\r\n  hyfi: new Token(\r\n    MAINNET,\r\n    '0x9a319b959e33369C5eaA494a770117eE3e585318',\r\n    18,\r\n    'HYFI',\r\n    'HYFI Token',\r\n    'https://hyfi.pro/#/',\r\n  ),\r\n  oin: new Token(\r\n    MAINNET,\r\n    '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\r\n    8,\r\n    'OIN',\r\n    'oinfinance Token',\r\n    'https://oin.finance/',\r\n  ),\r\n  doge: new Token(\r\n    MAINNET,\r\n    '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\r\n    8,\r\n    'DOGE',\r\n    'Binance-Peg Dogecoin',\r\n    'https://dogecoin.com/',\r\n  ),\r\n  fine: new Token(\r\n    MAINNET,\r\n    '0x4e6415a5727ea08aAE4580057187923aeC331227',\r\n    18,\r\n    'FINE',\r\n    'Refinable Token',\r\n    'https://refinable.com/',\r\n  ),\r\n  one: new Token(\r\n    MAINNET,\r\n    '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\r\n    18,\r\n    'ONE',\r\n    'BigONE Token',\r\n    'https://www.bigone.com/',\r\n  ),\r\n  pmon: new Token(\r\n    MAINNET,\r\n    '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\r\n    18,\r\n    'PMON',\r\n    'Polkamon Token',\r\n    'https://polkamon.com/',\r\n  ),\r\n  τdoge: new Token(\r\n    MAINNET,\r\n    '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\r\n    8,\r\n    'τDOGE',\r\n    'τDogecoin',\r\n    'https://www.btcst.finance/',\r\n  ),\r\n  btr: new Token(\r\n    MAINNET,\r\n    '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\r\n    18,\r\n    'BTR',\r\n    'Bitrue Token',\r\n    'https://www.bitrue.com/',\r\n  ),\r\n  ubxt: new Token(\r\n    MAINNET,\r\n    '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\r\n    18,\r\n    'UBXT',\r\n    'UpBots Token',\r\n    'https://upbots.com/',\r\n  ),\r\n  wmass: new Token(\r\n    MAINNET,\r\n    '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\r\n    8,\r\n    'WMASS',\r\n    'Wrapped MASS Token',\r\n    'https://massnet.org/en/',\r\n  ),\r\n  rfox: new Token(\r\n    MAINNET,\r\n    '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\r\n    18,\r\n    'RFOX',\r\n    'RFOX Token',\r\n    'https://www.redfoxlabs.io/',\r\n  ),\r\n  xend: new Token(\r\n    MAINNET,\r\n    '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\r\n    18,\r\n    'XEND',\r\n    'XEND Token',\r\n    'https://xend.finance/',\r\n  ),\r\n  cyc: new Token(MAINNET, '0x810EE35443639348aDbbC467b33310d2AB43c168', 18, 'CYC', 'CYC Token', 'https://cyclone.xyz/'),\r\n  chr: new Token(\r\n    MAINNET,\r\n    '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\r\n    6,\r\n    'CHR',\r\n    'Chroma Token',\r\n    'https://chromia.com/',\r\n  ),\r\n  deri: new Token(\r\n    MAINNET,\r\n    '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n    18,\r\n    'DERI',\r\n    'Deri Token',\r\n    'https://deri.finance/#/index',\r\n  ),\r\n  well: new Token(\r\n    MAINNET,\r\n    '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\r\n    18,\r\n    'WELL',\r\n    'BitWell Token',\r\n    'https://www.bitwellex.com/',\r\n  ),\r\n  wex: new Token(\r\n    MAINNET,\r\n    '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\r\n    18,\r\n    'WEX',\r\n    'WaultSwap Token',\r\n    'https://wault.finance/',\r\n  ),\r\n  waultx: new Token(\r\n    MAINNET,\r\n    '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\r\n    18,\r\n    'WAULTx',\r\n    'Wault Token',\r\n    'https://wault.finance/',\r\n  ),\r\n  popen: new Token(\r\n    MAINNET,\r\n    '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\r\n    18,\r\n    'pOPEN',\r\n    'OPEN Governance Token',\r\n    'https://opendao.io/',\r\n  ),\r\n  ez: new Token(\r\n    MAINNET,\r\n    '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\r\n    18,\r\n    'EZ',\r\n    'Easy V2 Token',\r\n    'https://easyfi.network/',\r\n  ),\r\n  vrt: new Token(\r\n    MAINNET,\r\n    '0x5F84ce30DC3cF7909101C69086c50De191895883',\r\n    18,\r\n    'VRT',\r\n    'Venus Reward Token',\r\n    'https://venus.io/',\r\n  ),\r\n  tusd: new Token(\r\n    MAINNET,\r\n    '0x14016E85a25aeb13065688cAFB43044C2ef86784',\r\n    18,\r\n    'TUSD',\r\n    'Binance-Peg TrueUSD Token',\r\n    'https://www.trueusd.com/',\r\n  ),\r\n  mtrg: new Token(\r\n    MAINNET,\r\n    '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\r\n    18,\r\n    'MTRG',\r\n    'Wrapped MTRG Token',\r\n    'https://www.meter.io/',\r\n  ),\r\n  ktn: new Token(\r\n    MAINNET,\r\n    '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\r\n    18,\r\n    'KTN',\r\n    'Kattana Token',\r\n    'https://kattana.io/',\r\n  ),\r\n  qkc: new Token(\r\n    MAINNET,\r\n    '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\r\n    18,\r\n    'QKC',\r\n    'QuarkChain Token',\r\n    'https://quarkchain.io/',\r\n  ),\r\n  bcfx: new Token(\r\n    MAINNET,\r\n    '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\r\n    18,\r\n    'bCFX',\r\n    'BSC Conflux Token',\r\n    'https://www.confluxnetwork.org/',\r\n  ),\r\n  mx: new Token(MAINNET, '0x9F882567A62a5560d147d64871776EeA72Df41D3', 18, 'MX', 'MX Token', 'https://www.mxc.com/'),\r\n  ata: new Token(\r\n    MAINNET,\r\n    '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\r\n    18,\r\n    'ATA',\r\n    'Automata Token',\r\n    'https://www.ata.network/',\r\n  ),\r\n  mbox: new Token(\r\n    MAINNET,\r\n    '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\r\n    18,\r\n    'MBOX',\r\n    'Mobox Token',\r\n    'https://www.mobox.io/#/',\r\n  ),\r\n  boring: new Token(\r\n    MAINNET,\r\n    '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\r\n    18,\r\n    'BORING',\r\n    'BoringDAO Token',\r\n    'https://www.boringdao.com/',\r\n  ),\r\n  marsh: new Token(\r\n    MAINNET,\r\n    '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\r\n    18,\r\n    'MARSH',\r\n    'Unmarshal Token',\r\n    'https://unmarshal.io/',\r\n  ),\r\n  ampl: new Token(\r\n    MAINNET,\r\n    '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\r\n    9,\r\n    'AMPL',\r\n    'AMPL Token',\r\n    'https://www.ampleforth.org/',\r\n  ),\r\n  o3: new Token(\r\n    MAINNET,\r\n    '0xEe9801669C6138E84bD50dEB500827b776777d28',\r\n    18,\r\n    'O3',\r\n    'O3 Swap Token',\r\n    'https://o3swap.com/',\r\n  ),\r\n  hai: new Token(MAINNET, '0xaA9E582e5751d703F85912903bacADdFed26484C', 8, 'HAI', 'Hacken Token', 'https://hacken.io/'),\r\n  htb: new Token(\r\n    MAINNET,\r\n    '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\r\n    18,\r\n    'HTB',\r\n    'Hotbit Token',\r\n    'https://www.hotbit.io/',\r\n  ),\r\n  woo: new Token(\r\n    MAINNET,\r\n    '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\r\n    18,\r\n    'WOO',\r\n    'Wootrade Network Token',\r\n    'https://woo.network/',\r\n  ),\r\n  $dg: new Token(\r\n    MAINNET,\r\n    '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\r\n    18,\r\n    '$DG',\r\n    'Decentral Games Token',\r\n    'https://decentral.games/',\r\n  ),\r\n  safemoon: new Token(\r\n    MAINNET,\r\n    '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\r\n    9,\r\n    'SAFEMOON',\r\n    'Safemoon Token',\r\n    'https://safemoon.net/',\r\n  ),\r\n  axs: new Token(\r\n    MAINNET,\r\n    '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\r\n    18,\r\n    'AXS',\r\n    'Binance-Pegged Axie Infinity Shard',\r\n    'https://axieinfinity.com/',\r\n  ),\r\n  c98: new Token(\r\n    MAINNET,\r\n    '0xaEC945e04baF28b135Fa7c640f624f8D90F1C3a6',\r\n    18,\r\n    'c98',\r\n    'Coin98 Token',\r\n    'https://coin98.com/',\r\n  ),\r\n  pots: new Token(\r\n    MAINNET,\r\n    '0x3Fcca8648651E5b974DD6d3e50F61567779772A8',\r\n    18,\r\n    'POTS',\r\n    'Moonpot Token',\r\n    'https://moonpot.com/',\r\n  ),\r\n  gnt: new Token(\r\n    MAINNET,\r\n    '0xF750A26EB0aCf95556e8529E72eD530f3b60f348',\r\n    18,\r\n    'GNT',\r\n    'GreenTrust Token',\r\n    'https://www.greentrusttoken.com/',\r\n  ),\r\n  rusd: new Token(\r\n    MAINNET,\r\n    '0x07663837218A003e66310a01596af4bf4e44623D',\r\n    18,\r\n    'rUSD',\r\n    'rUSD Token',\r\n    'https://appv2.rampdefi.com/#/',\r\n  ),\r\n  bp: new Token(\r\n    MAINNET,\r\n    '0xACB8f52DC63BB752a51186D1c55868ADbFfEe9C1',\r\n    18,\r\n    'BP',\r\n    'BunnyPark Token',\r\n    'https://www.bunnypark.com/',\r\n  ),\r\n  sfund: new Token(\r\n    MAINNET,\r\n    '0x477bC8d23c634C154061869478bce96BE6045D12',\r\n    18,\r\n    'SFUND',\r\n    'Seedify Fund Token',\r\n    'https://seedify.fund/',\r\n  ),\r\n  naos: new Token(\r\n    MAINNET,\r\n    '0x758d08864fB6cCE3062667225ca10b8F00496cc2',\r\n    18,\r\n    'NAOS',\r\n    'NAOSToken',\r\n    'https://naos.finance/',\r\n  ),\r\n}\r\n\r\nexport const testnetTokens = {\r\n  wbnb: new Token(\r\n    TESTNET,\r\n    '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\r\n    18,\r\n    'WBNB',\r\n    'Wrapped BNB',\r\n    'https://www.binance.com/',\r\n  ),\r\n  cake: new Token(\r\n    TESTNET,\r\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\r\n    18,\r\n    'CAKE',\r\n    'PancakeSwap Token',\r\n    'https://pancakeswap.finance/',\r\n  ),\r\n  busd: new Token(\r\n    TESTNET,\r\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\r\n    18,\r\n    'BUSD',\r\n    'Binance USD',\r\n    'https://www.paxos.com/busd/',\r\n  ),\r\n  syrup: new Token(\r\n    TESTNET,\r\n    '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\r\n    18,\r\n    'SYRUP',\r\n    'SyrupBar Token',\r\n    'https://pancakeswap.finance/',\r\n  ),\r\n  bake: new Token(\r\n    TESTNET,\r\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    18,\r\n    'BAKE',\r\n    'Bakeryswap Token',\r\n    'https://www.bakeryswap.org/',\r\n  ),\r\n}\r\n\r\nconst tokens = () => {\r\n  const chainId = DEFAULT_CHAINID;\r\n\r\n  // If testnet - return list comprised of testnetTokens wherever they exist, and mainnetTokens where they don't\r\n  if (parseInt(chainId, 10) === ChainId.TESTNET) {\r\n    return Object.keys(mainnetTokens).reduce((accum, key) => {\r\n      return { ...accum, [key]: testnetTokens[key] || mainnetTokens[key] }\r\n    }, {})\r\n  }\r\n\r\n  return mainnetTokens\r\n}\r\n\r\nexport const serializeTokens = () => {\r\n  const unserializedTokens = tokens()\r\n  const serializedTokens = Object.keys(unserializedTokens).reduce((accum, key) => {\r\n    return { ...accum, [key]: serializeToken(unserializedTokens[key]) }\r\n  }, {})\r\n\r\n  return serializedTokens\r\n}\r\n\r\nexport default tokens()\r\n","import { serializeTokens } from './tokens'\r\n\r\nconst serializedTokens = serializeTokens()\r\n\r\nconst pools = [\r\n  {\r\n    sousId: 1,\r\n    stakingToken: serializedTokens.haven,\r\n    earningToken: serializedTokens.busd,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x636b816CffFd88096a02660f17F2e0ee48024861',\r\n    },\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '236022650499999',\r\n    isFinished: false,\r\n  }\r\n]\r\n\r\nexport default pools\r\n","import { ethers } from 'ethers';\nimport { simpleRpcProvider } from './providers';\nimport poolsConfig from '../constants/pools'\n\n// Addresses\nimport {\n  getAddress,\n  getHavenTokenAddress,\n  getDividendDistributorAddress,\n  getsltTokenAddress,\n  getSafeChefAddress,\n  getHavenLayerReferralAddress,\n  getMulticallAddress,\n  getHavenISOAdress\n} from './addressHelpers';\n\n// ABI\nimport havenTokenABI from '../abi/havenTokenContract.json';\nimport dividendDistributorABI from '../abi/dividendDistributorContract.json';\nimport sltTokenABI from '../abi/testLayerToken.json';\nimport safeChefABI from '../abi/safeChef.json';\nimport havenLayerReferralABI from '../abi/havenLayerReferral.json';\nimport isoABI from '../abi/iso.json'\nimport sousChefV2 from '../abi/sousChefV2.json'\nimport safeStakeABI from '../abi/safeStake.json'\n\nimport bep20Abi from '../abi/erc20.json';\nimport MultiCallAbi from '../abi/Multicall.json'\n\nconst getContract = (abi, address, signer) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getHavenTokenContract = (signer) => {\n  return getContract(havenTokenABI, getHavenTokenAddress(), signer)\n}\nexport const getDividendDistributorContract = (signer) => {\n  return getContract(dividendDistributorABI, getDividendDistributorAddress(), signer)\n}\nexport const getsltTokenContract = (signer) => {\n  return getContract(sltTokenABI, getsltTokenAddress(), signer)\n}\nexport const getSafeChefContract = (signer) => {\n  return getContract(safeChefABI, getSafeChefAddress(), signer)\n}\nexport const getHavenLayerReferralContract = (signer) => {\n  return getContract(havenLayerReferralABI, getHavenLayerReferralAddress(), signer)\n}\n\nexport const getBep20Contract = (address, signer) => {\n  return getContract(bep20Abi, address, signer)\n}\n\nexport const getMulticallContract = (signer) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\n\nexport const getIsoContract = (signer) => {\n  return getContract(isoABI, getHavenISOAdress(), signer)\n}\n\n\nexport const getSouschefV2Contract = (id, signer) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getSafeStakeContract = (id, signer) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(safeStakeABI, getAddress(config.contractAddress), signer)\n}","export const setAll = (state, properties) => {\n    const props = Object.keys(properties);\n    props.forEach(key => {\n        state[key] = properties[key];\n    });\n};\n","import { ethers } from \"ethers\";\nimport WrappedBNBContractABI from \"../../abi/wbnbContract.json\";\nimport BusdContractABI from \"../../abi/busdContract.json\";\nimport { getHavenTokenAddress } from \"../../utils/addressHelpers\";\nimport { getHavenTokenContract, getDividendDistributorContract, getsltTokenContract } from \"../../utils/contractHelpers\";\nimport { setAll } from \"../../utils/set-all\";\nimport { createSlice, createSelector, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\n\nexport const loadAppDetails = createAsyncThunk(\n    \"app/loadAppDetails\",\n    async ({ provider, account }) => {\n        const wrappedBNBContract = new ethers.Contract(\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\", WrappedBNBContractABI, provider);\n        const BUSDContract = new ethers.Contract(\"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\", BusdContractABI, provider);\n        const havenContract = getHavenTokenContract(provider);\n        const dividendDistributorContract = getDividendDistributorContract(provider);\n        const sltTokenContract = getsltTokenContract(provider);\n        const WBNBbalanceOfLP = (await wrappedBNBContract.balanceOf(\"0x63373252f5090B3CEE061348D627A17cf6Ab360F\")) / Math.pow(10, 18);\n        const HavenBalanceOfLP = (await havenContract.balanceOf(\"0x63373252f5090B3CEE061348D627A17cf6Ab360F\")) / Math.pow(10, 9);\n        const circulatingSupply = (await havenContract.getCirculatingSupply()) / Math.pow(10, 9);\n        const slttotalSupply = (await sltTokenContract.totalSupply()) / Math.pow(10, 18);\n\n        const priceOfSLTInBNB = (await wrappedBNBContract.balanceOf(\"0x869F4e106c8f2b9062F93Db214FE23Fb073873e1\")) / await sltTokenContract.balanceOf(\"0x869F4e106c8f2b9062F93Db214FE23Fb073873e1\");\n        const priceOfCoinInBNB = WBNBbalanceOfLP / HavenBalanceOfLP;\n        const priceOfBNB = (await BUSDContract.balanceOf(\"0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16\")) / (await wrappedBNBContract.balanceOf(\"0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16\"));\n        let priceOfOneHaven  = priceOfBNB * priceOfCoinInBNB;\n        let priceOfOneSLT = priceOfBNB * priceOfSLTInBNB;\n        if( isNaN(priceOfOneHaven) ===  true) {\n\t\t\tpriceOfOneHaven = 0.00;\n\t\t}\n        if( isNaN(priceOfOneSLT) ===  true) {\n\t\t\tpriceOfOneSLT = 0.00;\n\t\t}\n        let marketCap = circulatingSupply * priceOfOneHaven;\n        let sltmarketCap = slttotalSupply * priceOfOneSLT;\n        const liquidityPoolInDollars = priceOfBNB * (WBNBbalanceOfLP * 2);\n        let balanceOfUser = 0;\n        if (account) {\n            balanceOfUser = ethers.utils.formatEther(await havenContract.balanceOf(account)) * 1000000000;    \n        }\n        const totalBNBFee =  parseInt(await havenContract.getTotalFee(true));\n        let unpaidEarnings = 0;\n        if (account) {\n            unpaidEarnings = ethers.utils.formatEther(await dividendDistributorContract.getUnpaidEarnings(account));   \n        }\n        const buyTaxFee = parseInt(await havenContract.getTotalFee(false));\n        let totalRealised = 0;\n        if (account) {\n            totalRealised = ethers.utils.formatEther((await dividendDistributorContract.shares(account)).totalRealised);\n        }\n        const burntTokens =  (await havenContract.balanceOf(\"0x000000000000000000000000000000000000dead\")) / Math.pow(10, 9);\n        const sltburntTokens =  (await sltTokenContract.balanceOf(\"0x000000000000000000000000000000000000dead\")) / Math.pow(10, 18);\n        const taxSaleInPercentage = totalBNBFee / 100\n        const buyTaxInPercentage =  buyTaxFee / 100\n\n        const totalDistributed = (await dividendDistributorContract.totalDistributed()) / Math.pow(10, 18);\n        const balanceOfContract = (await provider.getBalance(getHavenTokenAddress())) / Math.pow(10, 18);\n        return {\n            priceOfOneHaven,\n            priceOfOneSLT,\n            sltmarketCap,\n            marketCap,\n            liquidityPoolInDollars,\n            circulatingSupply,\n            balanceOfUser,\n            totalRealised,\n            unpaidEarnings,\n            taxSaleInPercentage,\n            buyTaxInPercentage,\n            burntTokens,\n            sltburntTokens,\n            totalDistributed,\n            balanceOfContract,\n            slttotalSupply\n        };\n    },\n);\n\nexport const changeDrawer = createAction('lists/changeDrawer')\n\nconst initialState = {\n    loading: true,\n    isDrawerSmall: false\n};\n\nconst appSlice = createSlice({\n    name: \"app\",\n    initialState,\n    reducers: {\n        fetchAppSuccess(state, action) {\n            setAll(state, action.payload);\n        },\n    },\n    extraReducers: builder => {\n        builder\n            .addCase(loadAppDetails.pending, (state, action) => {\n                state.loading = true;\n            })\n            .addCase(loadAppDetails.fulfilled, (state, action) => {\n                setAll(state, action.payload);\n                state.loading = false;\n            })\n            .addCase(loadAppDetails.rejected, (state, { error }) => {\n                state.loading = false;\n                console.log(error);\n            })\n            .addCase(changeDrawer, (state, action) => {\n                state.isDrawerSmall = action.payload\n            })\n    },\n});\n\nconst baseInfo = (state) => state.app;\n\nexport default appSlice.reducer;\n\nexport const { fetchAppSuccess } = appSlice.actions;\n\nexport const getAppState = createSelector(baseInfo, app => app);\n","import CircularProgress from \"@mui/material/CircularProgress\";\r\nimport \"./loader.scss\";\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"loader-wrap\">\r\n            <CircularProgress size={120} color=\"inherit\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","export default __webpack_public_path__ + \"static/media/HavenLogo.1d7a7be7.png\";","export default __webpack_public_path__ + \"static/media/SafeHavenTextLogo.254d97b1.png\";","export default __webpack_public_path__ + \"static/media/drawer1.fa4a3e0e.svg\";","export default __webpack_public_path__ + \"static/media/drawer2.1d2cf26e.svg\";","import BigNumber from 'bignumber.js'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_TEN = new BigNumber(10)","import { ChainId, Percent, JSBI } from '@pancakeswap/sdk';\nimport { mainnetTokens, testnetTokens } from './tokens';\nimport { BIG_TEN } from '../utils/bigNumber';\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\nexport const BASES_TO_TRACK_LIQUIDITY_FOR = {\n    [ChainId.MAINNET]: [mainnetTokens.wbnb, mainnetTokens.dai, mainnetTokens.busd, mainnetTokens.usdt],\n    [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\nexport const PINNED_PAIRS = {\n  [ChainId.MAINNET]: [\n    [mainnetTokens.cake, mainnetTokens.wbnb],\n    [mainnetTokens.busd, mainnetTokens.usdt],\n    [mainnetTokens.dai, mainnetTokens.usdt],\n  ],\n}\n\nexport const BASE_URL = 'https://localhost:3000'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const BSC_BLOCK_TIME = 3;\nexport const HAVEN_PER_BLOCK = 40;\nexport const BLOCKS_PER_YEAR = (60 / BSC_BLOCK_TIME) * 60 * 24 * 365; // 10512000\nexport const HAVEN_PER_YEAR = HAVEN_PER_BLOCK * BLOCKS_PER_YEAR;\n\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18);\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n\nexport const ALLOWED_PRICE_IMPACT_LOW = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\nexport const SUGGESTED_BASES = {\n  [ChainId.MAINNET]: [mainnetTokens.busd, mainnetTokens.cake, mainnetTokens.btcb],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n\nexport const ADDITIONAL_BASES = {\n  [ChainId.MAINNET]: {},\n}\nexport const CUSTOM_BASES = {\n  [ChainId.MAINNET]: {},\n}\nexport const BASES_TO_CHECK_TRADES_AGAINST = {\n  [ChainId.MAINNET]: [\n    mainnetTokens.wbnb,\n    mainnetTokens.cake,\n    mainnetTokens.busd,\n    mainnetTokens.usdt,\n    mainnetTokens.btcb,\n    mainnetTokens.ust,\n    mainnetTokens.eth,\n    mainnetTokens.usdc,\n  ],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\nexport const MIN_BNB = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\n\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from '../constants'\nimport { nodes } from './getRpcUrl'\nimport { DEFAULT_CHAINID } from '../constants/network'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(DEFAULT_CHAINID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress, tokenSymbol, tokenDecimals) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\nimport { DEFAULT_CHAINID } from '../constants/network'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(DEFAULT_CHAINID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider) => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider, account, message) => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","export const types = {\n  SUCCESS: 'success',\n  DANGER: 'danger',\n  WARNING: 'warning',\n  INFO: 'info',\n}","import React, { useCallback, useEffect, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport styled from 'styled-components'\nimport { Alert, alertVariants } from '@pancakeswap/uikit'\nimport { types } from './types'\n\nconst alertTypeMap = {\n  [types.INFO]: alertVariants.INFO,\n  [types.SUCCESS]: alertVariants.SUCCESS,\n  [types.DANGER]: alertVariants.DANGER,\n  [types.WARNING]: alertVariants.WARNING,\n}\n\nconst StyledToast = styled.div`\n  right: 16px;\n  position: fixed;\n  max-width: calc(100% - 32px);\n  transition: all 250ms ease-in;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 400px;\n  }\n`\n\nconst Toast = ({ toast, onRemove, style, ttl, ...props }) => {\n  const timer = useRef()\n  const ref = useRef(null)\n  const removeHandler = useRef(onRemove)\n  const { id, title, description, type } = toast\n\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\n\n  const handleMouseEnter = () => {\n    clearTimeout(timer.current)\n  }\n\n  const handleMouseLeave = () => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n  }\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n\n    return () => {\n      clearTimeout(timer.current)\n    }\n  }, [timer, ttl, handleRemove])\n\n  return (\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\n          {description}\n        </Alert>\n      </StyledToast>\n    </CSSTransition>\n  )\n}\n\nexport default Toast\n","import React from 'react'\nimport { TransitionGroup } from 'react-transition-group'\nimport styled from 'styled-components'\nimport Toast from './Toast'\n\nconst ZINDEX = 1000\nconst TOP_POSITION = 80 // Initial position from the top\n\nconst StyledToastContainer = styled.div`\n  .enter,\n  .appear {\n    opacity: 0.01;\n  }\n\n  .enter.enter-active,\n  .appear.appear-active {\n    opacity: 1;\n    transition: opacity 250ms ease-in;\n  }\n\n  .exit {\n    opacity: 1;\n  }\n\n  .exit.exit-active {\n    opacity: 0.01;\n    transition: opacity 250ms ease-out;\n  }\n`\n\nconst ToastContainer = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\n  return (\n    <StyledToastContainer>\n      <TransitionGroup>\n        {toasts.map((toast, index) => {\n          const zIndex = (ZINDEX - index).toString()\n          const top = TOP_POSITION + index * stackSpacing\n\n          return (\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\n          )\n        })}\n      </TransitionGroup>\n    </StyledToastContainer>\n  )\n}\n\nexport default ToastContainer\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { ChainId, JSBI, Percent, Token, ETHER } from '@pancakeswap/sdk'\nimport { BASE_BSC_SCAN_URLS } from '../constants';\nimport { ROUTER_ADDRESS } from '../constants'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value) {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data,\n  type,\n  chainId = ChainId.MAINNET,\n) {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// add 10%\nexport function calculateGasMargin(value) {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num) {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\n// account is not optional\nexport function getSigner(library, account) {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library, account) {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address, ABI, library, account) {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account))\n}\n\nexport function escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens, currency) {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n\nexport function getRouterContract(_, library, account) {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}","/**\n * Truncate a transaction or address hash\n */\nconst truncateHash = (address, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateHash\n","import React from 'react'\nimport { Link, Text } from '@pancakeswap/uikit'\nimport { getBscScanLink } from '../../utils';\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React';\nimport truncateHash from '../../utils/truncateHash'\n\nconst DescriptionWithTx = ({ txHash, children }) => {\n  const { chainId } = useActiveWeb3React()\n\n  return (\n    <>\n      {typeof children === 'string' ? <Text color=\"#253449\" as=\"p\">{children}</Text> : children}\n      {txHash && (\n        <Link external href={getBscScanLink(txHash, 'transaction', chainId)}>\n          View on BscScan: {truncateHash(txHash, 8, 0)}\n        </Link>\n      )}\n    </>\n  )\n}\n\nexport default DescriptionWithTx\n","import React, { createContext, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { toastTypes } from '../../components/Toast';\n\nexport const ToastsContext = createContext(undefined)\n\nexport const ToastsProvider = ({ children }) => {\n  const [toasts, setToasts] = useState([])\n\n  const toast = useCallback(\n    ({ title, description, type }) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title, description) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title, description) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title, description) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title, description) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import { useContext } from 'react'\r\nimport { ToastsContext } from '../contexts/ToastsContext';\r\n\r\nconst useToast = () => {\r\n  const toastContext = useContext(ToastsContext)\r\n\r\n  if (toastContext === undefined) {\r\n    throw new Error('Toasts context undefined')\r\n  }\r\n\r\n  return toastContext\r\n}\r\n\r\nexport default useToast\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector'\r\nimport { connectorLocalStorageKey } from '@pancakeswap/uikit'\r\nimport { setupNetwork } from '../utils/wallet'\r\nimport { connectorsByName } from '../utils/web3React'\r\n\r\nimport useToast from './useToast'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst useAuth = () => {\r\n  const dispatch = useDispatch()\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const login = useCallback(\r\n    (connectorID) => {\r\n      const connector = connectorsByName[connectorID]\r\n      if (connector) {\r\n        activate(connector, async (error) => {\r\n          if (error instanceof UnsupportedChainIdError) {\r\n            const hasSetup = await setupNetwork()\r\n            if (hasSetup) {\r\n              activate(connector)\r\n            }\r\n          } else {\r\n            window.localStorage.removeItem(connectorLocalStorageKey)\r\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n              toastError('Provider Error', 'No provider was found')\r\n            } else if (\r\n              error instanceof UserRejectedRequestErrorInjected ||\r\n              error instanceof UserRejectedRequestErrorWalletConnect\r\n            ) {\r\n              if (connector instanceof WalletConnectConnector) {\r\n                const walletConnector = connector\r\n                walletConnector.walletConnectProvider = null\r\n              }\r\n              toastError('Authorization Error', 'Please authorize to access your account')\r\n            } else {\r\n              toastError(error.name, error.message)\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n        toastError('Unable to find connector', 'The connector config is wrong')\r\n      }\r\n    },\r\n    [activate, toastError],\r\n  )\r\n\r\n  const logout = useCallback(() => {\r\n    deactivate()\r\n    // This localStorage key is set by @web3-react/walletconnect-connector\r\n    if (window.localStorage.getItem('walletconnect')) {\r\n      connectorsByName.walletconnect.close()\r\n      connectorsByName.walletconnect.walletConnectProvider = null\r\n    }\r\n    window.localStorage.removeItem(connectorLocalStorageKey)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [deactivate, dispatch])\r\n\r\n  return { login, logout }\r\n}\r\n\r\nexport default useAuth\r\n","export const EN = { locale: 'en-US', language: 'English', code: 'en' }\n\nexport const languages = {\n  'en-US': EN,\n}","import { EN } from '../../constants/localization/languages'\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  return {}\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { EN, languages } from '../../constants/localization/languages'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map()\nlanguageMap.set(EN.locale, {})\n\nexport const LanguageContext = createContext(undefined)\n\nexport const LanguageProvider = ({ children }) => {\n  const [state, setState] = useState(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key, data) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { useWalletModal } from '@pancakeswap/uikit';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport { useTranslation } from '../../../contexts/Localization';\r\nimport \"./connect-menu.scss\";\r\n\r\nfunction ConnectMenu() {\r\n    const { t } = useTranslation()\r\n    const { login, logout } = useAuth()\r\n    const { onPresentConnectModal } = useWalletModal(login, logout, t);\r\n    const { account } = useWeb3React();\r\n    let buttonText = \"Connect Wallet\";\r\n\r\n    if (account) {\r\n        buttonText = \"Disconnect\";\r\n    }\r\n\r\n    const walletControl = () => {\r\n        if (account) {\r\n            logout();\r\n            return;\r\n        }\r\n        onPresentConnectModal();\r\n    }\r\n\r\n    return (\r\n        <div className=\"connect-button\" onClick={walletControl}>\r\n            <p>{buttonText}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConnectMenu;\r\n","import { AppBar, Toolbar, Link, useMediaQuery } from \"@mui/material\";\r\nimport { IconButton } from '@pancakeswap/uikit'\r\nimport { makeStyles } from \"@mui/styles\";\r\n// import { getBscScanLink } from '../../utils';\r\n// import { shorten } from \"../../utils/shorten\";\r\nimport SafeHavenIcon from \"../../assets/images/HavenLogo.png\";\r\nimport SafeHavenTextLogo from \"../../assets/images/SafeHavenTextLogo.png\";\r\nimport Drawer1Icon from \"../../assets/icons/drawer1.svg\"\r\nimport Drawer2Icon from \"../../assets/icons/drawer2.svg\"\r\nimport ConnectButton from \"./connect-button\";\r\nimport \"./header.scss\";\r\n\r\nconst useStyles = makeStyles({\r\n    appBar: {\r\n        justifyContent: \"flex-end\",\r\n        alignItems: \"flex-end\",\r\n        background: \"#015a87!important\",\r\n        backdropFilter: \"none\",\r\n        zIndex: 10,\r\n        width: \"100%\",\r\n    }\r\n});\r\n\r\nfunction Header({ handleDrawerToggle, mobileOpen }) {\r\n    const classes = useStyles();\r\n    const isSmallerScreen = useMediaQuery(\"(max-width: 576px)\");\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"sticky\" className={classes.appBar} elevation={0}>\r\n                <Toolbar disableGutters className=\"dapp-topbar\">\r\n                    <IconButton variant=\"text\" onClick={handleDrawerToggle}>\r\n                        {mobileOpen && <img src={Drawer1Icon} width={30} height={30} alt=\"\" /> }\r\n                        {!mobileOpen && <img src={Drawer2Icon} width={30} height={30} alt=\"\" /> }\r\n                    </IconButton>\r\n                    <div className=\"branding-logo\">\r\n                        <Link href=\"/\">\r\n                            <img className=\"branding-logo-image\" alt=\"\" width=\"50\" src={SafeHavenIcon} />\r\n                            {!isSmallerScreen && <img src={SafeHavenTextLogo} alt=\"\" width={160} />}\r\n                        </Link>\r\n                    </div>\r\n                        {/* {account && (\r\n                            <div className=\"wallet-link\">\r\n                                <Link href={getBscScanLink(account, 'address', chainId)} target=\"_blank\">\r\n                                    <p>{shorten(account)}</p>\r\n                                </Link>\r\n                            </div>\r\n                        )} */}\r\n                    <div className=\"dapp-topbar-btns-wrap\">\r\n                        <ConnectButton />\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGithub(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"20pt\",\n    height: \"20pt\",\n    viewBox: \"0 0 20 20\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"surface1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"#253449\",\n      fillOpacity: 1\n    },\n    d: \"M 18.609375 6.992188 C 18.609375 8.164062 18.449219 9.167969 18.125 10 C 17.800781 10.832031 17.332031 11.472656 16.714844 11.921875 C 16.09375 12.367188 15.476562 12.691406 14.859375 12.894531 C 14.242188 13.09375 13.519531 13.242188 12.683594 13.332031 C 13.273438 13.828125 13.566406 14.613281 13.566406 15.695312 L 13.566406 19.859375 L 7.128906 19.859375 L 7.128906 16.851562 C 6.636719 16.945312 6.179688 16.992188 5.765625 16.992188 C 5.347656 16.992188 4.992188 16.953125 4.699219 16.875 C 4.40625 16.796875 4.144531 16.699219 3.910156 16.574219 C 3.679688 16.449219 3.496094 16.320312 3.355469 16.179688 C 3.21875 16.042969 3.101562 15.910156 3.007812 15.785156 C 2.917969 15.664062 2.855469 15.554688 2.824219 15.464844 L 2.777344 15.324219 C 2.59375 14.890625 2.382812 14.523438 2.152344 14.214844 C 1.921875 13.90625 1.726562 13.703125 1.574219 13.609375 L 1.34375 13.472656 C 1.003906 13.195312 0.832031 13 0.832031 12.894531 C 0.832031 12.785156 0.941406 12.714844 1.15625 12.683594 L 1.433594 12.683594 C 1.804688 12.714844 2.160156 12.839844 2.5 13.054688 C 2.839844 13.273438 3.070312 13.488281 3.195312 13.703125 L 3.425781 13.980469 C 4.257812 15.433594 5.507812 15.785156 7.175781 15.046875 C 7.269531 14.304688 7.546875 13.734375 8.007812 13.332031 C 7.175781 13.242188 6.449219 13.09375 5.832031 12.894531 C 5.214844 12.691406 4.605469 12.367188 4.003906 11.921875 C 3.402344 11.472656 2.933594 10.832031 2.59375 10 C 2.253906 9.167969 2.082031 8.164062 2.082031 6.992188 C 2.082031 5.664062 2.53125 4.523438 3.425781 3.566406 C 3.023438 2.546875 3.070312 1.40625 3.566406 0.140625 C 3.65625 0.167969 3.78125 0.160156 3.933594 0.117188 C 4.089844 0.0703125 4.476562 0.160156 5.09375 0.394531 C 5.710938 0.625 6.390625 0.988281 7.128906 1.480469 C 8.148438 1.203125 9.226562 1.050781 10.371094 1.019531 C 11.480469 1.050781 12.5625 1.203125 13.609375 1.480469 C 14.320312 0.988281 14.976562 0.632812 15.578125 0.417969 C 16.179688 0.199219 16.589844 0.09375 16.804688 0.09375 L 17.128906 0.140625 C 17.65625 1.40625 17.699219 2.546875 17.269531 3.566406 C 18.164062 4.523438 18.609375 5.664062 18.609375 6.992188 Z M 2.316406 13.265625 C 2.34375 13.1875 2.308594 13.125 2.199219 13.078125 C 2.089844 13.03125 2.023438 13.046875 1.992188 13.125 C 1.960938 13.203125 2 13.265625 2.105469 13.308594 C 2.214844 13.355469 2.285156 13.339844 2.316406 13.265625 Z M 2.847656 13.84375 C 2.925781 13.78125 2.910156 13.695312 2.800781 13.589844 C 2.691406 13.480469 2.601562 13.457031 2.523438 13.519531 C 2.445312 13.582031 2.460938 13.664062 2.570312 13.773438 C 2.675781 13.882812 2.769531 13.90625 2.847656 13.84375 Z M 3.332031 14.582031 C 3.425781 14.523438 3.425781 14.421875 3.332031 14.28125 C 3.242188 14.144531 3.148438 14.105469 3.054688 14.167969 C 2.964844 14.226562 2.964844 14.328125 3.054688 14.46875 C 3.148438 14.605469 3.242188 14.644531 3.332031 14.582031 Z M 4.050781 15.324219 C 4.128906 15.230469 4.105469 15.117188 3.980469 14.976562 C 3.859375 14.839844 3.75 14.816406 3.65625 14.90625 C 3.566406 15 3.589844 15.117188 3.726562 15.253906 C 3.867188 15.394531 3.972656 15.417969 4.050781 15.324219 Z M 5 15.71875 C 5.03125 15.609375 4.960938 15.523438 4.792969 15.464844 C 4.621094 15.402344 4.523438 15.433594 4.492188 15.554688 C 4.460938 15.679688 4.53125 15.765625 4.699219 15.808594 C 4.867188 15.855469 4.96875 15.824219 5 15.71875 Z M 5.785156 15.972656 C 5.972656 15.972656 6.066406 15.910156 6.066406 15.785156 C 6.066406 15.664062 5.972656 15.601562 5.785156 15.601562 C 5.601562 15.601562 5.507812 15.664062 5.507812 15.785156 C 5.507812 15.910156 5.601562 15.972656 5.785156 15.972656 Z M 6.804688 15.878906 C 6.898438 15.847656 6.96875 15.808594 7.015625 15.765625 C 7.058594 15.71875 7.066406 15.679688 7.035156 15.648438 C 7.035156 15.492188 6.945312 15.433594 6.757812 15.464844 C 6.667969 15.492188 6.597656 15.53125 6.550781 15.578125 C 6.503906 15.625 6.496094 15.679688 6.527344 15.742188 C 6.527344 15.863281 6.621094 15.910156 6.804688 15.878906 Z M 6.804688 15.878906 \"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGithub);\nexport default __webpack_public_path__ + \"static/media/github.be1278c6.svg\";\nexport { ForwardRef as ReactComponent };","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTwitter(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"20pt\",\n    height: \"20pt\",\n    viewBox: \"0 0 20 20\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"surface1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"#253449\",\n      fillOpacity: 1\n    },\n    d: \"M 19.703125 4.113281 C 19.007812 4.421875 18.257812 4.628906 17.472656 4.726562 C 18.285156 4.238281 18.890625 3.476562 19.179688 2.578125 C 18.417969 3.027344 17.585938 3.347656 16.714844 3.519531 C 16.128906 2.894531 15.355469 2.480469 14.511719 2.339844 C 13.667969 2.203125 12.800781 2.34375 12.046875 2.75 C 11.292969 3.152344 10.695312 3.792969 10.34375 4.574219 C 9.988281 5.351562 9.90625 6.226562 10.101562 7.058594 C 8.554688 6.984375 7.046875 6.582031 5.667969 5.882812 C 4.289062 5.183594 3.074219 4.203125 2.097656 3.003906 C 1.765625 3.578125 1.574219 4.246094 1.574219 4.953125 C 1.574219 5.59375 1.730469 6.222656 2.03125 6.789062 C 2.332031 7.351562 2.769531 7.832031 3.300781 8.1875 C 2.683594 8.167969 2.082031 8 1.542969 7.699219 L 1.542969 7.75 C 1.542969 8.648438 1.851562 9.515625 2.417969 10.210938 C 2.988281 10.902344 3.777344 11.378906 4.65625 11.558594 C 4.085938 11.710938 3.484375 11.734375 2.902344 11.625 C 3.152344 12.394531 3.632812 13.070312 4.285156 13.554688 C 4.933594 14.035156 5.71875 14.304688 6.527344 14.320312 C 5.152344 15.398438 3.457031 15.984375 1.707031 15.980469 C 1.398438 15.980469 1.089844 15.964844 0.78125 15.925781 C 2.554688 17.070312 4.621094 17.675781 6.730469 17.671875 C 13.871094 17.671875 17.777344 11.757812 17.777344 6.625 C 17.777344 6.460938 17.773438 6.292969 17.765625 6.125 C 18.523438 5.574219 19.179688 4.894531 19.699219 4.117188 Z M 19.703125 4.113281 \"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTwitter);\nexport default __webpack_public_path__ + \"static/media/twitter.104393b5.svg\";\nexport { ForwardRef as ReactComponent };","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTelegram(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"32pt\",\n    height: \"32pt\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"surface1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"#253449\",\n      fillOpacity: 1\n    },\n    d: \"M 28.402344 3.832031 C 28.089844 3.84375 27.785156 3.933594 27.511719 4.042969 C 27.242188 4.148438 25.683594 4.816406 23.378906 5.800781 C 21.078125 6.785156 18.085938 8.066406 15.117188 9.335938 C 9.183594 11.878906 3.351562 14.382812 3.351562 14.382812 L 3.394531 14.363281 C 3.394531 14.363281 3.042969 14.484375 2.6875 14.730469 C 2.507812 14.855469 2.316406 15.015625 2.160156 15.25 C 2 15.484375 1.886719 15.816406 1.929688 16.167969 C 2.082031 17.398438 3.359375 17.746094 3.359375 17.746094 L 3.363281 17.75 L 9.0625 19.699219 C 9.207031 20.183594 10.789062 25.46875 11.136719 26.585938 C 11.328125 27.203125 11.511719 27.5625 11.699219 27.804688 C 11.792969 27.925781 11.890625 28.019531 12 28.089844 C 12.042969 28.117188 12.085938 28.136719 12.132812 28.15625 C 12.132812 28.15625 12.132812 28.15625 12.136719 28.15625 C 12.140625 28.160156 12.144531 28.160156 12.152344 28.160156 L 12.136719 28.15625 C 12.148438 28.160156 12.15625 28.167969 12.167969 28.171875 C 12.1875 28.179688 12.199219 28.179688 12.226562 28.183594 C 12.878906 28.414062 13.417969 27.988281 13.417969 27.988281 L 13.441406 27.972656 L 16.941406 24.726562 L 22.621094 29.15625 L 22.691406 29.1875 C 23.6875 29.628906 24.585938 29.382812 25.082031 28.976562 C 25.582031 28.574219 25.777344 28.050781 25.777344 28.050781 L 25.796875 27.996094 L 29.972656 6.242188 C 30.078125 5.753906 30.09375 5.332031 29.992188 4.953125 C 29.894531 4.574219 29.648438 4.242188 29.339844 4.058594 C 29.035156 3.875 28.714844 3.816406 28.402344 3.832031 Z M 28.433594 5.132812 C 28.5625 5.125 28.65625 5.140625 28.683594 5.160156 C 28.714844 5.175781 28.726562 5.175781 28.757812 5.28125 C 28.785156 5.386719 28.800781 5.613281 28.722656 5.96875 L 28.71875 5.976562 L 24.570312 27.601562 C 24.558594 27.625 24.472656 27.824219 24.277344 27.984375 C 24.074219 28.148438 23.851562 28.277344 23.257812 28.027344 L 17.046875 23.183594 L 16.871094 23.046875 L 16.867188 23.050781 L 15.007812 21.65625 L 25.449219 9.375 C 25.613281 9.183594 25.648438 8.910156 25.539062 8.683594 C 25.429688 8.457031 25.195312 8.3125 24.945312 8.320312 C 24.824219 8.324219 24.707031 8.359375 24.605469 8.425781 L 9.5 18.496094 L 3.792969 16.542969 C 3.792969 16.542969 3.226562 16.226562 3.199219 16.007812 C 3.199219 15.996094 3.191406 16.007812 3.222656 15.964844 C 3.25 15.917969 3.324219 15.847656 3.417969 15.78125 C 3.601562 15.652344 3.816406 15.574219 3.816406 15.574219 L 3.835938 15.566406 L 3.859375 15.558594 C 3.859375 15.558594 9.6875 13.054688 15.621094 10.515625 C 18.589844 9.242188 21.582031 7.960938 23.882812 6.976562 C 26.183594 5.992188 27.847656 5.285156 27.988281 5.230469 C 28.148438 5.164062 28.308594 5.136719 28.433594 5.132812 Z M 21.511719 12.027344 L 13.597656 21.339844 L 13.59375 21.34375 C 13.582031 21.359375 13.570312 21.375 13.558594 21.390625 C 13.546875 21.410156 13.535156 21.425781 13.523438 21.445312 C 13.476562 21.519531 13.449219 21.605469 13.4375 21.691406 C 13.4375 21.691406 13.4375 21.695312 13.4375 21.695312 L 12.40625 26.332031 C 12.390625 26.285156 12.378906 26.265625 12.359375 26.207031 L 12.359375 26.203125 C 12.03125 25.152344 10.539062 20.171875 10.332031 19.480469 Z M 14.488281 22.867188 L 15.914062 23.933594 L 13.824219 25.871094 Z M 14.488281 22.867188 \"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTelegram);\nexport default __webpack_public_path__ + \"static/media/telegram.3ff11bad.svg\";\nexport { ForwardRef as ReactComponent };","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDiscord(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"20pt\",\n    height: \"20pt\",\n    viewBox: \"0 0 20 20\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"surface1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"#253449\",\n      fillOpacity: 1\n    },\n    d: \"M 16.929688 3.742188 C 15.65625 3.167969 14.289062 2.742188 12.859375 2.5 C 12.847656 2.5 12.835938 2.5 12.824219 2.507812 C 12.808594 2.511719 12.800781 2.519531 12.792969 2.53125 C 12.621094 2.839844 12.425781 3.238281 12.289062 3.558594 C 10.773438 3.332031 9.230469 3.332031 7.714844 3.558594 C 7.5625 3.207031 7.390625 2.863281 7.199219 2.53125 C 7.195312 2.519531 7.183594 2.511719 7.171875 2.503906 C 7.160156 2.5 7.148438 2.496094 7.136719 2.5 C 5.707031 2.742188 4.339844 3.167969 3.0625 3.742188 C 3.054688 3.746094 3.042969 3.753906 3.039062 3.765625 C 0.445312 7.578125 -0.265625 11.296875 0.0820312 14.96875 C 0.0820312 14.976562 0.0859375 14.984375 0.0898438 14.992188 C 0.09375 15 0.101562 15.007812 0.109375 15.011719 C 1.621094 16.117188 3.308594 16.953125 5.101562 17.496094 C 5.113281 17.5 5.128906 17.5 5.140625 17.496094 C 5.152344 17.492188 5.164062 17.484375 5.171875 17.476562 C 5.558594 16.957031 5.902344 16.414062 6.195312 15.839844 C 6.210938 15.804688 6.195312 15.765625 6.160156 15.753906 C 5.621094 15.550781 5.101562 15.304688 4.601562 15.019531 C 4.589844 15.015625 4.582031 15.007812 4.578125 15 C 4.574219 14.992188 4.570312 14.980469 4.570312 14.96875 C 4.566406 14.960938 4.570312 14.949219 4.574219 14.941406 C 4.578125 14.929688 4.585938 14.921875 4.59375 14.917969 C 4.699219 14.839844 4.804688 14.757812 4.902344 14.675781 C 4.914062 14.671875 4.921875 14.664062 4.933594 14.664062 C 4.945312 14.664062 4.957031 14.664062 4.96875 14.667969 C 8.242188 16.140625 11.785156 16.140625 15.019531 14.667969 C 15.03125 14.664062 15.042969 14.664062 15.054688 14.664062 C 15.066406 14.664062 15.074219 14.667969 15.085938 14.675781 C 15.183594 14.757812 15.289062 14.839844 15.394531 14.917969 C 15.402344 14.921875 15.410156 14.929688 15.414062 14.941406 C 15.417969 14.949219 15.421875 14.960938 15.421875 14.96875 C 15.421875 14.980469 15.417969 14.992188 15.410156 15 C 15.40625 15.007812 15.398438 15.015625 15.390625 15.019531 C 14.890625 15.308594 14.375 15.550781 13.828125 15.75 C 13.820312 15.753906 13.8125 15.757812 13.808594 15.765625 C 13.800781 15.773438 13.796875 15.78125 13.792969 15.789062 C 13.789062 15.796875 13.789062 15.804688 13.789062 15.8125 C 13.789062 15.824219 13.789062 15.832031 13.796875 15.839844 C 14.09375 16.410156 14.4375 16.957031 14.816406 17.472656 C 14.824219 17.484375 14.835938 17.492188 14.847656 17.496094 C 14.859375 17.5 14.875 17.5 14.886719 17.496094 C 16.679688 16.957031 18.371094 16.117188 19.886719 15.011719 C 19.894531 15.007812 19.902344 15 19.90625 14.992188 C 19.910156 14.984375 19.914062 14.976562 19.914062 14.96875 C 20.332031 10.722656 19.214844 7.035156 16.957031 3.765625 C 16.949219 3.757812 16.941406 3.746094 16.929688 3.742188 Z M 6.683594 12.730469 C 5.699219 12.730469 4.886719 11.839844 4.886719 10.75 C 4.886719 9.65625 5.683594 8.765625 6.683594 8.765625 C 7.691406 8.765625 8.496094 9.664062 8.480469 10.75 C 8.480469 11.839844 7.683594 12.730469 6.683594 12.730469 Z M 13.328125 12.730469 C 12.34375 12.730469 11.53125 11.839844 11.53125 10.75 C 11.53125 9.65625 12.328125 8.765625 13.328125 8.765625 C 14.335938 8.765625 15.140625 9.664062 15.125 10.75 C 15.125 11.839844 14.339844 12.730469 13.328125 12.730469 Z M 13.328125 12.730469 \"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDiscord);\nexport default __webpack_public_path__ + \"static/media/discord.86093057.svg\";\nexport { ForwardRef as ReactComponent };","import { SvgIcon, Link } from \"@mui/material\";\r\nimport { Flex } from \"@pancakeswap/uikit\";\r\nimport { ReactComponent as GitHub } from \"../../../assets/icons/github.svg\";\r\nimport { ReactComponent as Twitter } from \"../../../assets/icons/twitter.svg\";\r\nimport { ReactComponent as Telegram } from \"../../../assets/icons/telegram.svg\";\r\nimport { ReactComponent as Discord } from \"../../../assets/icons/discord.svg\";\r\n\r\nexport default function Social({mobileOpen}) {\r\n    return (\r\n        <Flex className=\"social-row\" flexDirection={mobileOpen ? \"row\" : \"column\"} alignItems=\"center\">\r\n            <Link href=\"https://github.com/\" target=\"_blank\">\r\n                <SvgIcon color=\"primary\" component={GitHub} />\r\n            </Link>\r\n\r\n            <Link href=\"https://twitter.com/\" target=\"_blank\">\r\n                <SvgIcon color=\"primary\" component={Twitter} />\r\n            </Link>\r\n\r\n            <Link href=\"https://t.me/\" target=\"_blank\">\r\n                <SvgIcon viewBox=\"0 0 32 32\" color=\"primary\" component={Telegram} />\r\n            </Link>\r\n\r\n            <Link href=\"https://discord.gg/\" target=\"_blank\">\r\n                <SvgIcon color=\"primary\" component={Discord} />\r\n            </Link>\r\n        </Flex>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/stake.f331f86d.svg\";","export default __webpack_public_path__ + \"static/media/Dashboard.f55374b6.png\";","export default __webpack_public_path__ + \"static/media/SafeFarms.3ae22abe.png\";","export default __webpack_public_path__ + \"static/media/Farms.b613ed1b.png\";","export default __webpack_public_path__ + \"static/media/Stake.219b74ff.png\";","export default __webpack_public_path__ + \"static/media/Earn.8ddf65df.png\";","export default __webpack_public_path__ + \"static/media/SafePad.743e4afe.png\";","export default __webpack_public_path__ + \"static/media/referral.2761d8a7.svg\";","export default __webpack_public_path__ + \"static/media/swap.4a1e8c49.svg\";","import { useCallback, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Social from \"./social\";\r\nimport { Link } from \"@mui/material\";\r\nimport \"./drawer-content.scss\";\r\nimport DocsIcon from \"../../../assets/icons/stake.svg\";\r\nimport classnames from \"classnames\";\r\nimport DashboardIcon from \"../../../assets/icons/Dashboard.png\";\r\nimport SafeFarmIcon from \"../../../assets/icons/SafeFarms.png\";\r\nimport FarmsIcon from \"../../../assets/icons/Farms.png\";\r\nimport StakeIcon from \"../../../assets/icons/Stake.png\";\r\nimport EarnIcon from \"../../../assets/icons/Earn.png\";\r\nimport SafePadIcon from \"../../../assets/icons/SafePad.png\";\r\nimport ReferralIcon from \"../../../assets/icons/referral.svg\";\r\nimport SwapIcon from \"../../../assets/icons/swap.svg\";\r\n\r\n\r\n\r\nfunction NavContent({mobileOpen, isSmallerScreen}) {\r\n    const [isActive] = useState();\r\n\r\n    const checkPage = useCallback((location, page) => {\r\n        const currentPath = location.pathname.replace(\"/\", \"\");\r\n        if (currentPath.indexOf(\"dashboard\") >= 0 && page === \"dashboard\") {\r\n            return true;\r\n        }\r\n        if (currentPath === \"farms\" && page === \"farms\") {\r\n            return true;\r\n        }\r\n        if (currentPath === \"pools\" && page === \"pools\") {\r\n            return true;\r\n        }\r\n        if (currentPath.indexOf(\"safestake\") >= 0 && page === \"safestake\") {\r\n            return true;\r\n        }\r\n        if (currentPath.indexOf(\"safefarms\") >= 0 && page === \"safefarms\") {\r\n            return true;\r\n        }\r\n        if (currentPath.indexOf(\"safepad\") >= 0 && page === \"safepad\") {\r\n            return true;\r\n        }\r\n        if (currentPath.indexOf(\"swap\") >= 0 && page === \"swap\") {\r\n            return true;\r\n        }\r\n        if (currentPath.indexOf(\"referral\") >= 0 && page === \"referral\") {\r\n            return true;\r\n        }\r\n        if (currentPath.indexOf(\"safetools\") >= 0 && page === \"safetools\") {\r\n            return true;\r\n        }\r\n        if (currentPath.indexOf(\"safelock\") >= 0 && page === \"safelock\") {\r\n            return true;\r\n        }\r\n        if (currentPath.indexOf(\"calculator\") >= 0 && page === \"calculator\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"dapp-sidebar\" style={{minWidth: mobileOpen ? 280 : 50, paddingTop: isSmallerScreen ? 20 : 100}}>\r\n            <div className=\"dapp-menu-links\">\r\n                <div className=\"dapp-nav\">\r\n                    <Link\r\n                        component={NavLink}\r\n                        to=\"/dashboard\"\r\n                        isActive={(match, location) => {\r\n                            return checkPage(location, \"dashboard\");\r\n                        }}\r\n                        className={classnames(\"button-dapp-menu\", { active: isActive })}\r\n                    >\r\n                        <div className=\"dapp-menu-item\">\r\n                            <img alt=\"\" src={DashboardIcon} style={{marginRight: mobileOpen ? 10 : 0}}  />\r\n                            {mobileOpen && <p>Dashboard</p>}\r\n                        </div>\r\n                    </Link>\r\n\r\n                    <Link\r\n                        component={NavLink}\r\n                        to=\"/safefarms\"\r\n                        isActive={(match, location) => {\r\n                            return checkPage(location, \"safefarms\");\r\n                        }}\r\n                        className={classnames(\"button-dapp-menu\", { active: isActive })}\r\n                    >\r\n                        <div className=\"dapp-menu-item\">\r\n                            <img alt=\"\" src={SafeFarmIcon} style={{marginRight: mobileOpen ? 10 : 0}}  />\r\n                            {mobileOpen && <p>SafeFarms</p>}\r\n                        </div>\r\n                    </Link>\r\n\r\n                    <div className=\"safe-sublink\">\r\n                        <Link\r\n                            component={NavLink}\r\n                            to=\"/farms\"\r\n                            isActive={(match, location) => {\r\n                                return checkPage(location, \"farms\");\r\n                            }}\r\n                            className={classnames(\"button-dapp-menu\", { active: isActive })}\r\n                            style={{marginLeft: mobileOpen ? 32 : 20}}\r\n                        >\r\n                            <div className=\"dapp-menu-item\">\r\n                                <img alt=\"\" src={FarmsIcon} style={{marginRight: mobileOpen ? 10 : 0}} />\r\n                                {mobileOpen && <p>Farms</p>}\r\n                            </div>\r\n                        </Link>\r\n                        <Link\r\n                            component={NavLink}\r\n                            to=\"/pools\"\r\n                            isActive={(match, location) => {\r\n                                return checkPage(location, \"pools\");\r\n                            }}\r\n                            className={classnames(\"button-dapp-menu\", { active: isActive })}\r\n                            style={{marginLeft: mobileOpen ? 32 : 20}}\r\n                        >\r\n                            <div className=\"dapp-menu-item\">\r\n                                <img alt=\"\" src={StakeIcon} style={{marginRight: mobileOpen ? 10 : 0}} />\r\n                                {mobileOpen && <p>Pools</p>}\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <Link\r\n                        component={NavLink}\r\n                        to=\"/safestake\"\r\n                        isActive={(match, location) => {\r\n                            return checkPage(location, \"safestake\");\r\n                        }}\r\n                        className={classnames(\"button-dapp-menu\", { active: isActive })}\r\n                    >\r\n                        <div className=\"dapp-menu-item\">\r\n                            <img alt=\"\" src={EarnIcon} style={{marginRight: mobileOpen ? 10 : 0}} />\r\n                            {mobileOpen && <p>SafeStake</p>}\r\n                        </div>\r\n                    </Link>\r\n\r\n                    <Link\r\n                        component={NavLink}\r\n                        to=\"/safepad\"\r\n                        isActive={(match, location) => {\r\n                            return checkPage(location, \"safepad\");\r\n                        }}\r\n                        className={classnames(\"button-dapp-menu\", { active: isActive })}\r\n                    >\r\n                        <div className=\"dapp-menu-item\">\r\n                            <img alt=\"\" src={SafePadIcon} style={{marginRight: mobileOpen ? 10 : 0}} />\r\n                            {mobileOpen && <p>SafePad</p>}\r\n                        </div>\r\n                    </Link>\r\n\r\n                    <Link\r\n                        component={NavLink}\r\n                        to=\"/swap\"\r\n                        isActive={(match, location) => {\r\n                            return checkPage(location, \"swap\");\r\n                        }}\r\n                        className={classnames(\"button-dapp-menu\", { active: isActive })}\r\n                    >\r\n                        <div className=\"dapp-menu-item\">\r\n                            <img alt=\"\" src={SwapIcon} style={{marginRight: mobileOpen ? 10 : 0}} />\r\n                            {mobileOpen && <p>Swap</p>}\r\n                        </div>\r\n                    </Link>\r\n\r\n                    <Link\r\n                        component={NavLink}\r\n                        to=\"/referral\"\r\n                        isActive={(match, location) => {\r\n                            return checkPage(location, \"referral\");\r\n                        }}\r\n                        className={classnames(\"button-dapp-menu\", { active: isActive })}\r\n                    >\r\n                        <div className=\"dapp-menu-item\">\r\n                            <img alt=\"\" src={ReferralIcon} style={{marginRight: mobileOpen ? 10 : 0}} />\r\n                            {mobileOpen && <p>Referral</p>}\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"dapp-menu-doc-link\">\r\n                <Link href=\"/\" target=\"_blank\">\r\n                    <img alt=\"\" src={DocsIcon} style={{marginRight: mobileOpen ? 10 : 0}} />\r\n                    {mobileOpen && <p>Docs</p>}\r\n                </Link>\r\n            </div>\r\n            <Social mobileOpen={mobileOpen} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavContent;\r\n","import { makeStyles } from '@mui/styles';\r\nimport { Drawer } from \"@mui/material\";\r\nimport DrawerContent from \"./drawer-content\";\r\n\r\nconst useStyles = makeStyles({\r\n    drawerPaper: {\r\n        borderRight: 0,\r\n    },\r\n});\r\n\r\nexport default function Sidebar({ mobileOpen }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Drawer \r\n            variant=\"permanent\" \r\n            anchor=\"left\" \r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <DrawerContent mobileOpen={mobileOpen} />\r\n        </Drawer>\r\n    );\r\n}\r\n","import { makeStyles } from '@mui/styles';\r\nimport { Drawer } from \"@mui/material\";\r\nimport DrawerContent from \"./drawer-content\";\r\n\r\nconst useStyles = makeStyles({\r\n    drawerPaper: {\r\n        width: 280,\r\n        marginTop: 80,\r\n        borderRight: 0,\r\n    },\r\n});\r\n\r\nexport default function NavDrawer({ mobileOpen, handleDrawerToggle, isSmallerScreen }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Drawer\r\n            variant=\"temporary\"\r\n            anchor=\"left\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            onClick={handleDrawerToggle}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n                keepMounted: true,\r\n            }}\r\n        >\r\n            <DrawerContent mobileOpen={mobileOpen} isSmallerScreen={isSmallerScreen} />\r\n        </Drawer>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/simple-light-blue-background.55d26cf1.jpg\";","import React, { useState } from \"react\";\r\nimport \"./view-base.scss\";\r\nimport Header from \"../Header\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport { makeStyles } from '@mui/styles';\r\nimport Drawer from \"../Drawer\";\r\nimport MobileDrawer from \"../Drawer/mobile-drawer\";\r\n\r\nimport Background from \"../../assets/images/simple-light-blue-background.jpg\";\r\n\r\nconst useStyles = makeStyles({\r\n    drawer: {\r\n        \"@media (min-width: 960px)\": {\r\n            width: 280,\r\n            flexShrink: 0,\r\n        }\r\n    },\r\n    content: {\r\n        transition: 'margin 969ms cubic-bezier(0.0, 0, 0.2, 1) 0ms',\r\n        height: \"100%\",\r\n        overflow: \"auto\",\r\n        marginLeft: 280,\r\n    },\r\n    contentShift: {\r\n        transition: 'margin 969ms cubic-bezier(0.0, 0, 0.2, 1) 0ms',\r\n        marginLeft: 50,\r\n    },\r\n    contentMobile: {\r\n        transition: 'margin 969ms cubic-bezier(0.0, 0, 0.2, 1) 0ms',\r\n        marginLeft: 0,\r\n    },\r\n});\r\n\r\nfunction ViewBase({ children }) {\r\n    const classes = useStyles();\r\n\r\n    const [mobileOpen, setMobileOpen] = useState(true);\r\n    const isSmallerScreen = useMediaQuery(\"(max-width: 960px)\");\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    return (\r\n        <div className=\"view-base-root\" style={{backgroundImage: `url(${Background})`}}>\r\n            <Header mobileOpen={mobileOpen} handleDrawerToggle={handleDrawerToggle} />\r\n            <div className={classes.drawer}>\r\n                {!isSmallerScreen && <Drawer mobileOpen={mobileOpen} />}\r\n                {isSmallerScreen && <MobileDrawer mobileOpen={mobileOpen} handleDrawerToggle={handleDrawerToggle} isSmallerScreen={isSmallerScreen} />}\r\n            </div>\r\n            <div className={`${classes.content} ${!mobileOpen && classes.contentShift} ${isSmallerScreen && classes.contentMobile}`}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewBase;\r\n","import styled from 'styled-components';\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n    padding: 0;\n  }\n`\n\nexport default FlexLayout\n","import { Box } from '@pancakeswap/uikit';\n\nconst Container = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import React from 'react';\nimport styled from 'styled-components';\nimport Container from './Container';\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst Page = ({ children, symbol, ...props }) => {\n  return (\n    <>\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { serializeTokens } from './tokens'\r\n\r\nconst serializedTokens = serializeTokens()\r\n\r\nconst farms = [\r\n  {\r\n    pid: 5,\r\n    stakeSymbol: 'SLT',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x869F4e106c8f2b9062F93Db214FE23Fb073873e1',    \r\n    },\r\n    token: serializedTokens.slt, \r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x8741032865eB50e894Bc68331831e7e0220d5B9F\",\r\n    isStatus: 'active'\r\n  },\r\n  {\r\n    pid: 6,\r\n    stakeSymbol: 'BNB',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n    },\r\n    token: serializedTokens.wbnb,\r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x5A191385e8a9C437E5b04eFf07cf9259102Bab65\",\r\n    isStatus: 'active'\r\n  },\r\n  {\r\n    pid: 7,\r\n    stakeSymbol: 'ETH',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\r\n    },\r\n    token: serializedTokens.eth,    \r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x32a8953Aa0822D22bbBd6a8F2F9374750601ca5b\",\r\n    isStatus: 'active'\r\n  },\r\n  {\r\n    pid: 8,\r\n    stakeSymbol: 'BUSD-BNB',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\r\n    },\r\n    token: serializedTokens.busd,    \r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x5c040B417b4e0444D7fE5e61568b8efDF4D03fA2\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 28,\r\n    stakeSymbol: 'HAVEN',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x63373252f5090B3CEE061348D627A17cf6Ab360F',\r\n    },\r\n    token: serializedTokens.haven,    \r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x7ba58e11671D01e18B4E511c827d94C2fc0bf06e\",\r\n    isStatus: 'active'\r\n  },\r\n  {\r\n    pid: 29,\r\n    stakeSymbol: 'CAKE',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\r\n    },\r\n    token: serializedTokens.cake,    \r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x0Be018d4a3653869bB6AD67118C9C9Bf656cA9B0\",\r\n    isStatus: 'active'\r\n  },\r\n  {\r\n    pid: 30,\r\n    stakeSymbol: 'BTCB',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\r\n    },\r\n    token: serializedTokens.btcb,    \r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x92dfb8d6D8c0413CA31488984969D87D83fe6fE2\",\r\n    isStatus: 'active'\r\n  },\r\n  {\r\n    pid: 31,\r\n    stakeSymbol: 'BUSD',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\r\n    },\r\n    token: serializedTokens.busd,    \r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0xe96cd73154cb9996cEEA03BC783FBDA028Cbdc46\",\r\n    isStatus: 'active'\r\n  },\r\n  // {\r\n  //   pid: 32,\r\n  //   stakeSymbol: 'USDC',\r\n  //   lpAddresses: {\r\n  //     97: '',\r\n  //     56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\r\n  //   },\r\n  //   token: serializedTokens.usdc,\r\n  //   quoteToken: serializedTokens.wbnb,\r\n  //   strat: \"0xd07942AB32f8493fb6fca353bf1CA66078B32aEd\",\r\n  //   isStatus: 'active'\r\n  // },\r\n]\r\n\r\nexport default farms\r\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { useContext } from 'react'\r\nimport { RefreshContext } from '../contexts/RefreshContext';\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from './contractHelpers'\n\nconst multicall = async (abi, calls) => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n    \n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\nexport const multicallv2 = async (\n  abi,\n  calls,\n  options = { requireSuccess: true },\n) => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","\nimport BigNumber from 'bignumber.js';\nimport safechefABI from '../../../abi/safeChef.json';\nimport erc20 from '../../../abi/erc20.json';\nimport strategyChefABI from '../../../abi/strategyChef.json';\nimport { getAddress, getSafeChefAddress } from '../../../utils/addressHelpers';\nimport { BIG_TEN, BIG_ZERO } from '../../../utils/bigNumber';\nimport multicall from '../../../utils/multicall';\n\nconst fetchStake = async (stake) => {\n  const { pid, lpAddresses, token, quoteToken } = stake\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    {\n      address: token.address,\n      name: 'balanceOf',\n      params: [token.address],\n    },\n    // Balance of token in the LP contract\n    {\n      address: token.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: quoteToken.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Token decimals\n    {\n      address: token.address,\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: quoteToken.address,\n      name: 'decimals',\n    },\n  ]\n  const [tokenBalance, tokenBalanceLP, quoteTokenBalanceLP, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n  const [ratio] =\n    pid || pid === 0 \n      ? await multicall(strategyChefABI, [\n        {\n          address: stake.strat,\n          name: 'wantLockedTotal',\n        }\n      ]) : [null, null]\n\n  let ratioNumber = parseFloat(ratio)\n  let stakeTokenRatio = new BigNumber(ratio).div(BIG_TEN.pow(18))\n  if (ratioNumber < 1) {\n    stakeTokenRatio = new BigNumber(1).div(BIG_TEN.pow(18))\n  }\n    \n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const tokenAmountContract = new BigNumber(tokenBalance).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  const tokenAmountTotalInContract = new BigNumber(tokenBalance).div(BIG_TEN.pow(tokenDecimals))\n\n  const tokenAmountMc = tokenAmountContract.times(stakeTokenRatio)\n\n  const stakedTotalToken = tokenAmountMc.times(new BigNumber(2))\n\n  const masterChefABI = safechefABI;\n  const [info, totalAllocPoint, earningsPerBlock] =\n    pid || pid === 0\n      ? await multicall(masterChefABI, [\n          {\n            address: getSafeChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getSafeChefAddress(),\n            name: 'totalAllocPoint',\n          },\n          {\n            address: getSafeChefAddress(),\n            name: 'EarningsPerBlock',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  const lastRewardBlock = info ? new BigNumber(info.lastRewardBlock._hex) : BIG_ZERO\n  const accEarningsPerShare = info ? new BigNumber(info.accEarningsPerShare._hex) : BIG_ZERO\n  const stratAddress = info ? info.strat : ''\n  const depositFeeBP = info ? info.depositFeeBP : 0\n  const isWithdrawFee = info ? info.isWithdrawFee : 0\n  const isCommunity = false\n  return {\n    tokenAmountTotal: tokenAmountTotalInContract.toJSON(),\n    stakedTotalToken: stakedTotalToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n    earningsPerBlock: (new BigNumber(earningsPerBlock)).div(BIG_TEN.pow(18)),\n    stakeTokenRatio,\n    lastRewardBlock,\n    accEarningsPerShare,\n    stratAddress,\n    depositFeeBP,\n    isWithdrawFee,\n    isCommunity,\n  }\n}\n\nexport default fetchStake","import fetchPublicStakeData from './fetchPublicStakeData'\n\nconst fetchStake = async (stake) => {\n  const stakePublicData = await fetchPublicStakeData(stake)\n  return { ...stake, ...stakePublicData }\n}\n\nexport default fetchStake\n","import fetchStake from './fetchStake'\n\nconst fetchStakes = async (stakesToFetch) => {\n  const data = await Promise.all(\n    stakesToFetch.map(async (stakeConfig) => {\n      const stake = await fetchStake(stakeConfig)\n      const serializedStake = { ...stake, token: stake.token }\n      return serializedStake\n    }),\n  )\n  return data\n}\n\nexport default fetchStakes\n","import BigNumber from 'bignumber.js';\nimport erc20ABI from '../../../abi/erc20.json';\nimport safechefABI from '../../../abi/safeChef.json';\nimport multicall from '../../../utils/multicall';\nimport { getSafeChefAddress } from '../../../utils/addressHelpers';\n\nexport const fetchStakeUserAllowances = async (account, stakesToFetch) => {\n  const safeChefAddress = getSafeChefAddress()\n\n  const calls = stakesToFetch.map((stake) => {\n    return { address: stake.token.address, name: 'allowance', params: [account, safeChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchStakeUserTokenBalances = async (account, stakesToFetch) => {\n  const calls = stakesToFetch.map((stake) => {\n    return {\n      address: stake.token.address,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchStakeUserStakedBalances = async (account, stakesToFetch) => {\n  const safeChefAddress = getSafeChefAddress()\n\n  const calls = stakesToFetch.map((stake) => {\n    return {\n      address: safeChefAddress,\n      name: 'userInfo',\n      params: [stake.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(safechefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchStakeUserEarnings = async (account, stakesToFetch) => {\n  const safeChefAddress = getSafeChefAddress()\n\n  const calls = stakesToFetch.map((stake) => {\n    return {\n      address: safeChefAddress,\n      name: 'pendingEarnings',\n      params: [stake.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(safechefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n\nexport const fetchStakeWithdrawFee = async (account, stakesToFetch) => {\n  const safeChefAddress = getSafeChefAddress()\n\n  const calls = stakesToFetch.map((stake) => {\n    return {\n      address: safeChefAddress,\n      name: 'getWithdrawFee',\n      params: [stake.pid, account],\n    }\n  })\n  const fees = await multicall(safechefABI, calls)\n  const withdrawFee = fees.map((fee) => {\n    return new BigNumber(fee).toJSON()\n  })\n  return withdrawFee\n}\n\nexport const fetchStakeUserLastDepositTime = async (account, stakesToFetch) => {\n  const safeChefAddress = getSafeChefAddress()\n\n  const calls = stakesToFetch.map((stake) => {\n    return {\n      address: safeChefAddress,\n      name: 'userInfo',\n      params: [stake.pid, account],\n    }\n  })\n  const rawLastDepositTimes = await multicall(safechefABI, calls)\n  const lastDepositTimes = rawLastDepositTimes.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[2]._hex).toJSON()\n  })\n  return lastDepositTimes\n}","/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (\n  farms,\n  preferredQuoteTokens = ['BUSD', 'WBNB'],\n) => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from '../../../utils/bigNumber';\nimport { filterFarmsByQuoteToken } from '../../../utils/farmsPriceHelpers'\nimport tokens from '../../../constants/tokens';\n\nconst getFarmFromTokenSymbol = (\n  farms,\n  tokenSymbol,\n  preferredQuoteTokens,\n) => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (\n  farm,\n  quoteTokenFarm,\n  bnbPriceBusd,\n) => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === tokens.busd.symbol) {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === tokens.wbnb.symbol) {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or WBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === tokens.wbnb.symbol) {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === tokens.busd.symbol) {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/WBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (\n  farm,\n  quoteTokenFarm,\n  bnbPriceBusd,\n) => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'WBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'WBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  \n  const bnbBusdFarm = farms.find((farm) => farm.pid === 8)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const tokenPriceBusd = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPriceBusd = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    return {\n      ...farm,\n      tokenPriceBusd: tokenPriceBusd.toJSON(),\n      quoteTokenPriceBusd: quoteTokenPriceBusd.toJSON(),\n    }\n  })\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR } from '../constants';\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new haven allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice,\n  rewardTokenPrice,\n  totalStaked,\n  tokenPerBlock,\n) => {\n  let totalAmount = totalStaked;\n  if (parseFloat(totalStaked) < 0.00001) {\n    totalAmount = 1 / Math.pow(10, 36);\n  }\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(new BigNumber(BLOCKS_PER_YEAR))\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(new BigNumber(totalAmount))\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? 0 : apr.toNumber()\n}\n\n\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param sltPriceUsd SLT price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n *@param tokenPerBlock Amount of new haven allocated to the pool for each new block\n * @returns Farm Apr\n */\n export const getFarmApr = (\n  poolWeight,\n  sltPriceUsd,\n  poolLiquidityUsd,\n  tokenPerBlock,\n) => {\n  let totalAmount = poolLiquidityUsd;\n  if (parseFloat(poolLiquidityUsd) < 0.00001) {\n    totalAmount = 1 / Math.pow(10, 36);\n  }\n  const yearlySltRewardAllocation = (new BigNumber(poolWeight)).times(BLOCKS_PER_YEAR).times(tokenPerBlock)\n  const apr = yearlySltRewardAllocation.times(sltPriceUsd).div(totalAmount).times(100)\n  return apr.isNaN() || !apr.isFinite() ? 0 : apr.toNumber()\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js';\nimport stakesConfig from '../../../constants/stake';\nimport fetchStakes from './fetchStakes'\nimport {\n  fetchStakeUserEarnings,\n  fetchStakeUserAllowances,\n  fetchStakeUserTokenBalances,\n  fetchStakeUserStakedBalances,\n  fetchStakeUserLastDepositTime,\n  fetchStakeWithdrawFee\n} from './fetchStakeUser'\nimport fetchFarmsPrices from '../farms-slice/fetchFarmsPrices'\nimport { BIG_ZERO } from '../../../utils/bigNumber'\nimport { getPoolApr } from '../../../utils/apr';\n\nconst noAccountStakeConfig = stakesConfig.map((stake) => ({\n  ...stake,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState = {\n  data: noAccountStakeConfig,\n  userDataLoaded: false,\n}\n\nexport const fetchStakesPublicDataAsync = createAsyncThunk(\n  'stakes/fetchStakesPublicDataAsync',\n  async (pids) => {\n    const stakesToFetch = stakesConfig.filter((stakeConfig) => pids.includes(stakeConfig.pid))\n\n    const stakes = await fetchStakes(stakesToFetch)\n    const stakesWithPrices = await fetchFarmsPrices(stakes)\n\n    const stakesWithoutHelperLps = stakesWithPrices.filter((stake) => {\n      return stake.pid || stake.pid === 0\n    })\n    const tvlStakes = stakesWithoutHelperLps.filter(stake => stake.pid === 5)\n    const tvlPriceBusd = tvlStakes[0].tokenPriceBusd\n    const stakesWithApr = stakesWithoutHelperLps.map((stake) => {\n      const totalLiquidity = new BigNumber(stake.stakeTokenRatio).times(stake.tokenPriceBusd) || BIG_ZERO\n      const apr = getPoolApr(\n        stake.tokenPriceBusd,\n        new BigNumber(tvlPriceBusd),\n        stake.stakeTokenRatio,\n        new BigNumber(stake.earningsPerBlock),\n      )\n      return { ...stake, liquidity: totalLiquidity, apr }\n    })\n    return stakesWithApr\n  },\n)\n\nexport const fetchStakeUserDataAsync = createAsyncThunk(\n  'stakes/fetchStakeUserDataAsync',\n  async ({ account, pids }) => {\n    const stakesToFetch = stakesConfig.filter((stakeConfig) => pids.includes(stakeConfig.pid))\n    const userStakeAllowances = await fetchStakeUserAllowances(account, stakesToFetch)\n    const userStakeTokenBalances = await fetchStakeUserTokenBalances(account, stakesToFetch)\n    const userStakedBalances = await fetchStakeUserStakedBalances(account, stakesToFetch)\n    const userStakeEarnings = await fetchStakeUserEarnings(account, stakesToFetch)\n    const userFarmWithdrawFee = await fetchStakeWithdrawFee(account, stakesToFetch)\n    const lastDepositTime = await fetchStakeUserLastDepositTime(account, stakesToFetch)\n\n    return userStakeAllowances.map((stakeAllowance, index) => {\n      return {\n        pid: stakesToFetch[index].pid,\n        allowance: userStakeAllowances[index],\n        tokenBalance: userStakeTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userStakeEarnings[index],\n        withdrawFee: userFarmWithdrawFee[index] / 100,\n        lastDepositTime: lastDepositTime[index]\n      }\n    })\n  },\n)\n\nexport const stakesSlice = createSlice({\n  name: 'Stakes',\n  initialState,\n  extraReducers: (builder) => {\n    builder.addCase(fetchStakesPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((stake) => {\n        const liveStakeData = action.payload.find((stakeData) => stakeData.pid === stake.pid)\n        return { ...stake, ...liveStakeData }\n      })\n    })\n\n    builder.addCase(fetchStakeUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((stake) => stake.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\nexport default stakesSlice.reducer\n","import { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from '../../../utils/bigNumber';\nimport stakesConfig from '../../../constants/stake';\nimport useRefresh from '../../../hooks/useRefresh';\nimport { deserializeToken } from '../user-slice/hooks/helpers';\nimport { fetchStakesPublicDataAsync, fetchStakeUserDataAsync } from '.'\n\nconst deserializeStakeUserData = (stake) => {\n  return {\n    allowance: stake.userData ? new BigNumber(stake.userData.allowance) : BIG_ZERO,\n    tokenBalance: stake.userData ? new BigNumber(stake.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: stake.userData ? new BigNumber(stake.userData.stakedBalance) : BIG_ZERO,\n    earnings: stake.userData ? new BigNumber(stake.userData.earnings) : BIG_ZERO,\n    withdrawFee: stake.userData ? new BigNumber(stake.userData.withdrawFee) : BIG_ZERO,\n    lastDepositTime: stake.userData ? new BigNumber(stake.userData.lastDepositTime) : BIG_ZERO,\n  }\n}\n\nconst deserializeStake = (stake) => {\n  const { \n    stakeSymbol, \n    pid, \n    dual, \n    multiplier, \n    isCommunity, \n    tokenPriceBusd, \n    isWithdrawFee, \n    depositFeeBP, \n    liquidity, \n    apr, \n    stakeTokenRatio, \n    earningsPerBlock,\n  } = stake\n  return {\n    liquidity,\n    apr,\n    stakeTokenRatio,\n    earningsPerBlock,\n    isWithdrawFee,\n    depositFeeBP,\n    stakeSymbol,\n    pid,\n    dual,\n    multiplier,\n    isCommunity,\n    tokenPriceBusd,\n    token: deserializeToken(stake.token),\n    userData: deserializeStakeUserData(stake),\n    tokenAmountTotal: stake.tokenAmountTotal ? new BigNumber(stake.tokenAmountTotal) : BIG_ZERO,\n    stakedTotalToken: stake.stakedTotalToken ? new BigNumber(stake.stakedTotalToken) : BIG_ZERO,\n    tokenTotalSupply: stake.tokenTotalSupply ? new BigNumber(stake.tokenTotalSupply) : BIG_ZERO,\n    poolWeight: stake.poolWeight ? new BigNumber(stake.poolWeight) : BIG_ZERO,\n  }\n}\n\nexport const usePollStakesWithUserData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const pids = stakesConfig.map((stakeToFetch) => stakeToFetch.pid)\n\n    dispatch(fetchStakesPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchStakeUserDataAsync({ account, pids }))\n    }\n  }, [dispatch, slowRefresh, account])\n}\n\nexport const useStakes = () => {\n  const stakes = useSelector((state) => state.stake)\n  const deserializedStakesData = stakes.data.map(deserializeStake)\n  const { userDataLoaded } = stakes\n  return {\n    userDataLoaded,\n    data: deserializedStakesData,\n  }\n}\n\nexport const useStakeFromPid = (pid) => {\n  const stake = useSelector((state) => state.stake.data.find((f) => f.pid === pid))\n  return stake && deserializeStake(stake)\n}\n\nexport const useStakeUser = (pid) => {\n  const { userData } = useStakeFromPid(pid)\n  const { allowance, tokenBalance, stakedBalance, earnings } = userData\n  return {\n    allowance,\n    tokenBalance,\n    stakedBalance,\n    earnings,\n  }\n}","import { useEffect, useRef, useState } from 'react'\r\n\r\nconst useIntersectionObserver = () => {\r\n  const observerRef = useRef(null)\r\n  const intersectionObserverRef = useRef(null)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n  const [isIntersecting, setIsIntersecting] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const checkObserverIsIntersecting = ([entry]) => {\r\n      setIsIntersecting(entry.isIntersecting)\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      intersectionObserverRef.current = new IntersectionObserver(checkObserverIsIntersecting, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      intersectionObserverRef.current.observe(observerRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n\r\n    return () => {\r\n      if (intersectionObserverRef.current && observerIsSet) {\r\n        intersectionObserverRef.current.disconnect()\r\n      }\r\n    }\r\n  }, [observerIsSet])\r\n\r\n  return { observerRef, isIntersecting }\r\n}\r\n\r\nexport default useIntersectionObserver\r\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount, decimals = 18) => {\n  return new BigNumber(amount).div(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance, decimals = 18, displayDecimals) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\nexport const displayNumber = (number) => {\n  if ((new BigNumber(number)).toNumber() > 100000000) {\n    return number.toPrecision(4)\n  } else {\n    return number.toFixed(2)\n  }\n}","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const FarmStakedOnly = {\n  ON_FINISHED: 'onFinished',\n  TRUE: 'true',\n  FALSE: 'false',\n}\n\nexport const StakeStakedOnly = {\n  ON_FINISHED: 'onFinished',\n  TRUE: 'true',\n  FALSE: 'false',\n}\n\nexport const ViewMode = {\n  TABLE: 'TABLE',\n  CARD: 'CARD',\n}\n\nexport const updateUserExpertMode = createAction('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction('user/updateUserDeadline')\nexport const addSerializedToken = createAction('user/addSerializedToken')\nexport const removeSerializedToken = createAction('user/removeSerializedToken')\nexport const addSerializedPair = createAction('user/addSerializedPair')\nexport const removeSerializedPair = createAction('user/removeSerializedPair')\n\nexport const muteAudio = createAction('user/muteAudio')\nexport const unmuteAudio = createAction('user/unmuteAudio')\nexport const toggleTheme = createAction('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction(\n  'user/updateUserFarmStakedOnly',\n)\n\nexport const updateUserStakeStakedOnly = createAction('user/updateUserStakeStakedOnly')\nexport const updateUserPoolStakedOnly = createAction('user/updateUserPoolStakedOnly')\nexport const updateUserPoolsViewMode = createAction('user/updateUserPoolsViewMode')\nexport const updateUserFarmsViewMode = createAction('user/updateUserFarmsViewMode')\nexport const updateUserStakesViewMode = createAction('user/updateUserStakesViewMode')\nexport const updateUserPredictionAcceptedRisk = createAction(\n  'user/updateUserPredictionAcceptedRisk',\n)\nexport const updateUserPredictionChartDisclaimerShow = createAction(\n  'user/updateUserPredictionChartDisclaimerShow',\n)\nexport const updateUserExpertModeAcknowledgementShow = createAction(\n  'user/updateUserExpertModeAcknowledgementShow',\n)\nexport const updateUserUsernameVisibility = createAction(\n  'user/updateUserUsernameVisibility',\n)\nexport const updateGasPrice = createAction('user/updateGasPrice')\n\nexport const addWatchlistToken = createAction('user/addWatchlistToken')\nexport const addWatchlistPool = createAction('user/addWatchlistPool')\n","import { ChainId, Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../../../constants';\nimport useActiveWeb3React from '../../../../hooks/useActiveWeb3React';\nimport { DEFAULT_CHAINID } from '../../../../constants/network';\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  StakeStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserStakeStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  updateGasPrice,\n  addWatchlistToken,\n  addWatchlistPool,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  updateUserFarmsViewMode,\n  updateUserStakesViewMode,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserPredictionAcceptedRisk,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n} from '../actions'\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\n\nexport function useAudioModeManager() {\n  const dispatch = useDispatch()\n  const audioPlay = useSelector((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode() {\n  return useSelector((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager() {\n  const dispatch = useDispatch()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager() {\n  const dispatch = useDispatch()\n  const isDark = useSelector((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly() {\n  const dispatch = useDispatch()\n\n  const singleHopOnly = useSelector(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance() {\n  const dispatch = useDispatch()\n  const userSlippageTolerance = useSelector((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive) {\n  const dispatch = useDispatch()\n  const userFarmStakedOnly = useSelector((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserPoolStakedOnly() {\n  const dispatch = useDispatch()\n  const userPoolStakedOnly = useSelector((state) => {\n    return state.user.userPoolStakedOnly\n  })\n\n  const setUserPoolStakedOnly = useCallback(\n    (stakedOnly) => {\n      dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolStakedOnly, setUserPoolStakedOnly]\n}\n\nexport function useUserStakeStakedOnly(isActive) {\n  const dispatch = useDispatch()\n  const userStakeStakedOnly = useSelector((state) => {\n    return state.user.userStakeStakedOnly\n  })\n\n  const setUserStakeStakedOnly = useCallback(\n    (stakedOnly) => {\n      const stakeStakedOnly = stakedOnly ? StakeStakedOnly.TRUE : StakeStakedOnly.FALSE\n      dispatch(updateUserStakeStakedOnly({ userStakeStakedOnly: stakeStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userStakeStakedOnly === StakeStakedOnly.ON_FINISHED ? !isActive : userStakeStakedOnly === StakeStakedOnly.TRUE,\n    setUserStakeStakedOnly,\n  ]\n}\n\nexport function useUserPoolsViewMode() {\n  const dispatch = useDispatch()\n  const userPoolsViewMode = useSelector((state) => {\n    return state.user.userPoolsViewMode\n  })\n\n  const setUserPoolsViewMode = useCallback(\n    (viewMode) => {\n      dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolsViewMode, setUserPoolsViewMode]\n}\n\nexport function useUserFarmsViewMode() {\n  const dispatch = useDispatch()\n  const userFarmsViewMode = useSelector((state) => {\n    return state.user.userFarmsViewMode\n  })\n\n  const setUserFarmsViewMode = useCallback(\n    (viewMode) => {\n      dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userFarmsViewMode, setUserFarmsViewMode]\n}\n\nexport function useUserStakesViewMode() {\n  const dispatch = useDispatch()\n  const userStakesViewMode = useSelector((state) => {\n    return state.user.userStakesViewMode\n  })\n\n  const setUserStakesViewMode = useCallback(\n    (viewMode) => {\n      dispatch(updateUserStakesViewMode({ userStakesViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userStakesViewMode, setUserStakesViewMode]\n}\n\nexport function useUserPredictionAcceptedRisk() {\n  const dispatch = useDispatch()\n  const userPredictionAcceptedRisk = useSelector((state) => {\n    return state.user.userPredictionAcceptedRisk\n  })\n\n  const setUserPredictionAcceptedRisk = useCallback(\n    (acceptedRisk) => {\n      dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk]\n}\n\nexport function useUserPredictionChartDisclaimerShow() {\n  const dispatch = useDispatch()\n  const userPredictionChartDisclaimerShow = useSelector((state) => {\n    return state.user.userPredictionChartDisclaimerShow\n  })\n\n  const setPredictionUserChartDisclaimerShow = useCallback(\n    (showDisclaimer) => {\n      dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow]\n}\n\nexport function useUserExpertModeAcknowledgementShow() {\n  const dispatch = useDispatch()\n  const userExpertModeAcknowledgementShow = useSelector((state) => {\n    return state.user.userExpertModeAcknowledgementShow\n  })\n\n  const setUserExpertModeAcknowledgementShow = useCallback(\n    (showAcknowledgement) => {\n      dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }))\n    },\n    [dispatch],\n  )\n\n  return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow]\n}\n\nexport function useUserUsernameVisibility() {\n  const dispatch = useDispatch()\n  const userUsernameVisibility = useSelector((state) => {\n    return state.user.userUsernameVisibility\n  })\n\n  const setUserUsernameVisibility = useCallback(\n    (usernameVisibility) => {\n      dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }))\n    },\n    [dispatch],\n  )\n\n  return [userUsernameVisibility, setUserUsernameVisibility]\n}\n\nexport function useUserTransactionTTL() {\n  const dispatch = useDispatch()\n  const userDeadline = useSelector((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken() {\n  const dispatch = useDispatch()\n  return useCallback(\n    (token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(chainId, address) {\n  const dispatch = useDispatch()\n  return useCallback(\n    (chainId, address) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice() {\n  const chainId = DEFAULT_CHAINID\n  const userGas = useSelector((state) => state.user.gasPrice)\n  return chainId === ChainId.MAINNET ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport function useGasPriceManager() {\n  const dispatch = useDispatch()\n  const userGasPrice = useGasPrice()\n\n  const setGasPrice = useCallback(\n    (gasPrice) => {\n      dispatch(updateGasPrice({ gasPrice }))\n    },\n    [dispatch],\n  )\n\n  return [userGasPrice, setGasPrice]\n}\n\nfunction serializePair(pair) {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(pair) {\n  const dispatch = useDispatch()\n\n  return useCallback(\n    (pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function toV2LiquidityToken([tokenA, tokenB]) {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Haven-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs() {\n  const { chainId } = useActiveWeb3React()\n  // const tokens = useAllTokens()\n  const tokens = [];\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p) => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector(({ user: { pairs } }) => pairs)\n\n  const userPairs = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport const useWatchlistTokens = () => {\n  const dispatch = useDispatch()\n  const savedTokens = useSelector((state) => state.user.watchlistTokens) ?? []\n  const updatedSavedTokens = useCallback(\n    (address) => {\n      dispatch(addWatchlistToken({ address }))\n    },\n    [dispatch],\n  )\n  return [savedTokens, updatedSavedTokens]\n}\n\nexport const useWatchlistPools = () => {\n  const dispatch = useDispatch()\n  const savedPools = useSelector((state) => state.user.watchlistPools) ?? []\n  const updateSavedPools = useCallback(\n    (address) => {\n      dispatch(addWatchlistPool({ address }))\n    },\n    [dispatch],\n  )\n  return [savedPools, updateSavedPools]\n}\n","import { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\nimport './pageheader.scss'\n\nconst PageHeader = ({ background, children, ...props }) => (\n  <Box className='outer' {...props} style={{ backgroundImage: `url(${background})` }}>\n    <Container className=\"inner\">{children}</Container>\n  </Box>\n)\n\nexport default PageHeader\n","import styled from 'styled-components';\r\n\r\nconst Loading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap/uikit';\nimport './expandablesectionbutton.scss';\n\nconst ExpandableSectionButton = ({ onClick, expanded }) => {\n\n  return (\n    <div className='expandable-section-button-wrapper' aria-label={'Hide or show expandable content'} role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? 'Hide' : 'Details'}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </div>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import React from 'react'\nimport { Text, Flex, LinkExternal, Skeleton } from '@pancakeswap/uikit'\nimport './detailssection.scss';\n\nconst DetailsSection = ({\n  bscScanAddress,\n  infoAddress,\n  removed,\n  totalValueFormatted,\n  stakeLabel,\n  getTokenLink,\n}) => {\n  return (\n    <div className='details-section-wrapper'>\n      <Flex className='total-liquidity'>\n        <Text color=\"#253449\">Total Liquidity:</Text>\n        {totalValueFormatted || totalValueFormatted === 0 ? <Text color=\"#253449\">{totalValueFormatted}</Text> : <Skeleton width={75} height={25} />}\n      </Flex>\n      {!removed && (\n        <LinkExternal className='styled-link-external' href={getTokenLink}>{`Get ${stakeLabel}`}</LinkExternal>\n      )}\n      <LinkExternal className='styled-link-external' href={bscScanAddress}>View Contract</LinkExternal>\n    </div>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\r\nimport {\r\n  Tag,\r\n  VerifiedIcon,\r\n  CommunityIcon,\r\n  RefreshIcon,\r\n  AutoRenewIcon,\r\n  TimerIcon,\r\n  BlockIcon,\r\n  VoteIcon,\r\n} from '@pancakeswap/uikit'\r\n\r\nconst CoreTag = (props) => {\r\n  return (\r\n    <Tag variant=\"primary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"#1FC7D4\" mr=\"4px\" />} {...props}>\r\n      No fees\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CommunityTag = (props) => {\r\n  return (\r\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"#ED4B9E\" mr=\"4px\" />} {...props}>\r\n      Community\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst DualTag = (props) => {\r\n  return (\r\n    <Tag variant=\"#253449\" outline {...props}>\r\n      Dual\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ManualPoolTag = (props) => {\r\n  return (\r\n    <Tag variant=\"primary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"#1FC7D4\" mr=\"4px\" />} {...props}>\r\n      Manual\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CompoundingPoolTag = (props) => {\r\n  return (\r\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"#31D0AA\" mr=\"4px\" />} {...props}>\r\n      Auto\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst VoteNowTag = (props) => {\r\n  return (\r\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"#31D0AA\" mr=\"4px\" />} {...props}>\r\n      Vote Now\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst SoonTag = (props) => {\r\n  return (\r\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"#31D0AA\" mr=\"4px\" />} {...props}>\r\n      Soon\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ClosedTag = (props) => {\r\n  return (\r\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"#BDC2C4\" mr=\"4px\" />} {...props}>\r\n      Closed\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\r\n","import React from 'react'\nimport { Tag, Flex, Heading, Skeleton } from '@pancakeswap/uikit'\nimport { CoreTag } from '../../../../components/Tags';\nimport './cardheading.scss';\nimport tokens from '../../../../constants/tokens';\n\nconst CardHeading = ({ pid, stakeLabel, multiplier, isCommunityStake, token }) => {\n  const getImageUrlFromToken = (token) => {\n    const address = token.symbol === 'BNB' ? tokens.wbnb.address : token.address\n    return `/images/tokens/${address}.svg`\n  }\n\n  return (\n    <Flex className='card-heading-wrapper' justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <img src={getImageUrlFromToken(token)} width={64} height={64} alt=\"\" />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading color=\"#253449\" mb=\"4px\">{stakeLabel.split(' ')[0]}</Heading>\n        <Flex justifyContent=\"center\">\n          {pid === 5 && <CoreTag />}\n          {multiplier ? (\n            <Tag className=\"multiplier-tag\" variant=\"primary\">{multiplier}</Tag>\n          ) : (\n            <Skeleton ml=\"4px\" width={42} height={28} />\n          )}\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardHeading\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import { useMemo } from 'react'\r\nimport { ChainId, WETH } from '@pancakeswap/sdk'\r\nimport useActiveWeb3React from './useActiveWeb3React'\r\nimport {\r\n  getBep20Contract,\r\n  getSafeChefContract,\r\n  getIsoContract,\r\n  getSafeStakeContract,\r\n} from '../utils/contractHelpers'\r\nimport { getMulticallAddress } from '../utils/addressHelpers'\r\n\r\nimport { ERC20_BYTES32_ABI } from '../abi/erc20'\r\nimport multiCallAbi from '../abi/Multicall.json'\r\nimport ENS_PUBLIC_RESOLVER_ABI from '../abi/ens-public-resolver.json'\r\nimport ERC20_ABI from '../abi/erc20.json'\r\nimport ENS_ABI from '../abi/ens-registrar.json'\r\nimport WETH_ABI from '../abi/weth.json'\r\nimport { getContract } from '../utils'\r\n\r\nexport const useSafeChef = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getSafeChefContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useERC20 = (address) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\nexport const useIso = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getIsoContract(library.getSigner()), [library])\r\n}\r\n\r\nfunction useContract(address, ABI, withSignerIfPossible = true) {\r\n  const { library, account } = useActiveWeb3React()\r\n\r\n  return useMemo(() => {\r\n    if (!address || !ABI || !library) return null\r\n    try {\r\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\r\n    } catch (error) {\r\n      console.error('Failed to get contract', error)\r\n      return null\r\n    }\r\n  }, [address, ABI, library, withSignerIfPossible, account])\r\n}\r\n\r\nexport function useMulticallContract() {\r\n  return useContract(getMulticallAddress(), multiCallAbi, false)\r\n}\r\n\r\nexport function useBytes32TokenContract(tokenAddress, withSignerIfPossible) {\r\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSRegistrarContract(withSignerIfPossible) {\r\n  const { chainId } = useActiveWeb3React()\r\n  let address\r\n  if (chainId) {\r\n    // eslint-disable-next-line default-case\r\n    switch (chainId) {\r\n      case ChainId.MAINNET:\r\n      case ChainId.TESTNET:\r\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\r\n        break\r\n    }\r\n  }\r\n  return useContract(address, ENS_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSResolverContract(address, withSignerIfPossible) {\r\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useTokenContract(tokenAddress, withSignerIfPossible) {\r\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useWETHContract(withSignerIfPossible) {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport const useSafeStake = (id) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getSafeStakeContract(id, library.getSigner()), [id, library])\r\n}","import { Button, useWalletModal } from '@pancakeswap/uikit';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { useTranslation } from '../../contexts/Localization';\r\n\r\nconst ConnectWalletButton = (props) => {\r\n  const { t } = useTranslation();\r\n  const { login, logout } = useAuth();\r\n  const { onPresentConnectModal } = useWalletModal(login, logout, t);\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      Connect Wallet\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ConnectWalletButton","import { useEffect, useRef } from 'react';\r\nimport CountUp from 'react-countup';\r\nimport { Text } from '@pancakeswap/uikit';\r\n\r\nconst Balance = ({\r\n  value,\r\n  color = '#253449',\r\n  decimals = 3,\r\n  isDisabled = false,\r\n  unit = '',\r\n  prefix = '',\r\n  onClick,\r\n  ...props\r\n}) => {\r\n  const previousValue = useRef(0);\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n  return (\r\n    <Text color=\"#253449\" onClick={onClick} {...props}>\r\n      <CountUp\r\n        start={value}\r\n        end={value}\r\n        prefix={prefix}\r\n        suffix={unit}\r\n        decimals={decimals}\r\n        duration={1}\r\n        separator=\",\"\r\n      />\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import React, { useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\n\nconst Spacer = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\nconst StyledSpacer = styled.div`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react';\nimport styled from 'styled-components';\nimport Spacer from './Spacer';\n\nconst ModalActions = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: #0098A100;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Text, Button, Input, Flex, Link } from '@pancakeswap/uikit';\nimport { parseUnits } from 'ethers/lib/utils';\nimport { formatBigNumber, displayNumber } from '../../utils/formatBalance';\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #e9fbfb;\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: #253449;\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n  border: none;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  usdToStake,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n  decimals = 18,\n}) => {\n  const isBalanceZero = max === '0' || !max\n  const displayBalance = (balance) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n\n    const balanceUnits = parseUnits(balance, decimals)\n    return formatBigNumber(balanceUnits, decimals, decimals)\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text color=\"#253449\" fontSize=\"14px\">{inputTitle}</Text>\n          <Text color=\"#253449\" fontSize=\"14px\">{`Balance: ${displayBalance(max)}`}</Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n            inputMode=\"decimal\"\n            step=\"any\"\n            min=\"0\"\n            onChange={onChange}\n            placeholder=\"0\"\n            value={value}\n          />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            Max\n          </Button>\n          <Text color=\"#253449\" fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n        <Flex pl=\"12px\">\n          <Text color='#253449' fontSize=\"12px\">{`~${displayNumber(usdToStake)} USD`}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"#ED4B9E\">\n          {'No tokens to stake'}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"#ED4B9E\">\n            {`Get ${symbol}`}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import { displayNumber } from \"./formatBalance\"\n// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    let principal = principalInUSD / earningTokenPrice\n    if (principal === 0) {\n      principal = 1 / Math.pow(10, 18)\n    }\n    let interestEarned = principal * aprAsDecimal * daysAsDecimalOfYear\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= performanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\nconst roundToTwoDp = (number) => Math.round(number * 100) / 100\n\nexport const calculateSltEarnedPerThousandDollars = ({ numberOfDays, farmApr, earningTokenPrice }) => {\n  // Everything here is worked out relative to a year, with the asset compounding daily\n  const timesCompounded = 365\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const apyAsDecimal = farmApr / 100\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\n  //   Calculate the starting SLT balance with a dollar balance of $1000.\n  const principal = 1000 / earningTokenPrice\n\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n\n  // To get the slt earned, deduct the amount after compounding (finalAmount) from the starting CAKSLTE balance (principal)\n  const interestEarned = finalAmount - principal\n  return roundToTwoDp(interestEarned)\n}\n\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return displayNumber(percentage)\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  Modal,\n  Text,\n  Flex,\n  LinkExternal,\n  Skeleton\n} from '@pancakeswap/uikit';\nimport BigNumber from 'bignumber.js';\nimport { calculateSltEarnedPerThousandDollars, apyModalRoi } from '../../utils/compoundApyHelpers'\nimport { displayNumber } from '../../utils/formatBalance';\n\nconst StyledModal = styled(Modal)`\n  width: 450px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst RoiCalculatorModal = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n}) => {\n  const farmApr = (new BigNumber(apr)).times(new BigNumber(100)).toNumber()\n  const oneThousandDollarsWorthOfSlt = 1000 / earningTokenPrice.toNumber()\n\n  const sltEarnedPerThousand1D = calculateSltEarnedPerThousandDollars({ numberOfDays: 1, farmApr, earningTokenPrice: earningTokenPrice.toNumber() })\n  const sltEarnedPerThousand7D = calculateSltEarnedPerThousandDollars({ numberOfDays: 7, farmApr, earningTokenPrice: earningTokenPrice.toNumber() })\n  const sltEarnedPerThousand30D = calculateSltEarnedPerThousandDollars({ numberOfDays: 30, farmApr, earningTokenPrice: earningTokenPrice.toNumber() })\n  const sltEarnedPerThousand365D = calculateSltEarnedPerThousandDollars({ numberOfDays: 365, farmApr, earningTokenPrice: earningTokenPrice.toNumber() })\n  return (\n    <StyledModal\n      title={'ROI'}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack || null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        <Flex justifyContent=\"space-between\" mb=\"12px\">\n          <Text color=\"#253449\" width=\"33.33%\">APR</Text>\n          <Text width=\"33.33%\"></Text>\n          <Text color=\"#253449\" width=\"33.33%\">{displayNumber(apr)}%</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\" mb=\"12px\">\n          <Text color=\"primary\" width=\"33.33%\">TIMEFRAME</Text>\n          <Text color=\"primary\" width=\"33.33%\">ROI</Text>\n          <Text color=\"primary\" width=\"33.33%\">SLT PER $1000</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\n          <Text color=\"#253449\" width=\"33.33%\">1d</Text>\n          <Text color=\"#253449\" width=\"33.33%\">\n            {earningTokenPrice.toNumber() ? `${apyModalRoi({ amountEarned: sltEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfSlt })}%` : <Skeleton width={100} />}\n          </Text>\n          <Text color=\"#253449\" width=\"33.33%\">{earningTokenPrice.toNumber() ? displayNumber(sltEarnedPerThousand1D) : <Skeleton width={100} />}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\n          <Text color=\"#253449\" width=\"33.33%\">7d</Text>\n          <Text color=\"#253449\" width=\"33.33%\">\n            {earningTokenPrice.toNumber() ? `${apyModalRoi({ amountEarned: sltEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfSlt })}%` : <Skeleton width={100} />}\n          </Text>\n          <Text color=\"#253449\" width=\"33.33%\">{earningTokenPrice.toNumber() ? displayNumber(sltEarnedPerThousand7D) : <Skeleton width={100} />}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\n          <Text color=\"#253449\" width=\"33.33%\">30d</Text>\n          <Text color=\"#253449\" width=\"33.33%\">\n            {earningTokenPrice.toNumber() ? `${apyModalRoi({ amountEarned: sltEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfSlt })}%` : <Skeleton width={100} />}\n          </Text>\n          <Text color=\"#253449\" width=\"33.33%\">{earningTokenPrice.toNumber() ? displayNumber(sltEarnedPerThousand30D) : <Skeleton width={100} />}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\" mb=\"20px\">\n          <Text color=\"#253449\" width=\"33.33%\">365d(APY)</Text>\n          <Text color=\"#253449\" width=\"33.33%\">\n            {earningTokenPrice.toNumber() ? `${apyModalRoi({ amountEarned: sltEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfSlt })}%` : <Skeleton width={100} />}\n          </Text>\n          <Text color=\"#253449\" width=\"33.33%\">{earningTokenPrice.toNumber() ? displayNumber(sltEarnedPerThousand365D) : <Skeleton width={100} />}</Text>\n        </Flex>\n        <Text fontSize='14px' color='#253449'>\n          Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.\n        </Text>\n        <Flex justifyContent=\"center\" mt=\"24px\">\n          <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n        </Flex>\n     </ScrollableContainer>\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Button, Modal, LinkExternal, CalculateIcon, IconButton } from '@pancakeswap/uikit'\nimport { ModalActions, ModalInput } from '../../../components/Modal'\nimport RoiCalculatorModal from '../../../components/RoiCalculatorModal'\nimport { getFullDisplayBalance, formatNumber } from '../../../utils/formatBalance'\nimport useToast from '../../../hooks/useToast'\nimport { getInterestBreakdown } from '../../../utils/compoundApyHelpers'\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst DepositModal = ({\n  max,\n  stakedBalance,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  multiplier,\n  stakePrice,\n  stakeLabel,\n  apr,\n  getTokenLink,\n  sltPrice,\n}) => {\n  const [val, setVal] = useState(0)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const stakeTokensToStake = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const usdToStake = stakeTokensToStake.times(stakePrice)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !stakeTokensToStake.isNaN() ? usdToStake.toNumber() : 0,\n    apr,\n    earningTokenPrice: sltPrice,\n  })\n\n  const annualRoi = sltPrice.times(interestBreakdown[3])\n  const formattedAnnualRoi = formatNumber(\n    annualRoi.toNumber(),\n    annualRoi.gt(10000) ? 0 : 2,\n    annualRoi.gt(10000) ? 0 : 2,\n  )\n\n  const handleChange = useCallback(\n    (e) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        linkLabel={`Get ${stakeLabel}`}\n        earningTokenPrice={sltPrice}\n        apr={apr}\n        linkHref={getTokenLink}\n        onBack={() => setShowRoiCalculator(false)}\n      />\n    )\n  }\n\n  return (\n    <Modal title={'Stake tokens'} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        usdToStake={usdToStake}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        getTokenLink={getTokenLink}\n        inputTitle={'Stake'}\n      />\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Text mr=\"8px\" color=\"#253449\">\n          Annual ROI at current rates:\n        </Text>\n        <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n          <AnnualRoiDisplay color=\"#253449\">${formattedAnnualRoi}</AnnualRoiDisplay>\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"#253449\" width=\"18px\" />\n          </IconButton>\n        </AnnualRoiContainer>\n      </Flex>\n      <ModalActions>\n        <Button variant=\"primary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          Cancel\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={\n            pendingTx || !stakeTokensToStake.isFinite() || stakeTokensToStake.eq(0) || stakeTokensToStake.gt(fullBalanceNumber)\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess('Staked!', 'Your funds have been staked in the stake')\n              onDismiss()\n            } catch (e) {\n              toastError(\n                'Error',\n                'Please try again. Confirm the transaction and make sure you are paying enough gas!',\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n        >\n          {pendingTx ? 'Confirming' : 'Confirm'}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={getTokenLink} style={{ alignSelf: 'center' }}>\n        {`Get ${tokenName}`}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, Flex, Text } from '@pancakeswap/uikit'\nimport { ModalActions, ModalInput } from '../../../components/Modal'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\nimport useToast from '../../../hooks/useToast'\n\nconst WithdrawModal = ({ onConfirm, onDismiss, max, tokenName = '', stakePrice, withdrawFee, lastDepositTime }) => {\n  const [val, setVal] = useState(0)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const usdToStake = valNumber.times(stakePrice)\n\n  const handleChange = useCallback(\n    (e) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={'Unstake tokens'} onDismiss={onDismiss}>\n      <Flex justifyContent=\"space-between\" mb=\"8px\">\n        <Text color=\"#253449\">The last deposit block number:</Text>\n        <Text color=\"#253449\" bold>{lastDepositTime.toString()}</Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\" mb=\"8px\">\n        <Text color=\"#253449\">Withdrawal Fee:</Text>\n        <Text color=\"#253449\" bold>{`${withdrawFee.toString()}%`}</Text>\n      </Flex>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        usdToStake={usdToStake}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={'Unstake'}\n      />\n      <ModalActions>\n        <Button variant=\"primary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          Cancel\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess('Unstaked!', 'Your earnings have also been harvested to your wallet')\n              onDismiss()\n            } catch (e) {\n              toastError(\n                'Error',\n                'Please try again. Confirm the transaction and make sure you are paying enough gas!',\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? 'Confirming' : 'Confirm'}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\n// fired once when the app reloads but before the app renders\r\n// allows any updates to be applied to store data loaded from localStorage\r\nexport const updateVersion = createAction('global/updateVersion')\r\n\r\nexport default updateVersion\r\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateVersion } from '../../global/actions';\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  addWatchlistPool,\n  addWatchlistToken,\n  FarmStakedOnly,\n  StakeStakedOnly,\n  removeSerializedPair,\n  removeSerializedToken,\n  muteAudio,\n  toggleTheme,\n  unmuteAudio,\n  updateGasPrice,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserFarmsViewMode,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  updateUserStakeStakedOnly,\n  updateUserStakesViewMode,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  ViewMode,\n  updateUserPredictionAcceptedRisk,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n} from './actions'\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\n\nconst DEFAULT_DEADLINE_FROM_NOW = 60 * 20;\nconst INITIAL_ALLOWED_SLIPPAGE = 50;\n\nconst currentTimestamp = () => new Date().getTime()\n\nfunction pairKey(token0Address, token1Address) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  userPoolStakedOnly: false,\n  userStakeStakedOnly: StakeStakedOnly.ON_FINISHED,\n  userPoolsViewMode: ViewMode.CARD,\n  userFarmsViewMode: ViewMode.CARD,\n  userStakesViewMode: ViewMode.CARD,\n  userPredictionAcceptedRisk: false,\n  userPredictionChartDisclaimerShow: true,\n  userExpertModeAcknowledgementShow: true,\n  userUsernameVisibility: false,\n  gasPrice: GAS_PRICE_GWEI.default,\n  watchlistTokens: [],\n  watchlistPools: [],\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateUserPoolStakedOnly, (state, { payload: { userPoolStakedOnly } }) => {\n      state.userPoolStakedOnly = userPoolStakedOnly\n    })\n    .addCase(updateUserPoolsViewMode, (state, { payload: { userPoolsViewMode } }) => {\n      state.userPoolsViewMode = userPoolsViewMode\n    })\n    .addCase(updateUserFarmsViewMode, (state, { payload: { userFarmsViewMode } }) => {\n      state.userFarmsViewMode = userFarmsViewMode\n    })\n    .addCase(updateUserStakeStakedOnly, (state, { payload: { userStakeStakedOnly } }) => {\n      state.userStakeStakedOnly = userStakeStakedOnly\n    })\n    .addCase(updateUserStakesViewMode, (state, { payload: { userStakesViewMode } }) => {\n      state.userStakesViewMode = userStakesViewMode\n    })\n    .addCase(updateUserPredictionAcceptedRisk, (state, { payload: { userAcceptedRisk } }) => {\n      state.userPredictionAcceptedRisk = userAcceptedRisk\n    })\n    .addCase(updateUserPredictionChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\n      state.userPredictionChartDisclaimerShow = userShowDisclaimer\n    })\n    .addCase(updateUserExpertModeAcknowledgementShow, (state, { payload: { userExpertModeAcknowledgementShow } }) => {\n      state.userExpertModeAcknowledgementShow = userExpertModeAcknowledgementShow\n    })\n    .addCase(updateUserUsernameVisibility, (state, { payload: { userUsernameVisibility } }) => {\n      state.userUsernameVisibility = userUsernameVisibility\n    })\n    .addCase(updateGasPrice, (state, action) => {\n      state.gasPrice = action.payload.gasPrice\n    })\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\n      const tokenWatchlist = state.watchlistTokens ?? []\n      if (!tokenWatchlist.includes(address)) {\n        state.watchlistTokens = [...tokenWatchlist, address]\n      } else {\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\n        state.watchlistTokens = newTokens\n      }\n    })\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\n      const poolsWatchlist = state.watchlistPools ?? []\n      if (!poolsWatchlist.includes(address)) {\n        state.watchlistPools = [...poolsWatchlist, address]\n      } else {\n        const newPools = state.watchlistPools.filter((x) => x !== address)\n        state.watchlistPools = newPools\n      }\n    }),\n)\n","import { serializeTokens } from './tokens'\r\n\r\nconst serializedTokens = serializeTokens()\r\n\r\nconst farms = [\r\n  {\r\n    pid: 0,\r\n    lpSymbol: 'HAVEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x63373252f5090B3CEE061348D627A17cf6Ab360F',\r\n    },\r\n    token: serializedTokens.haven,\r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x807780650A1a2FA266f180c99AD0D98C6deA1977\",\r\n    isStatus: 'active'\r\n  },\r\n  {\r\n    pid: 1,\r\n    lpSymbol: 'HAVEN-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8b113Aa30a284995cEb9470FB04b8581025D56cc',\r\n    },\r\n    token: serializedTokens.haven,     // 0x9caE753B661142aE766374CEFA5dC800d80446aC\r\n    quoteToken: serializedTokens.busd,    // 0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\r\n    strat: \"0xd8e7679f660276d5dc746856681C24664d81A26e\",\r\n    isStatus: 'active'\r\n  },\r\n  {\r\n    pid: 2,\r\n    lpSymbol: 'SLT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x869F4e106c8f2b9062F93Db214FE23Fb073873e1',\r\n    },\r\n    token: serializedTokens.slt,\r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x18b7F3cd2951E84C34aA8E685d76Fa7a741a26a5\",\r\n    isStatus: 'active'\r\n  },\r\n  {\r\n    pid: 3,\r\n    lpSymbol: 'SLT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB14F95f53AC80E068F0F4A4A4A59c6538AeF4398',\r\n    },\r\n    token: serializedTokens.slt,\r\n    quoteToken: serializedTokens.busd,\r\n    strat: \"0xB701E8cb48aB85d86b003bEE6fA59c276085F90D\",\r\n    isStatus: 'active'\r\n  },\r\n  {\r\n    pid: 4,\r\n    lpSymbol: 'SLT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB14F95f53AC80E068F0F4A4A4A59c6538AeF4398',\r\n    },\r\n    token: serializedTokens.slt,\r\n    quoteToken: serializedTokens.busd,\r\n    strat: \"0xBE06cf6aE61b25B581d9CaDC81D61CBfFA0826A6\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 8,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\r\n    },\r\n    token: serializedTokens.busd,\r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x5c040B417b4e0444D7fE5e61568b8efDF4D03fA2\",\r\n    isStatus: 'inactive'\r\n  },\r\n  // {\r\n  //   pid: 9,\r\n  //   lpSymbol: 'BUSD-USDT LP',\r\n  //   lpAddresses: {\r\n  //     97: '',\r\n  //     56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',   // 1.66\r\n  //   },\r\n  //   token: serializedTokens.busd,    // 0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\r\n  //   quoteToken: serializedTokens.usdt,    // 0x55d398326f99059fF775485246999027B3197955\r\n  //   strat: \"0xeDe908f7B1B3D182e38c18eC7e2AA3EB209521f7\",\r\n  //   isStatus: 'inactive'\r\n  // },\r\n  {\r\n    pid: 10,\r\n    lpSymbol: 'BUSD-USDT LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\r\n    },\r\n    token: serializedTokens.busd,\r\n    quoteToken: serializedTokens.usdt,\r\n    strat: \"0xeDe908f7B1B3D182e38c18eC7e2AA3EB209521f7\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 11,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\r\n    },\r\n    token: serializedTokens.cake,\r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0xa8CD3a2Bf2d1192255007673bA21cA3B5f63a4f1\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 12,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\r\n    },\r\n    token: serializedTokens.usdt,\r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x94cdF186A495930984685ae9E3522FAfCB3AaC3d\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 13,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\r\n    },\r\n    token: serializedTokens.busd,\r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x65f898330417fdEa7274Fc2eB9E974dEA9422174\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 14,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\r\n    },\r\n    token: serializedTokens.usdt,\r\n    quoteToken: serializedTokens.busd,\r\n    strat: \"0x2183bf639A35AE1b575Fa2a7B3d5f2A695A0132B\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 15,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\r\n    },\r\n    token: serializedTokens.cake,\r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x471b75288f0b829765aE3F84e50e363D67248685\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 16,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\r\n    },\r\n    token: serializedTokens.usdt,\r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x5BCb1Ef1FfE64fc9262395Bf80A6BB3Ea5aCac78\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 17,\r\n    lpSymbol: 'MBOX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\r\n    },\r\n    token: serializedTokens.mbox,\r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0xf11d9DB860Da38c441BDf6862Ef7239FdFdc8ad4\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 18,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\r\n    },\r\n    token: serializedTokens.usdc,\r\n    quoteToken: serializedTokens.busd,\r\n    strat: \"0x5857cf9dEBc0b4dc08eE522Ba1cB9A2C7fE0fD3f\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 19,\r\n    lpSymbol: 'ETH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\r\n    },\r\n    token: serializedTokens.eth,\r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x05b4Ff1c270B9B8171382dBca64d7cFc86Fa230c\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 20,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\r\n    },\r\n    token: serializedTokens.btcb,\r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0xeEA631F4Fc1E181f4A749f4f16cF1ed7F8952935\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 21,\r\n    lpSymbol: 'BTCB-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\r\n    },\r\n    token: serializedTokens.btcb,\r\n    quoteToken: serializedTokens.busd,\r\n    strat: \"0xAe5d01ff505041df762484b20A8E8658786826Af\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 22,\r\n    lpSymbol: 'BTCB-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\r\n    },\r\n    token: serializedTokens.btcb,\r\n    quoteToken: serializedTokens.eth,\r\n    strat: \"0x378f340F19c6c846c2F4deae8CF188952E5301E0\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 23,\r\n    lpSymbol: 'TUSD-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\r\n    },\r\n    token: serializedTokens.tusd,\r\n    quoteToken: serializedTokens.busd,\r\n    strat: \"0x0C50e96C906157cc648798A8787ADEe1c1459954\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 24,\r\n    lpSymbol: 'USDC-USDT LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xec6557348085aa57c72514d67070dc863c0a5a8c',\r\n    },\r\n    token: serializedTokens.usdc,\r\n    quoteToken: serializedTokens.usdt,\r\n    strat: \"0xd7b77F7a0b65147EE231b210e4Bfcd9D56415df5\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 25,\r\n    lpSymbol: 'ETH-USDC LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\r\n    },\r\n    token: serializedTokens.eth,\r\n    quoteToken: serializedTokens.usdc,\r\n    strat: \"0xedbcE22E8001D8A80760DCfb0Bc611eC4af2175F\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 26,\r\n    lpSymbol: 'CAKE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\r\n    },\r\n    token: serializedTokens.cake,\r\n    quoteToken: serializedTokens.busd,\r\n    strat: \"0xB9A50F4671acc859F8F90E7B06bCbe7B4F3A294F\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 27,\r\n    lpSymbol: 'DOT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\r\n    },\r\n    token: serializedTokens.dot,\r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x0EE28088ae72E56f5C7EE83a86D0815eDb83f10d\",\r\n    isStatus: 'inactive'\r\n  },\r\n  {\r\n    pid: 33,\r\n    lpSymbol: 'BNB-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\r\n    },\r\n    token: serializedTokens.wbnb,\r\n    quoteToken: serializedTokens.busd,\r\n    strat: \"0x02aE953ad2b5F502DF1b6D349c805A042E311d01\",\r\n    isStatus: 'active'\r\n  },\r\n  {\r\n    pid: 34,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\r\n    },\r\n    token: serializedTokens.usdt,\r\n    quoteToken: serializedTokens.busd,\r\n    strat: \"0x41854F532Dc7dE90f37731f7c0f64967F7c32DAB\",\r\n    isStatus: 'active'\r\n  },\r\n  {\r\n    pid: 35,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\r\n    },\r\n    token: serializedTokens.cake,\r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x0823CA1BFE0359520285464EAB0D8580feA66D3F\",\r\n    isStatus: 'active'\r\n  },\r\n  {\r\n    pid: 36,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\r\n    },\r\n    token: serializedTokens.usdt,\r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x6Ef5aB18FCaA7F9a7419991d238a0E0b8823a570\",\r\n    isStatus: 'active'\r\n  },\r\n  // {\r\n  //   pid: 37,\r\n  //   lpSymbol: 'USDT-BNB LP',\r\n  //   lpAddresses: {\r\n  //     97: '',\r\n  //     56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\r\n  //   },\r\n  //   token: serializedTokens.usdt,\r\n  //   quoteToken: serializedTokens.wbnb,\r\n  //   strat: \"0x6Ef5aB18FCaA7F9a7419991d238a0E0b8823a570\",\r\n  //   isStatus: 'inactive'\r\n  // },\r\n  {\r\n    pid: 38,\r\n    lpSymbol: 'ETH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\r\n    },\r\n    token: serializedTokens.eth,\r\n    quoteToken: serializedTokens.wbnb,\r\n    strat: \"0x91CB1d8203B313AA9b54dCd4E518B6cE6156b4d2\",\r\n    isStatus: 'active'\r\n  },\r\n  {\r\n    pid: 39,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\r\n    },\r\n    token: serializedTokens.usdc,\r\n    quoteToken: serializedTokens.busd,\r\n    strat: \"0x970A7eF9FCEf18778F2d68BF104C44520D295D62\",\r\n    isStatus: 'active'\r\n  }\r\n]\r\n\r\nexport default farms\r\n","import BigNumber from 'bignumber.js';\nimport safechefABI from '../../../abi/safeChef.json';\nimport erc20 from '../../../abi/erc20.json';\nimport strategyChefABI from '../../../abi/strategyChef.json';\nimport lpABI from '../../../abi/lp.json';\nimport { getAddress, getSafeChefAddress } from '../../../utils/addressHelpers';\nimport { BIG_TEN, BIG_ZERO } from '../../../utils/bigNumber';\nimport multicall from '../../../utils/multicall';\n\nconst fetchFarm = async (farm) => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: token.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: quoteToken.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Token decimals\n    {\n      address: token.address,\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: quoteToken.address,\n      name: 'decimals',\n    },\n  ]\n  const [tokenBalanceLP, quoteTokenBalanceLP, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n  const [wantAddress, ratio] =\n    pid || pid === 0 \n      ? await multicall(strategyChefABI, [\n        {\n          address: farm.strat,\n          name: 'wantAddress',\n        },\n        {\n          address: farm.strat,\n          name: 'wantLockedTotal',\n        }\n      ]) : [null, null]\n  const [totalSupply] =\n    pid || pid === 0 \n      ? await multicall(lpABI, [\n        {\n          address: wantAddress[0],\n          name: 'totalSupply',\n        }\n      ]) : [null]\n\n  let totalLPsupply = new BigNumber(totalSupply).div(BIG_TEN.pow(18))\n  let ratioNumber = parseFloat(ratio)\n  let lpTokenRatio = new BigNumber(ratio).div(BIG_TEN.pow(18))\n  if (ratioNumber < 1) {\n    lpTokenRatio = new BigNumber(1).div(BIG_TEN.pow(18))\n  }\n    \n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  \n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of quoteToken in the LP that are staked in the MC\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.div(totalLPsupply).times(new BigNumber(2))\n  // Only make safechef calls if farm has pid\n  const masterChefABI = safechefABI;\n  const [info, totalAllocPoint, earningsPerBlock] =\n    pid || pid === 0\n      ? await multicall(masterChefABI, [\n          {\n            address: getSafeChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getSafeChefAddress(),\n            name: 'totalAllocPoint',\n          },\n          {\n            address: getSafeChefAddress(),\n            name: 'EarningsPerBlock',\n          },\n        ])\n      : [null, null, null]\n      \n  const allocPoint = info ? new BigNumber(info.allocPoint._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n  const lastRewardBlock = info ? new BigNumber(info.lastRewardBlock._hex) : BIG_ZERO\n  const accEarningsPerShare = info ? new BigNumber(info.accEarningsPerShare._hex) : BIG_ZERO\n  // const stratAddress = info ? info.strat : ''\n  const depositFeeBP = info ? info.depositFeeBP : 0\n  const isWithdrawFee = info ? info.isWithdrawFee : 0\n  const isCommunity = false\n\n  return {\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(totalLPsupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n    totalAllocPoint,\n    earningsPerBlock: (new BigNumber(earningsPerBlock)).div(BIG_TEN.pow(18)),\n    lpTokenRatio,\n    lastRewardBlock,\n    accEarningsPerShare,\n    depositFeeBP,\n    isWithdrawFee,\n    isCommunity,\n    quoteTokenAmountMc\n  }\n}\n\nexport default fetchFarm\n","import fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm) => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      const serializedFarm = { ...farm, token: farm.token, quoteToken: farm.quoteToken }\n      return serializedFarm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js';\nimport erc20ABI from '../../../abi/erc20.json';\nimport safechefABI from '../../../abi/safeChef.json';\nimport multicall from '../../../utils/multicall';\nimport { getAddress, getSafeChefAddress } from '../../../utils/addressHelpers';\n\nexport const fetchFarmUserAllowances = async (account, farmsToFetch) => {\n  const safeChefAddress = getSafeChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, safeChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account, farmsToFetch) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account, farmsToFetch) => {\n  const safeChefAddress = getSafeChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: safeChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n  const rawStakedBalances = await multicall(safechefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account, farmsToFetch) => {\n  const safeChefAddress = getSafeChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: safeChefAddress,\n      name: 'pendingEarnings',\n      params: [farm.pid, account],\n    }\n  })\n  const rawEarnings = await multicall(safechefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n\nexport const fetchFarmWithdrawFee = async (account, farmsToFetch) => {\n  const safeChefAddress = getSafeChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: safeChefAddress,\n      name: 'getWithdrawFee',\n      params: [farm.pid, account],\n    }\n  })\n  const fees = await multicall(safechefABI, calls)\n  const withdrawFee = fees.map((fee) => {\n    return new BigNumber(fee).toJSON()\n  })\n  return withdrawFee\n}\n\nexport const fetchFarmUserLastDepositTime = async (account, farmsToFetch) => {\n  const safeChefAddress = getSafeChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: safeChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n  const rawLastDepositTimes = await multicall(safechefABI, calls)\n  const lastDepositTimes = rawLastDepositTimes.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[2]._hex).toJSON()\n  })\n  return lastDepositTimes\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from '../../../constants/farms';\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from '../../../utils/bigNumber'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n  fetchFarmWithdrawFee,\n  fetchFarmUserLastDepositTime\n} from './fetchFarmUser'\nimport { getPoolApr } from '../../../utils/apr'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState = {\n  data: noAccountFarmConfig,\n  userDataLoaded: false,\n}\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farms = await fetchFarms(farmsToFetch)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n    const sltToken = farmsWithPrices.filter((farm) => farm.pid === 3)\n    const sltTokenPrice = sltToken[0].tokenPriceBusd\n    // Filter out price helper LP config farms\n    const farmsWithApr = farmsWithPrices.map((farm) => {\n      const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteTokenPriceBusd) || BIG_ZERO\n      const apr = getPoolApr(\n        (new BigNumber(farm.tokenPriceBusd)).times(new BigNumber(farm.tokenAmountTotal)).times(new BigNumber(2)).div(new BigNumber(farm.lpTotalSupply)),\n        new BigNumber(sltTokenPrice),\n        farm.lpTokenRatio,\n        new BigNumber(farm.earningsPerBlock),\n      )\n      return { ...farm, liquidity: totalLiquidity, apr }\n    })\n\n    const farmsWithoutHelperLps = farmsWithApr.filter((farm) => {\n      return farm.pid || farm.pid === 0\n    })\n    return farmsWithoutHelperLps\n  },\n)\n\nexport const fetchFarmUserDataAsync = createAsyncThunk(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n    const userFarmWithdrawFee = await fetchFarmWithdrawFee(account, farmsToFetch)\n    const lastDepositTime = await fetchFarmUserLastDepositTime(account, farmsToFetch)\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n        withdrawFee: userFarmWithdrawFee[index] / 100,\n        lastDepositTime: lastDepositTime[index]\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\nexport default farmsSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { createAction } from '@reduxjs/toolkit'\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call) {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey) {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport const addMulticallListeners = createAction(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction('multicall/updateMulticallResults')\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nconst initialState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] || {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const Field = {\n  INPUT: 'INPUT',\n  OUTPUT: 'OUTPUT',\n}\n\nexport const selectCurrency = createAction('swap/selectCurrency')\nexport const switchCurrencies = createAction('swap/switchCurrencies')\nexport const typeInput = createAction('swap/typeInput')\nexport const replaceSwapState = createAction('swap/replaceSwapState')\nexport const setRecipient = createAction('swap/setRecipient')\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nconst initialState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS = []\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const fetchTokenList = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction('lists/addList')\nexport const removeList = createAction('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction('lists/enableList')\nexport const disableList = createAction('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction('lists/rejectVersionUpdate')\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../../constants/lists'\n\nimport { updateVersion } from '../../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nconst NEW_LIST_STATE = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\nconst initialState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const addTransaction = createAction('transactions/addTransaction')\nexport const clearAllTransactions = createAction('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction('transactions/checkedTransaction')\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport const initialState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from '../../../constants/pools'\nimport safeStakeABI from '../../../abi/safeStake.json'\nimport sltABI from '../../../abi/slt.json'\nimport multicall from '../../../utils/multicall'\nimport { getAddress } from '../../../utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from '../../../utils/bigNumber'\nimport { getSouschefV2Contract } from '../../../utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const callsStartBlock = poolsConfig.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsConfig.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n  const callsRewardTokenPerBlock = poolsConfig.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'rewardPerBlock',\n    }\n  })\n\n  const callsDepositFee = poolsConfig.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'depositFeeAmount',\n    }\n  })\n  const starts = await multicall(safeStakeABI, callsStartBlock)\n  const ends = await multicall(safeStakeABI, callsEndBlock)\n  const rewardTokenPerBlock = await multicall(safeStakeABI, callsRewardTokenPerBlock)\n  const depositFee = await multicall(safeStakeABI, callsDepositFee)\n\n  return poolsConfig.map((sltPoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: sltPoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n      rewardTokenPerBlock: (new BigNumber(rewardTokenPerBlock)).div(BIG_TEN.pow(18)).toJSON(),\n      depositFee: (new BigNumber(depositFee)).div(100).toJSON()\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const callsPools = poolsConfig.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingToken.address,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n  const PoolsTotalStaked = await multicall(sltABI, callsPools)\n  return [\n    ...poolsConfig.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(PoolsTotalStaked[index]).toJSON(),\n    }))\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId) => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit,\n) => {\n  const validPools = poolsConfig\n    .filter((p) => !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from '../../../constants/pools'\nimport safeStakeABI from '../../../abi/safeStake.json'\nimport erc20ABI from '../../../abi/erc20.json'\nimport multicall from '../../../utils/multicall'\nimport { getSafeChefContract } from '../../../utils/contractHelpers'\nimport { getAddress } from '../../../utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Slt / Slt is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst safeChefContract =   getSafeChefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = poolsConfig.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'allowance',\n    params: [account, getAddress(pool.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return poolsConfig.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  const calls = poolsConfig.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = poolsConfig.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = poolsConfig.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(safeStakeABI, calls)\n  const stakedBalances = poolsConfig.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Slt / Slt pool\n  const { amount: masterPoolAmount } = await safeChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = poolsConfig.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(safeStakeABI, calls)\n  const pendingRewards = poolsConfig.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Slt / Slt pool\n  // const pendingReward = await safeChefContract.pendingCake('0', account)\n  const pendingReward = []\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n\n\nexport const fetchUserWithdrawFee = async (account) => {\n  const calls = poolsConfig.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'getWithdrawalFeeBP',\n    params: [account],\n  }))\n  const withdrawFeeBP = await multicall(safeStakeABI, calls)\n  const withdrawFees = poolsConfig.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(withdrawFeeBP[index]).div(100).toJSON(),\n    }),\n    {},\n  )\n\n  // Slt / Slt pool\n  const withdrawFee = []\n\n  return { ...withdrawFees, 0: new BigNumber(withdrawFee.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { deserializeToken } from '../user-slice/hooks/helpers'\nimport { BIG_ZERO } from '../../../utils/bigNumber'\n\nexport const transformUserData = (userData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n    withdrawFee: userData ? new BigNumber(userData.withdrawFee) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool) => {\n  const { totalStaked, stakingLimit, userData, stakingToken, earningToken, depositFee, ...rest } = pool\n\n  return {\n    ...rest,\n    stakingToken: deserializeToken(stakingToken),\n    earningToken: deserializeToken(earningToken),\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n    depositFee: new BigNumber(depositFee),\n  }\n}\n\nexport const getTokenPricesFromFarm = (farms) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = farm.quoteToken.address.toLocaleLowerCase()\n    const tokenAddress = farm.token.address.toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteTokenPriceBusd).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.tokenPriceBusd).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from '../../../constants/pools'\nimport { BIG_ZERO } from '../../../utils/bigNumber'\nimport { getPoolApr } from '../../../utils/apr'\nimport { getBalanceNumber } from '../../../utils/formatBalance'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n  fetchUserWithdrawFee\n} from './fetchPoolsUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    // const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    // const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n    const isPoolFinished = pool.isFinished\n\n    const stakingTokenAddress = pool.stakingToken.address ? pool.stakingToken.address.toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? pool.earningToken.address.toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = getPoolApr(\n        stakingTokenPrice,\n        earningTokenPrice,\n        getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n        parseFloat(blockLimit.rewardTokenPerBlock),\n      )\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account) =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n    const withdrawFee = await fetchUserWithdrawFee(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n      withdrawFee: withdrawFee[pool.sousId]\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId, account) =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId, account) =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId, account) =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId, account) =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { serializeTokens } from './tokens'\nconst serializedTokens = serializeTokens()\n\nconst ifos = [\n  {\n    pid: 0,\n    tokenLabel: 'BUSD',\n    token: serializedTokens.busd,\n    isActive: true,\n  },\n\n  {\n    pid: 1,\n    tokenLabel: 'BNB',\n    token: serializedTokens.wbnb,\n    isActive: true,\n  },\n\n  {\n    pid: 2,\n    tokenLabel: 'ETH',\n    token: serializedTokens.eth,\n    isActive: true,\n  },\n\n  {\n    pid: 3,\n    tokenLabel: 'HAVEN',\n    token: serializedTokens.haven,\n    isActive: true,\n  },\n]\n\nexport default ifos\n","import BigNumber from 'bignumber.js';\r\nimport isoABI from '../../../abi/iso.json'\r\nimport { getHavenISOAdress } from '../../../utils/addressHelpers';\r\nimport multicall from '../../../utils/multicall';\r\nimport { BIG_TEN } from '../../../utils/bigNumber';\r\n\r\nconst fetchIso = async (iso) => {\r\n    const { pid, token } = iso\r\n    const [ \r\n        viewPoolInformation, \r\n        startBlock, \r\n        endBlock,\r\n        viewPoolTaxRateOverflow \r\n    ] = await multicall(isoABI, [\r\n        {\r\n            address: getHavenISOAdress(),\r\n            name: 'viewPoolInformation',\r\n            params: [pid],\r\n        },\r\n        {\r\n            address: getHavenISOAdress(),\r\n            name: 'startBlock',\r\n        },\r\n        {\r\n            address: getHavenISOAdress(),\r\n            name: 'endBlock',\r\n        },\r\n        {\r\n            address: getHavenISOAdress(),\r\n            name: 'viewPoolTaxRateOverflow',\r\n            params: [pid],\r\n        },\r\n    ])\r\n\r\n    const hasTax = viewPoolInformation.hasTax\r\n    const hasWhitelist = viewPoolInformation.hasWhitelist\r\n    const isStopDeposit = viewPoolInformation.isStopDeposit\r\n    const limitPerUserInLP = new BigNumber(viewPoolInformation.limitPerUserInLP._hex).div(BIG_TEN.pow(18))\r\n    const maxCommitRatio = new BigNumber(viewPoolInformation.maxCommitRatio._hex).div(BIG_TEN.pow(18))\r\n    const minHavenToJoin = new BigNumber(viewPoolInformation.minHavenToJoin._hex).div(BIG_TEN.pow(18))\r\n    const offeringAmountPool = new BigNumber(viewPoolInformation.offeringAmountPool._hex).div(BIG_TEN.pow(18))\r\n    const raisingAmountPool = new BigNumber(viewPoolInformation.raisingAmountPool._hex).div(BIG_TEN.pow(18))\r\n    const sumTaxesOverflow = new BigNumber(viewPoolInformation.sumTaxesOverflow._hex).div(BIG_TEN.pow(18))\r\n    const totalAmountPool = new BigNumber(viewPoolInformation.totalAmountPool._hex).div(BIG_TEN.pow(token.decimals))\r\n    \r\n    const totalCommittedPercent = totalAmountPool.div(raisingAmountPool).times(100).toFixed(2)\r\n    let getCommittedValue\r\n    if (totalCommittedPercent < 100) {\r\n        getCommittedValue = 100\r\n    } else {\r\n        getCommittedValue =raisingAmountPool.div(totalAmountPool).times(100).toFixed(2)\r\n    }\r\n    const totalLPCommitted = totalAmountPool.toString()\r\n    return {\r\n        viewPoolTaxRateOverflow: new BigNumber(viewPoolTaxRateOverflow[0]._hex),\r\n        startBlock: new BigNumber(startBlock[0]._hex),\r\n        endBlock: new BigNumber(endBlock[0]._hex),\r\n        hasTax,\r\n        hasWhitelist,\r\n        isStopDeposit,\r\n        limitPerUserInLP,\r\n        maxCommitRatio,\r\n        minHavenToJoin,\r\n        offeringAmountPool,\r\n        raisingAmountPool,\r\n        sumTaxesOverflow,\r\n        totalAmountPool,\r\n        totalCommittedPercent,\r\n        totalLPCommitted,\r\n        getCommittedValue\r\n    }\r\n}\r\n\r\nexport default fetchIso\r\n","import fetchPublicIsoData from './fetchPublicIsoData'\r\n\r\nconst fetchIso = async (iso) => {\r\n  const isoPublicData = await fetchPublicIsoData(iso)\r\n  return { ...iso, ...isoPublicData }\r\n}\r\n\r\nexport default fetchIso\r\n","import fetchIso from './fetchIso'\r\n\r\nconst fetchIsos = async (isoToFetch) => {\r\n  const data = await Promise.all(\r\n    isoToFetch.map(async (isoConfig) => {\r\n      const iso = await fetchIso(isoConfig)\r\n      const serializedIso = { ...iso }\r\n      return serializedIso\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchIsos\r\n","import BigNumber from 'bignumber.js';\r\nimport multicall from '../../../utils/multicall';\r\nimport { getHavenISOAdress, getHavenTokenAddress } from '../../../utils/addressHelpers';\r\nimport isoABI from '../../../abi/iso.json'\r\nimport erc20 from '../../../abi/erc20.json'\r\nimport { BIG_TEN } from '../../../utils/bigNumber';\r\n\r\nexport const fetchIsoUserReferralsCount = async (account) => {\r\n    const referralsCount = await multicall(isoABI, [{\r\n        address: getHavenISOAdress(),\r\n        name: 'referralsCount',\r\n        params: [account],\r\n    }])\r\n    return new BigNumber(referralsCount).toJSON()\r\n}\r\n\r\nexport const fetchIsoUserInfo = async (account, pids) => {\r\n    const viewUserInfo = await multicall(isoABI, [{\r\n        address: getHavenISOAdress(),\r\n        name: 'viewUserInfo',\r\n        params: [account, pids],\r\n    }])\r\n    const userAmounts = viewUserInfo[0][0].map(value => {\r\n        return new BigNumber(value._hex)\r\n    })\r\n    const userClaimed = viewUserInfo[0][1]\r\n    return { userAmounts, userClaimed }\r\n}\r\n\r\nexport const fetchUserHavenAmount = async (account) => {\r\n    const [userHavenAmount, tokenDecimals] = await multicall(erc20, [\r\n        {\r\n            address: getHavenTokenAddress(),\r\n            name: 'balanceOf',\r\n            params: [account]\r\n        },\r\n        {\r\n            address: getHavenTokenAddress(),\r\n            name: 'decimals',\r\n        },\r\n    ])\r\n    return (new BigNumber(userHavenAmount)).div(BIG_TEN.pow(tokenDecimals))\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport isosConfig from '../../../constants/iso'\nimport fetchIsos from './fetchIsos'\nimport { fetchIsoUserReferralsCount, fetchIsoUserInfo, fetchUserHavenAmount } from './fetchIsoUser'\nimport { BIG_ZERO } from '../../../utils/bigNumber'\n\nconst noAccountIsoConfig = isosConfig.map((iso) => ({\n  ...iso,\n  userData: {\n    referralsCount: '0',\n    amount: BIG_ZERO,\n    claimed: false,\n    userhavenAmount: undefined\n  },\n}))\n\nconst initialState = {\n  data: noAccountIsoConfig,\n  userDataLoaded: false,\n}\n\n// Async thunks\nexport const fetchIsosPublicDataAsync = createAsyncThunk(\n  'isos/fetchIsosPublicDataAsync',\n  async (pids) => {\n    const isosToFetch = isosConfig.filter((isoConfig) => pids.includes(isoConfig.pid))\n    const isos = await fetchIsos(isosToFetch)\n    return isos\n  },\n)\n\nexport const fetchIsoUserDataAsync = createAsyncThunk(\n  'iso/fetchIsoUserDataAsync',\n  async ({ account, pids }) => {\n    const isosToFetch = isosConfig.filter((isoConfig) => pids.includes(isoConfig.pid))\n    const userIsoReferralsCount = await fetchIsoUserReferralsCount(account)\n    const userIsoInfo = await fetchIsoUserInfo(account, pids)\n    const userhavenAmount = await fetchUserHavenAmount(account)\n    return isosToFetch.map((isoConfig, index) => {\n      return {\n        pid: isosToFetch[index].pid,\n        referralsCount: userIsoReferralsCount,\n        userhavenAmount: userhavenAmount,\n        amount: userIsoInfo.userAmounts[index],\n        claimed: userIsoInfo.userClaimed[index]\n      }\n    })\n  },\n)\n\nexport const isosSlice = createSlice({\n  name: 'ISO',\n  initialState,\n  extraReducers: (builder) => {\n    builder.addCase(fetchIsosPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((iso) => {\n        const liveIsoData = action.payload.find((isoData) => isoData.pid === iso.pid)\n        return { ...iso, ...liveIsoData }\n      })\n    })\n\n    builder.addCase(fetchIsoUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((iso) => iso.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\nexport default isosSlice.reducer\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport appReducer from \"./slices/app-slice\";\nimport userReducer from \"./slices/user-slice/reducer\";\nimport farmsReducer from \"./slices/farms-slice\";\nimport stakeReducer from \"./slices/stake-slice\";\nimport blockReducer from './slices/block-slice';\nimport multicallReducer from './slices/multicall-slice';\nimport swapReducer from './slices/swap-slice/reducer';\nimport listsReducer from './slices/lists-slice/reducer';\nimport transactionsReducer from './slices/transactions-slice/reducer';\nimport poolsReducer from './slices/pools-slice';\nimport isoReducer from './slices/iso-slice';\n\nconst store = configureStore({\n    reducer: {\n        app: appReducer,\n        user: userReducer,\n        farms: farmsReducer,\n        stake: stakeReducer,\n        block: blockReducer,\n        multicall: multicallReducer,\n        swap: swapReducer,\n        lists: listsReducer,\n        transactions: transactionsReducer,\n        pools: poolsReducer,\n        iso: isoReducer\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware({ serializableCheck: false }),\n});\n\nexport default store;\n","import { ChainId } from '@pancakeswap/sdk'\nimport store from '../store/store'\nimport { GAS_PRICE_GWEI } from '../store/slices/user-slice/hooks/helpers';\nimport { DEFAULT_CHAINID } from '../constants/network';\n\n/**\n * Function to return gasPrice outwith a react component\n */\nconst getGasPrice = () => {\n  const chainId = DEFAULT_CHAINID\n  const state = store.getState()\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport default getGasPrice\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL } from '../../constants';\nimport getGasPrice from '../getGasPrice';\n\nexport const stakeFarm = async (safeChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n\n  const tx = await safeChefContract.deposit(pid, value, \"0x0000000000000000000000000000000000000000\", { gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (safeChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n\n  const tx = await safeChefContract.withdraw(pid, value, { gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (safeChefContract, pid) => {\n  const gasPrice = getGasPrice()\n\n  const tx = await safeChefContract.deposit(pid, '0', \"0x0000000000000000000000000000000000000000\", { gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const safePad = async (isoContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n\n  const tx = await isoContract.depositPool(pid, value, \"0x0000000000000000000000000000000000000000\", { gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}","import { useCallback } from 'react'\nimport { unstakeFarm } from '../../../utils/calls'\nimport { useSafeChef } from '../../../hooks/useContract'\n\nconst useUnstakeFarms = (pid) => {\n  const safeChefContract = useSafeChef()\n\n  const handleUnstake = useCallback(\n    async (amount) => {\n      await unstakeFarm(safeChefContract, pid, amount)\n    },\n    [safeChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakeFarms\n","import { useCallback } from 'react'\nimport { stakeFarm } from '../../../utils/calls'\nimport { useSafeChef } from '../../../hooks/useContract'\n\nconst useStakeFarms = (pid) => {\n  const safeChefContract = useSafeChef()\n\n  const handleStake = useCallback(\n    async (amount) => {\n      const txHash = await stakeFarm(safeChefContract, pid, amount)\n      console.info(txHash)\n    },\n    [safeChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakeFarms\n","import React, { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport Balance from '../../../../components/Balance'\nimport { fetchStakeUserDataAsync } from '../../../../store/slices/stake-slice'\nimport { getBalanceAmount, getBalanceNumber } from '../../../../utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\nimport useUnstakeStakes from '../../hooks/useUnstakeStakes'\nimport useStakes from '../../hooks/useStakes'\nimport './stakeaction.scss'\n\nconst StakeAction = ({\n  stake,\n  tokenPriceBusd,\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  multiplier,\n  apr,\n  getTokenLink,\n  sltPrice,\n  stakeLabel,\n}) => {\n  const { onStake } = useStakes(pid)\n  const { onUnstake } = useUnstakeStakes(pid)\n  const location = useLocation()\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n\n  const handleStake = async (amount) => {\n    await onStake(amount)\n    dispatch(fetchStakeUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount) => {\n    await onUnstake(amount)\n    dispatch(fetchStakeUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return '<0.0000001'\n    }\n    if (stakedBalanceBigNumber.gt(0)) {\n      return stakedBalanceBigNumber.toFixed(8, BigNumber.ROUND_DOWN)\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      stakedBalance={stakedBalance}\n      onConfirm={handleStake}\n      tokenName={tokenName}\n      multiplier={multiplier}\n      stakePrice={tokenPriceBusd}\n      stakeLabel={stakeLabel}\n      apr={apr}\n      getTokenLink={getTokenLink}\n      sltPrice={sltPrice}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} stakePrice={tokenPriceBusd} tokenName={tokenName} isWithdrawFee={stake.isWithdrawFee} withdrawFee={stake.userData.withdrawFee} lastDepositTime={stake.userData.lastDepositTime} />,\n  )\n\n  const renderStakingButtons = () => {\n    return stakedBalance.eq(0) ? (\n      <Button\n        onClick={onPresentDeposit}\n        disabled={['history'].some((item) => location.pathname.includes(item))}\n      >\n        Stake\n      </Button>\n    ) : (\n      <div className='icon-button-wrapper'>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton\n          variant=\"tertiary\"\n          onClick={onPresentDeposit}\n          disabled={['history'].some((item) => location.pathname.includes(item))}\n        >\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </div>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={stakedBalance.eq(0) ? '#BDC2C4' : '#253449'}>{displayBalance()}</Heading>\n        {stakedBalance.gt(0) && (new BigNumber(tokenPriceBusd)).gt(0) && (\n          <Balance\n            fontSize=\"12px\"\n            color=\"#253449\"\n            decimals={2}\n            value={getBalanceNumber((new BigNumber(tokenPriceBusd)).times(stakedBalance))}\n            unit=\" USD\"\n            prefix=\"~\"\n          />\n        )}\n      </Flex>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { harvestFarm } from '../../../utils/calls'\nimport { useSafeChef } from '../../../hooks/useContract'\n\nconst useHarvestFarm = (farmPid) => {\n  const safeChefContract = useSafeChef()\n\n  const handleHarvest = useCallback(async () => {\n    await harvestFarm(safeChefContract, farmPid)\n  }, [farmPid, safeChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestFarm\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Balance from '../../../../components/Balance'\nimport { fetchStakeUserDataAsync } from '../../../../store/slices/stake-slice';\nimport useToast from '../../../../hooks/useToast'\nimport { getBalanceAmount } from '../../../../utils/formatBalance'\nimport { BIG_ZERO } from '../../../../utils/bigNumber'\nimport { useWeb3React } from '@web3-react/core'\nimport useHarvestStake from '../../hooks/useHarvestStake'\n\nconst HarvestAction = ({ earnings, pid }) => {\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestStake(pid)\n  const dispatch = useDispatch()\n  const sltPrice = new BigNumber(useSelector(state => state.app.priceOfOneSLT))\n  const rawEarningsBalance = account ? getBalanceAmount(earnings) : BIG_ZERO\n  const displayBalance = rawEarningsBalance.toFixed(3, BigNumber.ROUND_DOWN)  \n  const earningsBusd = rawEarningsBalance ? rawEarningsBalance.multipliedBy(sltPrice).toNumber() : 0\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={rawEarningsBalance.eq(0) ? '#BDC2C4' : '#253449'}>{displayBalance}</Heading>\n        {earningsBusd > 0 && (\n          <Balance fontSize=\"12px\" color=\"#253449\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n        )}\n      </Flex>\n      <Button\n        disabled={rawEarningsBalance.eq(0) || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          try {\n            await onReward()\n            toastSuccess(\n              `Harvested!`,\n              'Your SLT earnings have been sent to your wallet!'\n            )\n          } catch (e) {\n            toastError(\n              'Error',\n              'Please try again. Confirm the transaction and make sure you are paying enough gas!',\n            )\n            console.error(e)\n          } finally {\n            setPendingTx(false)\n          }\n          dispatch(fetchStakeUserDataAsync({ account, pids: [pid] }))\n        }}\n      >\n        Harvest\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import { useCallback } from 'react'\r\nimport { useGasPrice } from '../store/slices/user-slice/hooks'\r\nimport { get } from 'lodash'\r\n\r\nexport function useCallWithGasPrice() {\r\n  const gasPrice = useGasPrice()\r\n  const callWithGasPrice = useCallback(\r\n    async (\r\n      contract,\r\n      methodName,\r\n      methodArgs = [],\r\n      overrides = null,\r\n    ) => {\r\n      const contractMethod = get(contract, methodName)\r\n      const hasManualGasPriceOverride = overrides?.gasPrice\r\n      const tx = await contractMethod(\r\n        ...methodArgs,\r\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\r\n      )\r\n\r\n      return tx\r\n    },\r\n    [gasPrice],\r\n  )\r\n\r\n  return { callWithGasPrice }\r\n}\r\n","import { useCallback } from 'react'\nimport { ethers } from 'ethers'\nimport { useSafeChef } from '../../../hooks/useContract'\nimport { useCallWithGasPrice } from '../../../hooks/useCallWithGasPrice'\n\nconst useApproveStake = (stakeContract) => {\n  const safeChefContract = useSafeChef()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await callWithGasPrice(stakeContract, 'approve', [\n        safeChefContract.address,\n        ethers.constants.MaxUint256,\n      ])\n      const receipt = await tx.wait()\n      return receipt.status\n    } catch (e) {\n      return false\n    }\n  }, [stakeContract, safeChefContract, callWithGasPrice])\n\n  return { onApprove: handleApprove }\n}\n\nexport default useApproveStake\n","import React, { useState, useCallback } from 'react'\nimport { Button, Flex, Text } from '@pancakeswap/uikit'\nimport { useDispatch } from 'react-redux';\nimport { useERC20 } from '../../../../hooks/useContract'\nimport ConnectWalletButton from '../../../../components/ConnectWalletButton';\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\nimport './cardactionscontainer.scss';\n\nimport { fetchStakeUserDataAsync } from '../../../../store/slices/stake-slice';\nimport useApproveStake from '../../hooks/useApproveStake'\n\nconst CardActions = ({ stake, account, getTokenLink, sltPrice, stakeLabel }) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, token, tokenPriceBusd, withdrawFee } = stake\n  const { allowance, tokenBalance, stakedBalance, earnings } = stake.userData || {}\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const dispatch = useDispatch()\n\n  const stakeContract = useERC20(token.address)\n  const { onApprove } = useApproveStake(stakeContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchStakeUserDataAsync({ account, pids: [pid] }))\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stake={stake}\n        withdrawFee={withdrawFee}\n        tokenPriceBusd={tokenPriceBusd}\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={stake.stakeSymbol}\n        pid={pid}\n        apr={stake.apr}\n        stakeLabel={stakeLabel}\n        sltPrice={sltPrice}\n        getTokenLink={getTokenLink}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        Enable Contract\n      </Button>\n    )\n  }\n\n  return (\n    <div className='action'>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\" pr=\"4px\">\n          SLT\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\">\n          Earned\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\" pr=\"4px\">\n          {stake.stakeSymbol}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\">\n          Staked\n        </Text>\n      </Flex>\n      {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </div>\n  )\n}\n\nexport default CardActions\n","import React from 'react'\nimport { IconButton, useModal, CalculateIcon } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from '../../../../components/RoiCalculatorModal';\nimport { displayNumber } from '../../../../utils/formatBalance'\n\nimport './apybutton.scss';\n\nconst ApyButton = ({\n  variant,\n  stakeLabel,\n  sltPrice,\n  apr,\n  getTokenLink,\n}) => {\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      linkLabel={`Get ${stakeLabel}`}\n      earningTokenPrice={sltPrice}\n      apr={apr}\n      linkHref={getTokenLink}\n    />,\n  )\n\n  const handleClickButton = (event) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <div className='apy-label-container' onClick={handleClickButton}>\n      {displayNumber(apr)}%\n      {variant === 'text-and-button' && (\n        <IconButton variant=\"text\" className='apy-icon-button' scale=\"sm\" ml=\"4px\">\n          <CalculateIcon color='#253449' width=\"18px\" />\n        </IconButton>\n      )}\n    </div>\n  )\n}\n\nexport default ApyButton\n","import React, { useState } from 'react'\nimport { Card, Flex, Text, Skeleton } from '@pancakeswap/uikit'\nimport { getBscScanLink } from '../../../../utils';\nimport ExpandableSectionButton from '../../../../components/ExpandableSectionButton';\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton';\nimport './stakecard.scss';\n\nconst StakeCard = ({ stake, removed, sltPrice, account }) => {\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const totalValueFormatted =\n    stake.liquidity\n      ? `$${stake.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 3 })}`\n      : ''\n\n  const stakeLabel = stake.stakeSymbol && stake.stakeSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = stake.dual ? stake.dual.earnLabel : 'SLT'\n\n  const getTokenLink = stake.tokenAddress ? `https://pancakeswap.finance/swap?outputCurrency=${stake.tokenAddress}` : 'https://pancakeswap.finance/swap'\n  const isPromotedStake = stake.token.symbol === 'SLT'\n\n  return (\n    <Card className='styled-card' isActive={isPromotedStake}>\n      <Flex className='stakecard-inner-container'>\n        <CardHeading\n          pid={stake.pid}\n          stakeLabel={stakeLabel}\n          multiplier={stake.multiplier}\n          isCommunityStake={stake.isCommunity}\n          token={stake.token}\n        />\n        {!removed && (\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <Text color=\"#253449\">APR:</Text>\n            <Text color=\"#253449\" bold style={{ display: 'flex', alignItems: 'center' }}>\n              {stake.apr ? (\n                <ApyButton\n                  variant=\"text-and-button\"\n                  pid={stake.pid}\n                  stakeSymbol={stake.stakeSymbol}\n                  multiplier={stake.multiplier}\n                  stakeLabel={stakeLabel}\n                  tokenPriceBusd={stake.tokenPriceBusd}\n                  getTokenLink={getTokenLink}\n                  sltPrice={sltPrice}\n                  apr={stake.apr}\n                />\n              ) : (\n                <Skeleton height={24} width={80} />\n              )}\n            </Text>\n          </Flex>\n        )}\n        <Flex justifyContent=\"space-between\">\n          <Text color=\"#253449\">Earn:</Text>\n          <Text color=\"#253449\" bold>{earnLabel}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text color=\"#253449\">Deposit Fee:</Text>\n          <Text color=\"#253449\" bold>{`${stake.depositFeeBP ? stake.depositFeeBP / 100 : 0}%`}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text color=\"#253449\">Withdrawal Fee:</Text>\n          <Text color=\"#253449\" bold>{stake.isWithdrawFee ? `0~3%` : `0%`}</Text>\n        </Flex>\n        <CardActionsContainer\n          stake={stake}\n          stakeLabel={stakeLabel}\n          account={account}\n          sltPrice={sltPrice}\n          getTokenLink={getTokenLink}\n        />\n      </Flex>\n\n      <div className='expanding-wrapper'>\n        <ExpandableSectionButton\n          onClick={() => setShowExpandableSection(!showExpandableSection)}\n          expanded={showExpandableSection}\n        />\n        {showExpandableSection && (\n          <DetailsSection\n            removed={removed}\n            bscScanAddress={getBscScanLink(stake.tokenAddress, 'address')}\n            infoAddress={`/info/pool/${stake.tokenAddress}`}\n            totalValueFormatted={totalValueFormatted}\n            stakeLabel={stakeLabel}\n            getTokenLink={getTokenLink}\n          />\n        )}\n      </div>\n    </Card>\n  )\n}\n\nexport default StakeCard\n","import { useState, useEffect } from 'react'\r\n\r\nconst useDelayedUnmount = (isMounted, delayTime) => {\r\n  const [shouldRender, setShouldRender] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let timeoutId\r\n    if (isMounted && !shouldRender) {\r\n      setShouldRender(true)\r\n    } else if (!isMounted && shouldRender) {\r\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\r\n    }\r\n    return () => clearTimeout(timeoutId)\r\n  }, [isMounted, delayTime, shouldRender])\r\n  return shouldRender\r\n}\r\n\r\nexport default useDelayedUnmount\r\n","import React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from '../StakeCard/ApyButton';\nimport { Skeleton } from '@pancakeswap/uikit'\nimport { displayNumber } from '../../../../utils/formatBalance';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: #253449;\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: #253449;\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr = ({\n  pid,\n  stakeLabel,\n  stakeSymbol,\n  multiplier,\n  tokenPriceBusd,\n  tokenAddress,\n  sltPrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const getTokenLink = tokenAddress ? `https://pancakeswap.finance/swap?outputCurrency=${tokenAddress}` : 'https://pancakeswap.finance/swap'\n\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <ApyButton\n          variant={hideButton ? 'primary' : 'text-and-button'}\n          pid={pid}\n          stakeSymbol={stakeSymbol}\n          stakeLabel={stakeLabel}\n          tokenPriceBusd={tokenPriceBusd}\n          multiplier={multiplier}\n          sltPrice={sltPrice}\n          apr={originalValue}\n          getTokenLink={getTokenLink}\n        />\n      ) : (\n        <AprWrapper>\n          <Skeleton width={60} />\n        </AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{displayNumber(originalValue)}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useStakeUser } from '../../../../store/slices/stake-slice/hooks'\nimport { Text } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from '../../../../utils/formatBalance'\nimport tokens from '../../../../constants/tokens'\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  width: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n  }\n`\n\nconst Stake = ({ token, label, pid }) => {\n  const { stakedBalance } = useStakeUser(pid)\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const getImageUrlFromToken = (token) => {\n    const address = token.symbol === 'BNB' ? tokens.wbnb.address : token.address\n    return `/images/tokens/${address}.svg`\n  }\n\n  const handleRenderStaking = () => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"#253449\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          Staking\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <TokenWrapper>\n        <img src={getImageUrlFromToken(token)} width=\"100%\" alt=''/>\n      </TokenWrapper>\n      <div>\n        {handleRenderStaking()}\n        <Text color=\"#253449\" bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Stake\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nconst Amount = styled.span`\n  color: #253449;\n  display: flex;\n  align-items: center;\n`\n\nconst Earned = ({ earnings, userDataReady }) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap/uikit'\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: #1FC7D4;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details = ({ actionPanelToggled }) => {\n  const { isDesktop } = useMatchBreakpoints()\n\n  return (\n    <Container>\n      {!isDesktop && 'Details'}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, HelpIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nconst MultiplierWrapper = styled.div`\n  color: #253449;\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Multiplier = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const tooltipContent = (\n    <>\n      <Text color=\"#fff\">\n          The Multiplier represents the proportion of SLT rewards each stake receives, as a proportion of the SLT produced each block.\n      </Text>\n      <Text color=\"#fff\" my=\"24px\">\n        For example, if a 1x stake received 1 SLT per block, a 40x stake would receive 40 SLT per block.\n      </Text>\n      <Text color=\"#fff\">This amount is already included in all APR calculations for the stake.</Text>\n    </>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"#253449\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@pancakeswap/uikit'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Liquidity = ({ liquidity }) => {\n  const displayLiquidity =\n    liquidity ? (\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 3 })}`\n    ) : (\n      <Skeleton width={60} />\n    )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    'Total value of the funds in this stake’s liquidity pool',\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text color=\"#253449\">{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"#253449\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid #e9fbfb;\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  display: flex;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React, { useState } from 'react'\nimport { Button, Heading, Skeleton, Text } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { BIG_ZERO } from '../../../../../utils/bigNumber'\nimport { getBalanceAmount } from '../../../../../utils/formatBalance'\nimport Balance from '../../../../../components/Balance'\nimport { useDispatch } from 'react-redux'\nimport { fetchStakeUserDataAsync } from '../../../../../store/slices/stake-slice'\nimport useToast from '../../../../../hooks/useToast'\nimport useHarvestStake from '../../../hooks/useHarvestStake'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\nconst HarvestAction = ({ pid, userData, userDataReady }) => {\n  const { toastSuccess, toastError } = useToast()\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  let earnings = BIG_ZERO\n  let earningsBusd = 0\n  const sltPrice = new BigNumber(useSelector(state => state.app.priceOfOneSLT))\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceAmount(earningsBigNumber)\n    earningsBusd = earnings.multipliedBy(sltPrice).toNumber()\n    displayBalance = earnings.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestStake(pid)\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\" pr=\"4px\">\n          SLT\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\">\n          Earned\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Heading color=\"#253449\">{displayBalance}</Heading>\n          {earningsBusd > 0 && (\n            <Balance fontSize=\"12px\" color=\"#253449\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n          )}\n        </div>\n        <Button\n          disabled={earnings.eq(0) || pendingTx || !userDataReady}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onReward()\n              toastSuccess(\n                `Harvested!`,\n                `Your SLT earnings have been sent to your wallet!`\n              )\n            } catch (e) {\n              toastError(\n                'Error',\n                'Please try again. Confirm the transaction and make sure you are paying enough gas!'\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n            dispatch(fetchStakeUserDataAsync({ account, pids: [pid] }))\n          }}\n          ml=\"4px\"\n        >\n          Harvest\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Text, Heading } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport { BigNumber } from 'bignumber.js'\nimport ConnectWalletButton from '../../../../../components/ConnectWalletButton'\nimport Balance from '../../../../../components/Balance';\nimport { useWeb3React } from '@web3-react/core';\nimport { useStakeUser } from '../../../../../store/slices/stake-slice/hooks'\nimport { fetchStakeUserDataAsync } from '../../../../../store/slices/stake-slice'\nimport { useERC20 } from '../../../../../hooks/useContract';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getBalanceAmount, getFullDisplayBalance, getBalanceNumber } from '../../../../../utils/formatBalance'\nimport useUnstakeStakes from '../../../hooks/useUnstakeStakes'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport useStakes from '../../../hooks/useStakes'\nimport useApproveStake from '../../../hooks/useApproveStake'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\nconst Staked = ({\n  pid,\n  apr,\n  userData,\n  multiplier,\n  tokenAddress,\n  stakeSymbol,\n  stakeLabel,\n  token,\n  tokenPriceBusd\n}) => {\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useStakeUser(pid)\n  const { onStake } = useStakes(pid)\n  const { onUnstake } = useUnstakeStakes(pid)\n  const location = useLocation()\n  const sltPrice = new BigNumber(useSelector(state => state.app.priceOfOneSLT))\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const getTokenLink = tokenAddress ? `https://pancakeswap.finance/swap?outputCurrency=${tokenAddress}` : 'https://pancakeswap.finance/swap'\n\n  const handleStake = async (amount) => {\n    await onStake(amount)\n    dispatch(fetchStakeUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount) => {\n    await onUnstake(amount)\n    dispatch(fetchStakeUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return stakedBalanceBigNumber.toFixed(10, BigNumber.ROUND_DOWN)\n    }\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      stakePrice={tokenPriceBusd}\n      stakeLabel={stakeLabel}\n      apr={apr}\n      stakedBalance={stakedBalance}\n      onConfirm={handleStake}\n      tokenName={stakeSymbol}\n      multiplier={multiplier}\n      getTokenLink={getTokenLink}\n      sltPrice={sltPrice}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} stakePrice={tokenPriceBusd} tokenName={stakeSymbol} withdrawFee={userData.withdrawFee} lastDepositTime={userData.lastDepositTime} />,\n  )\n  const stakeContract = useERC20(token.address)\n  const dispatch = useDispatch()\n  const { onApprove } = useApproveStake(stakeContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchStakeUserDataAsync({ account, pids: [pid] }))\n\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\">\n            Start Staking\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\" pr=\"4px\">\n              {stakeSymbol}\n            </Text>\n            <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\">\n              Staked\n            </Text>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Heading color=\"#253449\">{displayBalance()}</Heading>\n              {stakedBalance.gt(0) && (new BigNumber(tokenPriceBusd)).gt(0) && (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"#253449\"\n                  decimals={2}\n                  value={getBalanceNumber((new BigNumber(tokenPriceBusd)).times(stakedBalance))}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              )}\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"primary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"#fff\" width=\"20px\" />\n              </IconButton>\n              <IconButton\n                variant=\"primary\"\n                onClick={onPresentDeposit}\n                disabled={['history'].some((item) => location.pathname.includes(item))}\n              >\n                <AddIcon color=\"#fff\" width=\"20px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\" pr=\"4px\">\n            STAKE\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\">\n            {stakeSymbol}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"primary\"\n            disabled={['history'].some((item) => location.pathname.includes(item))}\n          >\n            Stake\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\">\n          Enable Stake\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"primary\">\n          Enable\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport { LinkExternal, Text } from '@pancakeswap/uikit'\nimport { getBscScanLink } from '../../../../../utils'\nimport { CoreTag, DualTag } from '../../../../../components/Tags'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr from '../Apr'\nimport Multiplier from '../Multiplier'\nimport Liquidity from '../Liquidity'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 500px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 500px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: #eefbff;\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: #253449;\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel = ({\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  expanded,\n}) => {\n  const stake = details\n  const isActive = stake.multiplier !== '0X'\n  const { token, dual } = stake\n  const stakeLabel = stake.stakeSymbol && stake.stakeSymbol.toUpperCase().replace('PANCAKE', '')\n  const bsc = getBscScanLink(token.address, 'address')\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        {isActive && (\n          <StakeContainer>\n            <StyledLinkExternal href={`https://pancakeswap.finance/swap/`}>\n              {`Get ${stakeLabel}`}\n            </StyledLinkExternal>\n          </StakeContainer>\n        )}\n        <StyledLinkExternal href={bsc}>View Contract</StyledLinkExternal>\n        <TagsContainer>\n          {stake.pid === 5 && <CoreTag />}\n          {dual ? <DualTag /> : null}\n        </TagsContainer>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text color=\"#253449\">APR</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text color=\"#253449\">Multiplier</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text color=\"#253449\">Liquidity</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...stake} userDataReady={userDataReady} />\n        <StakedAction {...stake} userDataReady={userDataReady} stakeLabel={stakeLabel} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: #253449;\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\nconst CellLayout = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","export const MobileColumnSchema = [\n  {\n    id: 1,\n    name: 'stake',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema = [\n  {\n    id: 1,\n    name: 'stake',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 5,\n    name: 'multiplier',\n    sortable: true,\n    label: 'Multiplier',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport useDelayedUnmount from '../../../../hooks/useDelayedUnmount'\nimport { useStakeUser } from '../../../../store/slices/stake-slice/hooks'\n\nimport Apr from './Apr'\nimport Stake from './Stake'\nimport Earned from './Earned'\nimport Details from './Details'\nimport Multiplier from './Multiplier'\nimport Liquidity from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nconst cells = {\n  apr: Apr,\n  stake: Stake,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid #E7E3EB;\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst StakeMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row = (props) => {\n  const { details, userDataReady } = props\n  const hasStakedAmount = !!useStakeUser(details.pid).stakedBalance.toNumber()\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n\n  const { isDesktop, isMobile } = useMatchBreakpoints()\n\n  const isSmallerScreen = !isDesktop\n  const tableSchema = isSmallerScreen ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isMobile) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={'APR'}>\n                        <Apr {...props.apr} hideButton={isSmallerScreen} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={tableSchema[columnIndex].label}>\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <StakeMobileCell>\n              <CellLayout>\n                <Stake {...props.stake} />\n              </CellLayout>\n            </StakeMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={'Earned'}>\n                <Earned {...props.earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={'APR'}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon } from '@pancakeswap/uikit'\n\nimport Row from './Row'\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: #eefbff;\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst StakeTable = (props) => {\n  const tableWrapperEl = useRef(null)\n  const { data, columns, userDataReady } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'stake' })\n\n  const scrollToTop = () => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container id=\"stakes-table\">\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            To Top\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default StakeTable\n","import React from 'react'\nimport { useLocation, Link, useRouteMatch } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from '@pancakeswap/uikit'\nimport './staketabbuttons.scss';\n\nconst StakeTabButtons = ({ hasStakeInFinishedStakes }) => {\n  const { url } = useRouteMatch()\n  const location = useLocation()\n\n  let activeIndex\n  switch (location.pathname) {\n    case '/stake':\n      activeIndex = 0\n      break\n    case '/stake/history':\n      activeIndex = 1\n      break\n    default:\n      activeIndex = 0\n      break\n  }\n\n  return (\n    <div className='stake-tab-buttons-wrapper'>\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"primary\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          Live\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedStakes}>\n          <ButtonMenuItem id=\"finished-stakes-button\" as={Link} to={`${url}/history`}>\n            Finished\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </div>\n  )\n}\n\nexport default StakeTabButtons\n","import React from 'react'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from '../../../../store/slices/user-slice/actions';\nimport './toggleview.scss';\n\nconst ToggleView = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <div className='container'>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickStakeCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : '#BDC2C4'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickStakeTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : '#BDC2C4'} />\n      </IconButton>\n    </div>\n  )\n}\n\nexport default ToggleView\n","import { useEffect, useCallback, useState, useMemo, useRef } from 'react'\r\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { Heading, Toggle, Text, Flex } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport FlexLayout from '../../components/Layout/Flex'\r\nimport Page from '../../components/Layout/Page'\r\nimport { useStakes, usePollStakesWithUserData } from '../../store/slices/stake-slice/hooks';\r\nimport useIntersectionObserver from '../../hooks/useIntersectionObserver';\r\nimport { getBalanceNumber } from '../../utils/formatBalance';\r\nimport { latinise } from '../../utils/latinise';\r\nimport { useSelector } from 'react-redux';\r\nimport { useUserStakeStakedOnly, useUserStakesViewMode } from '../../store/slices/user-slice/hooks';\r\nimport { ViewMode } from '../../store/slices/user-slice/actions';\r\nimport PageHeader from '../../components/PageHeader'\r\nimport Loading from '../../components/Loading'\r\nimport StakeCard from './components/StakeCard/StakeCard'\r\nimport Table from './components/StakeTable/StakeTable'\r\nimport StakeTabButtons from './components/StakeTabButtons'\r\nimport ToggleView from './components/ToggleView/ToggleView'\r\nimport { DesktopColumnSchema } from './components/types'\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin-bottom: 32px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst NUMBER_OF_STAKES_VISIBLE = 12\r\n\r\nconst Stakes = () => {\r\n  const { path } = useRouteMatch()\r\n  const { pathname } = useLocation()\r\n  const { data: stakesData, userDataLoaded } = useStakes()\r\n  const { account } = useWeb3React()\r\n  const sltPrice = new BigNumber(useSelector(state => state.app.priceOfOneSLT))\r\n  const [query] = useState('')\r\n  const [viewMode, setViewMode] = useUserStakesViewMode()\r\n  const { observerRef, isIntersecting } = useIntersectionObserver()\r\n  const chosenStakesLength = useRef(0)\r\n\r\n  const isInactive = pathname.includes('history')\r\n  const isActive = !isInactive\r\n\r\n  usePollStakesWithUserData()\r\n\r\n  // Users with no wallet connected should see 0 as Earned amount\r\n  // Connected users should see loading indicator until first userData has loaded\r\n  const userDataReady = !account || (!!account && userDataLoaded)\r\n\r\n  const [stakedOnly, setStakedOnly] = useUserStakeStakedOnly(isActive)\r\n  const activeStakes = stakesData.filter(stake => stake.multiplier !== '0X' && stake.pid !== 8)\r\n  const inactiveStakes = stakesData.filter(stake => stake.multiplier === '0X' && stake.pid !== 8)\r\n  const stakedOnlyStakes = activeStakes.filter(\r\n    (stake) => stake.userData && new BigNumber(stake.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedInactiveStakes = inactiveStakes.filter(\r\n    (stake) => stake.userData && new BigNumber(stake.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakesList = useCallback(\r\n    (stakesToDisplay) => {\r\n      let stakesToDisplayWithAPR = stakesToDisplay.map((stake) => {\r\n        return stake\r\n      })\r\n\r\n      if (query) {\r\n        const lowercaseQuery = latinise(query.toLowerCase())\r\n        stakesToDisplayWithAPR = stakesToDisplayWithAPR.filter((stake) => {\r\n          return latinise(stake.stakeSymbol.toLowerCase()).includes(lowercaseQuery)\r\n        })\r\n      }\r\n      return stakesToDisplayWithAPR\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [sltPrice, query, isActive],\r\n  )\r\n\r\n\r\n  const [numberOfStakesVisible, setNumberOfStakesVisible] = useState(NUMBER_OF_STAKES_VISIBLE)\r\n\r\n  const chosenStakesMemoized = useMemo(() => {\r\n    let chosenStakes = []\r\n\r\n    if (isActive) {\r\n      chosenStakes = stakedOnly ? stakesList(stakedOnlyStakes) : stakesList(activeStakes)\r\n    }\r\n    if (isInactive) {\r\n      chosenStakes = stakedOnly ? stakesList(stakedInactiveStakes) : stakesList(inactiveStakes)\r\n    }\r\n    return chosenStakes.slice(0, numberOfStakesVisible)\r\n  }, [\r\n    activeStakes,\r\n    stakesList,\r\n    inactiveStakes,\r\n    isActive,\r\n    isInactive,\r\n    stakedInactiveStakes,\r\n    stakedOnly,\r\n    stakedOnlyStakes,\r\n    numberOfStakesVisible,\r\n  ])\r\n\r\n  chosenStakesLength.current = chosenStakesMemoized.length\r\n\r\n  useEffect(() => {\r\n    if (isIntersecting) {\r\n      setNumberOfStakesVisible((stakesCurrentlyVisible) => {\r\n        if (stakesCurrentlyVisible <= chosenStakesLength.current) {\r\n          return stakesCurrentlyVisible + NUMBER_OF_STAKES_VISIBLE\r\n        }\r\n        return stakesCurrentlyVisible\r\n      })\r\n    }\r\n  }, [isIntersecting])\r\n\r\n  const rowData = chosenStakesMemoized.map((stake) => {\r\n    const { token } = stake\r\n    const tokenAddress = token.address\r\n    const stakeLabel = stake.stakeSymbol && stake.stakeSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\r\n\r\n    const row = {\r\n      apr: {\r\n        pid: stake.pid,\r\n        multiplier: stake.multiplier,\r\n        stakeLabel,\r\n        stakeSymbol: stake.stakeSymbol,\r\n        tokenAddress,\r\n        sltPrice,\r\n        originalValue: stake.apr,\r\n      },\r\n      stake: {\r\n        label: stakeLabel,\r\n        pid: stake.pid,\r\n        token: stake.token,\r\n      },\r\n      earned: {\r\n        earnings: getBalanceNumber(new BigNumber(stake.userData.earnings)),\r\n        pid: stake.pid,\r\n      },\r\n      liquidity: {\r\n        liquidity: stake.liquidity,\r\n      },\r\n      multiplier: {\r\n        multiplier: stake.multiplier,\r\n      },\r\n      details: stake,\r\n    }\r\n    return row\r\n  })\r\n\r\n  const renderContent = () => {\r\n    if (viewMode === ViewMode.TABLE && rowData.length) {\r\n      const columnSchema = DesktopColumnSchema\r\n\r\n      const columns = columnSchema.map((column) => ({\r\n        id: column.id,\r\n        name: column.name,\r\n        label: column.label,\r\n        sort: (a, b) => {\r\n          switch (column.name) {\r\n            case 'stake':\r\n              return b.id - a.id\r\n            case 'apr':\r\n              if (a.original.apr.originalValue && b.original.apr.originalValue) {\r\n                return Number(a.original.apr.originalValue) - Number(b.original.apr.originalValue)\r\n              }\r\n\r\n              return 0\r\n            case 'earned':\r\n              return a.original.earned.earnings - b.original.earned.earnings\r\n            default:\r\n              return 1\r\n          }\r\n        },\r\n        sortable: column.sortable,\r\n      }))\r\n\r\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\r\n    }\r\n\r\n    return (\r\n      <FlexLayout style={{ margin: '16px 0' }}>\r\n        <Route exact path={`${path}`}>\r\n          {chosenStakesMemoized.map((stake) => (\r\n            <StakeCard\r\n              key={stake.pid}\r\n              stake={stake}\r\n              sltPrice={sltPrice}\r\n              account={account}\r\n              removed={false}\r\n            />\r\n          ))}\r\n        </Route>\r\n        <Route exact path={`${path}/history`}>\r\n          {chosenStakesMemoized.map((stake) => (\r\n            <StakeCard\r\n              key={stake.pid}\r\n              stake={stake}\r\n              sltPrice={sltPrice}\r\n              account={account}\r\n              removed\r\n            />\r\n          ))}\r\n        </Route>\r\n      </FlexLayout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        <Heading as=\"h1\" scale=\"xxl\" color=\"#253449cc\" mb=\"24px\">\r\n          Stake\r\n        </Heading>\r\n        <Heading scale=\"lg\" color=\"#253449\">\r\n          Stake tokens to earn.\r\n        </Heading>\r\n      </PageHeader>\r\n      <Page>\r\n        <ControlContainer>\r\n          <ViewControls>\r\n            <ToggleView viewMode={viewMode} onToggle={(mode) => setViewMode(mode)} />\r\n            <ToggleWrapper>\r\n              <Toggle\r\n                id=\"staked-only-stakes\"\r\n                checked={stakedOnly}\r\n                onChange={() => setStakedOnly(!stakedOnly)}\r\n                scale=\"sm\"\r\n              />\r\n              <Text color=\"#1FC7D4\">Staked only</Text>\r\n            </ToggleWrapper>\r\n            <StakeTabButtons hasStakeInFinishedStakes={stakedInactiveStakes.length > 0} />\r\n          </ViewControls>\r\n      </ControlContainer>\r\n        {renderContent()}\r\n        {account && !userDataLoaded && stakedOnly && (\r\n          <Flex justifyContent=\"center\">\r\n            <Loading />\r\n          </Flex>\r\n        )}\r\n        <div ref={observerRef} />\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Stakes\r\n","import { useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Grid, Zoom } from \"@mui/material\";\nimport { Skeleton, Button, Input } from '@pancakeswap/uikit';\nimport Web3 from 'web3';\nimport \"./dashboard.scss\";\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React';\nimport { getDividendDistributorAddress } from '../../utils/addressHelpers';\nimport dividendDistributorABI from '../../abi/dividendDistributorContract.json';\n\nconst web3 = new Web3(new Web3.providers.HttpProvider(\"https://bsc-dataseed.binance.org/\"));\n\nfunction Dashboard() {\n    const isAppLoading = useSelector(state => state.app.loading);\n    const app = useSelector(state => state.app);\n    const { account } = useActiveWeb3React();\n\n    const [volume, setVolume] = useState(0);\n    const [usersReward, setUsersReward] = useState(0);\n\n    const changeVolume = (e) => {\n        let value = parseInt(e.target.value, 10)\n        if (e.target.value === \"\") {\n            setVolume(e.target.value);\n        }\n        if (!value) {\n            return;\n        }\n        setVolume(value);\n        let percentageOfUserBalance  = (app.balanceOfUser / app.circulatingSupply);\n        let volumeOfRewards =  value * 0.08;\n        setUsersReward(percentageOfUserBalance * volumeOfRewards);\n    }\n\n    const claimBNB = async () => {\n        if (!account) {\n            alert(\"Please connect your wallet\");\n            return;\n        }\n        const dividendDistributorContract = await new web3.eth.Contract(dividendDistributorABI, getDividendDistributorAddress())\n        let Data = await dividendDistributorContract.methods.claimDividend().encodeABI();\n\n        let Txdetail = {\n            from: account,\n            to: getDividendDistributorAddress(),\n            value: web3.utils.toHex(web3.utils.toWei(\"0\")),\n            gasPrice: web3.utils.toHex(web3.utils.toWei('5', 'gwei')),\n            gasLimit: web3.utils.toHex(web3.utils.toWei('100000', 'gwei')),\n            data: Data\n        }\n        window.ethereum.request({ method: 'eth_sendTransaction', params: [Txdetail] })\n            .then(async (res) => {\n                var ethFlag = true;\n                while(ethFlag) {\n                    await web3.eth.getTransactionReceipt(res, (error, receipt) => {\n                        if (error) {\n                            console.log(error)\n                            alert(\"claim failed\");\n                        } else if (receipt == null) {\n                    } else {\n                        console.log(\"confirm\", receipt);\n                        alert(\"Claim Successfull\");\n                        ethFlag = false;\n                    }\n                });\n            }\n        })\n    }\n\n    return (\n        <div className=\"dashboard-view\">\n            <div className=\"dashboard-infos-wrap\">\n                <Zoom in={true}>\n                    <Grid container spacing={4}>\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Current Price</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width={100} />\n                                    ) : (\n                                        `$ ${new Intl.NumberFormat('en-US').format(app.priceOfOneHaven)}`\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Circulating Supply</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width={200} />\n                                    ) : (\n                                        new Intl.NumberFormat('en-US').format(app.circulatingSupply)\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Liquidity Pool Balance</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width={160} />\n                                    ) : (\n                                        `$ ${new Intl.NumberFormat('en-US').format(app.liquidityPoolInDollars)}`\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Market Cap</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width={160} />\n                                    ) : (\n                                        `$ ${new Intl.NumberFormat('en-US').format(app.marketCap)}`\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Total $Haven Holdings</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width={200} />\n                                    ) : (\n                                        app.balanceOfUser\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Total ETH Paid</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width={200} />\n                                    ) : (\n                                        `${new Intl.NumberFormat('en-US').format(app.totalRealised)} ETH `\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Pending ETH Rewards</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width={200} />\n                                    ) : (\n                                        `${app.unpaidEarnings} ETH `\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Sell Tax</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width={100} />\n                                    ) : (\n                                        `${app.taxSaleInPercentage} %`\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Buy Tax</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width={100} />\n                                    ) : (\n                                        `${app.buyTaxInPercentage} % `\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Total Burned</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width={200} />\n                                    ) : (\n                                        new Intl.NumberFormat('en-US').format(app.burntTokens)\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <div className=\"double-button-bar\">\n                                <Button\n                                    as=\"a\"\n                                    href=\"https://pancakeswap.finance/swap?outputCurrency=0x9caE753B661142aE766374CEFA5dC800d80446aC\" \n                                    external\n                                >\n                                    BUY $HAVEN\n                                </Button>\n                                <Button onClick={claimBNB}>CLAIM ETH</Button>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <div className=\"dashboard-card trading-container\">\n                                <p className=\"trading-desc\">\n                                    Estimations are based on a default of the last 24h of trading volume.\n                                    Change the volume to predict earnings based on other volume figures.\n                                </p>\n                                <div className=\"trading-info\">\n                                    <div className=\"mini-container\">\n                                        <span>Trading Volume = $</span>\n                                        <Input type=\"text\" value={volume} onChange={changeVolume} />\n                                    </div>\n                                </div>\n                            </div>\n                        </Grid>\n                        \n                        <Grid item xs={12}>\n                            <div className=\"dashboard-card trading-container-2\">\n                                <p>YOUR ETH EARNINGS 24H : {usersReward.toFixed(5)} USD</p>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <div className=\"dashboard-card trading-container-2\">\n                                <p>\n                                    {isAppLoading ? (\n                                        <Skeleton width={200} />\n                                    ) : (\n                                        `TOTAL PAID TO HOLDERS : ${new Intl.NumberFormat('en-US').format(app.totalDistributed)} ETH`\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <div className=\"dashboard-card trading-container-2\">\n                                <p>\n                                    {isAppLoading ? (\n                                        <Skeleton width={200} />\n                                    ) : (\n                                        `$HAVEN BUYBACK BALANCE : ${new Intl.NumberFormat('en-US').format(app.balanceOfContract)} BNB`\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Zoom>\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboard;\n","import \"./notfound.scss\";\n\nfunction NotFound() {\n    return (\n        <div className=\"not-found-page\">\n            <p>Page not found</p>\n        </div>\n    );\n}\n\nexport default NotFound;\n","import { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from '../../../utils/bigNumber';\nimport farmsConfig from '../../../constants/farms';\nimport useRefresh from '../../../hooks/useRefresh';\nimport { deserializeToken } from '../user-slice/hooks/helpers';\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from '.'\n\nconst deserializeFarmUserData = (farm) => {\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n    withdrawFee: farm.userData ? new BigNumber(farm.userData.withdrawFee) : BIG_ZERO,\n    lastDepositTime: farm.userData ? new BigNumber(farm.userData.lastDepositTime) : BIG_ZERO,\n  }\n}\n\nconst deserializeFarm = (farm) => {\n  const { \n    quoteTokenAmountTotal, \n    lpAddresses, \n    lpSymbol, \n    pid, \n    dual, \n    multiplier, \n    isCommunity, \n    quoteTokenPriceBusd, \n    tokenPriceBusd, \n    isWithdrawFee, \n    depositFeeBP, \n    earningsPerBlock, \n    quoteTokenAmountMc,\n    totalAllocPoint,\n    lpTokenRatio, \n    liquidity, \n    apr,\n    lastRewardBlock,\n    accEarningsPerShare,\n  } = farm\n  return {\n    accEarningsPerShare,\n    lastRewardBlock,\n    quoteTokenAmountTotal,\n    liquidity,\n    apr,\n    isWithdrawFee,\n    depositFeeBP,\n    lpAddresses,\n    lpSymbol,\n    pid,\n    dual,\n    multiplier,\n    isCommunity,\n    quoteTokenPriceBusd,\n    tokenPriceBusd,\n    token: deserializeToken(farm.token),\n    quoteToken: deserializeToken(farm.quoteToken),\n    userData: deserializeFarmUserData(farm),\n    tokenAmountTotal: farm.tokenAmountTotal ? new BigNumber(farm.tokenAmountTotal) : BIG_ZERO,\n    lpTotalInQuoteToken: farm.lpTotalInQuoteToken ? new BigNumber(farm.lpTotalInQuoteToken) : BIG_ZERO,\n    lpTotalSupply: farm.lpTotalSupply ? new BigNumber(farm.lpTotalSupply) : BIG_ZERO,\n    tokenPriceVsQuote: farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO,\n    poolWeight: farm.poolWeight ? new BigNumber(farm.poolWeight) : BIG_ZERO,\n    earningsPerBlock,\n    totalAllocPoint,\n    lpTokenRatio,\n    quoteTokenAmountMc\n  }\n}\n\nexport const usePollFarmsPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const pids = farmsConfig.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePollFarmsWithUserData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const pids = farmsConfig.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [dispatch, slowRefresh, account])\n}\n\nexport const useFarms = () => {\n  const farms = useSelector((state) => state.farms)\n  const deserializedFarmsData = farms.data.map(deserializeFarm)\n  const { userDataLoaded } = farms\n  return {\n    userDataLoaded,\n    data: deserializedFarmsData,\n  }\n}\n\nexport const useFarmFromPid = (pid) => {\n  const farm = useSelector((state) => state.farms.data.find((f) => f.pid === pid))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol) => {\n  const farm = useSelector((state) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmUser = (pid) => {\n  const { userData } = useFarmFromPid(pid)\n  const { allowance, tokenBalance, stakedBalance, earnings, withdrawFee, lastDepositTime } = userData\n  return {\n    allowance,\n    tokenBalance,\n    stakedBalance,\n    earnings,\n    withdrawFee,\n    lastDepositTime\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid) => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.tokenPriceBusd)\n}\n\nexport const useLpTokenPrice = (symbol) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply.gt(0) && farm.lpTotalInQuoteToken.gt(0)) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = farm.lpTotalSupply\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}","import tokens from '../constants/tokens';\n\nconst getLiquidityUrlPathParts = ({\n  quoteTokenAddress,\n  tokenAddress,\n}) => {\n  const wBnbAddress = tokens.wbnb.address\n  const firstPart = !quoteTokenAddress || quoteTokenAddress === wBnbAddress ? 'BNB' : quoteTokenAddress\n  const secondPart = !tokenAddress || tokenAddress === wBnbAddress ? 'BNB' : tokenAddress\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport { Text, Flex, LinkExternal, Skeleton } from '@pancakeswap/uikit'\nimport './detailssection.scss';\n\nconst DetailsSection = ({\n  bscScanAddress,\n  infoAddress,\n  removed,\n  totalValueFormatted,\n  lpLabel,\n  addLiquidityUrl,\n}) => {\n  return (\n    <div className='details-section-wrapper'>\n      <Flex className='total-liquidity'>\n        <Text color=\"#253449\">Total Liquidity:</Text>\n        {totalValueFormatted || totalValueFormatted === 0 ? <Text color=\"#253449\">{totalValueFormatted}</Text> : <Skeleton width={75} height={25} />}\n      </Flex>\n      {!removed && (\n        <LinkExternal className='styled-link-external' href={addLiquidityUrl}>{`Get ${lpLabel}`}</LinkExternal>\n      )}\n      <LinkExternal className='styled-link-external' href={bscScanAddress}>View Contract</LinkExternal>\n    </div>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenImage as UIKitTokenImage,\n} from '@pancakeswap/uikit'\nimport tokens from '../../constants/tokens';\n\nconst getImageUrlFromToken = (token) => {\n  const address = token.symbol === 'BNB' ? tokens.wbnb.address : token.address\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\nexport const TokenImage = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import React from 'react'\nimport { Tag, Flex, Heading, Skeleton } from '@pancakeswap/uikit'\nimport { CoreTag } from '../../../../components/Tags';\nimport { TokenPairImage } from '../../../../components/TokenImage';\nimport './cardheading.scss';\n\nconst CardHeading = ({ pid, lpLabel, multiplier, isCommunityFarm, token, quoteToken }) => {\n  return (\n    <Flex className='card-heading-wrapper' justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={64} height={64} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading color=\"#253449\" mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\n        <Flex justifyContent=\"center\">\n          {pid < 6 && pid >= 0 && <CoreTag />}\n          {multiplier ? (\n            <Tag className=\"multiplier-tag\" variant=\"primary\">{multiplier}</Tag>\n          ) : (\n            <Skeleton ml=\"4px\" width={42} height={28} />\n          )}\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardHeading\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Button, Modal, LinkExternal, CalculateIcon, IconButton } from '@pancakeswap/uikit'\nimport { ModalActions, ModalInput } from '../../../components/Modal'\nimport RoiCalculatorModal from '../../../components/RoiCalculatorModal'\nimport { getFullDisplayBalance, formatNumber } from '../../../utils/formatBalance'\nimport useToast from '../../../hooks/useToast'\nimport { getInterestBreakdown } from '../../../utils/compoundApyHelpers'\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst DepositModal = ({\n  max,\n  stakedBalance,\n  depositFeeBP,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  multiplier,\n  lpPrice,\n  lpLabel,\n  apr,\n  addLiquidityUrl,\n  sltPrice,\n}) => {\n  const [val, setVal] = useState(0)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const lpTokensToStake = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const usdToStake = lpTokensToStake.times(lpPrice)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !lpTokensToStake.isNaN() ? usdToStake.toNumber() : 0,\n    apr,\n    earningTokenPrice: sltPrice,\n  })\n\n  const annualRoi = sltPrice.times(interestBreakdown[3])\n  const formattedAnnualRoi = formatNumber(\n    annualRoi.toNumber(),\n    annualRoi.gt(10000) ? 0 : 2,\n    annualRoi.gt(10000) ? 0 : 2,\n  )\n  const handleChange = useCallback(\n    (e) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        linkLabel={`Get ${lpLabel}`}\n        earningTokenPrice={sltPrice}\n        apr={apr}\n        linkHref={addLiquidityUrl}\n        onBack={() => setShowRoiCalculator(false)}\n      />\n    )\n  }\n\n  return (\n    <Modal title={'Stake LP tokens'} onDismiss={onDismiss}>\n      <Flex justifyContent=\"space-between\" mb=\"8px\">\n        <Text color=\"#253449\">Deposit Fee:</Text>\n        <Text color=\"#253449\" bold>{`${depositFeeBP ? depositFeeBP / 100: 0}%`}</Text>\n      </Flex>\n      <ModalInput\n        value={val}\n        usdToStake={usdToStake}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={'Stake'}\n      />\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Text mr=\"8px\" color=\"#253449\">\n          Annual ROI at current rates:\n        </Text>\n        <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n          <AnnualRoiDisplay color=\"#253449\">${formattedAnnualRoi}</AnnualRoiDisplay>\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"#253449\" width=\"18px\" />\n          </IconButton>\n        </AnnualRoiContainer>\n      </Flex>\n      <ModalActions>\n        <Button variant=\"primary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          Cancel\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={\n            pendingTx || !lpTokensToStake.isFinite() || lpTokensToStake.eq(0) || lpTokensToStake.gt(fullBalanceNumber)\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess('Staked!', 'Your funds have been staked in the farm')\n              onDismiss()\n            } catch (e) {\n              toastError(\n                'Error',\n                'Please try again. Confirm the transaction and make sure you are paying enough gas!',\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n        >\n          {pendingTx ? 'Confirming' : 'Confirm'}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {`Get ${tokenName}`}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, Text, Flex } from '@pancakeswap/uikit'\nimport { ModalActions, ModalInput } from '../../../components/Modal'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\nimport useToast from '../../../hooks/useToast'\n\nconst WithdrawModal = ({ onConfirm, onDismiss, max, tokenName = '', lpPrice, isWithdrawFee, withdrawFee, lastDepositTime }) => {\n  const [val, setVal] = useState(0)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const usdToStake = valNumber.times(lpPrice)\n  const handleChange = useCallback(\n    (e) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={'Unstake LP tokens'} onDismiss={onDismiss}>\n      <Flex justifyContent=\"space-between\" mb=\"8px\">\n        <Text color=\"#253449\">The last deposit block number:</Text>\n        <Text color=\"#253449\" bold>{lastDepositTime.toString()}</Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\" mb=\"8px\">\n        <Text color=\"#253449\">Withdrawal Fee:</Text>\n        <Text color=\"#253449\" bold>{`${withdrawFee.toString()}%`}</Text>\n      </Flex>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        usdToStake={usdToStake}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={'Unstake'}\n      />\n      <ModalActions>\n        <Button variant=\"primary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          Cancel\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess('Unstaked!', 'Your earnings have also been harvested to your wallet')\n              onDismiss()\n            } catch (e) {\n              toastError(\n                'Error',\n                'Please try again. Confirm the transaction and make sure you are paying enough gas!',\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? 'Confirming' : 'Confirm'}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import { useCallback } from 'react'\nimport { unstakeFarm } from '../../../utils/calls'\nimport { useSafeChef } from '../../../hooks/useContract'\n\nconst useUnstakeFarms = (pid) => {\n  const safeChefContract = useSafeChef()\n\n  const handleUnstake = useCallback(\n    async (amount) => {\n      await unstakeFarm(safeChefContract, pid, amount)\n    },\n    [safeChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakeFarms\n","import { useCallback } from 'react'\nimport { stakeFarm } from '../../../utils/calls'\nimport { useSafeChef } from '../../../hooks/useContract'\n\nconst useStakeFarms = (pid) => {\n  const safeChefContract = useSafeChef()\n\n  const handleStake = useCallback(\n    async (amount) => {\n      const txHash = await stakeFarm(safeChefContract, pid, amount)\n      console.info(txHash)\n    },\n    [safeChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakeFarms\n","import React, { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport Balance from '../../../../components/Balance';\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync } from '../../../../store/slices/farms-slice'\nimport { useLpTokenPrice } from '../../../../store/slices/farms-slice/hooks';\nimport { getBalanceAmount, getBalanceNumber } from '../../../../utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\nimport useUnstakeFarms from '../../hooks/useUnstakeFarms'\nimport useStakeFarms from '../../hooks/useStakeFarms'\nimport './stakeaction.scss'\n\nconst StakeAction = ({\n  farm,\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  multiplier,\n  apr,\n  addLiquidityUrl,\n  sltPrice,\n  lpLabel,\n}) => {\n  const { onStake } = useStakeFarms(pid)\n  const { onUnstake } = useUnstakeFarms(pid)\n  const location = useLocation()\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  \n  const lpPrice = useLpTokenPrice(farm.lpSymbol)\n\n  const handleStake = async (amount) => {\n    await onStake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return '<0.0000001'\n    }\n    if (stakedBalanceBigNumber.gt(0)) {\n      return stakedBalanceBigNumber.toFixed(8, BigNumber.ROUND_DOWN)\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      depositFeeBP={farm.depositFeeBP}\n      stakedBalance={stakedBalance}\n      onConfirm={handleStake}\n      tokenName={tokenName}\n      multiplier={multiplier}\n      lpPrice={lpPrice}\n      lpLabel={lpLabel}\n      apr={apr}\n      addLiquidityUrl={addLiquidityUrl}\n      sltPrice={sltPrice}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} lpPrice={lpPrice} tokenName={tokenName} isWithdrawFee={farm.isWithdrawFee} withdrawFee={farm.userData.withdrawFee} lastDepositTime={farm.userData.lastDepositTime} />,\n  )\n\n  const renderStakingButtons = () => {\n    return stakedBalance.eq(0) ? (\n      <Button\n        onClick={onPresentDeposit}\n        disabled={['history'].some((item) => location.pathname.includes(item))}\n      >\n        Stake LP\n      </Button>\n    ) : (\n      <div className='icon-button-wrapper'>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton\n          variant=\"tertiary\"\n          onClick={onPresentDeposit}\n          disabled={['history'].some((item) => location.pathname.includes(item))}\n        >\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </div>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={stakedBalance.eq(0) ? '#BDC2C4' : '#253449'}>{displayBalance()}</Heading>\n        {stakedBalance.gt(0) && lpPrice.gt(0) && (\n          <Balance\n            fontSize=\"12px\"\n            color=\"#253449\"\n            decimals={2}\n            value={getBalanceNumber(lpPrice.times(stakedBalance))}\n            unit=\" USD\"\n            prefix=\"~\"\n          />\n        )}\n      </Flex>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { harvestFarm } from '../../../utils/calls'\nimport { useSafeChef } from '../../../hooks/useContract'\n\nconst useHarvestFarm = (farmPid) => {\n  const safeChefContract = useSafeChef()\n  const handleHarvest = useCallback(async () => {\n    await harvestFarm(safeChefContract, farmPid)\n  }, [farmPid, safeChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestFarm\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchFarmUserDataAsync } from '../../../../store/slices/farms-slice';\nimport useToast from '../../../../hooks/useToast'\nimport { getBalanceAmount } from '../../../../utils/formatBalance'\nimport { BIG_ZERO } from '../../../../utils/bigNumber'\nimport Balance from '../../../../components/Balance';\nimport useHarvestFarm from '../../hooks/useHarvestFarm'\nimport { useWeb3React } from '@web3-react/core';\n\nconst HarvestAction = ({ earnings, pid }) => {\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestFarm(pid)\n  const sltPrice = new BigNumber(useSelector(state => state.app.priceOfOneSLT))\n  const dispatch = useDispatch()\n  const rawEarningsBalance = account ? getBalanceAmount(earnings) : BIG_ZERO\n  const displayBalance = rawEarningsBalance.toFixed(3, BigNumber.ROUND_DOWN)\n  const earningsBusd = rawEarningsBalance ? rawEarningsBalance.multipliedBy(sltPrice).toNumber() : 0\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={rawEarningsBalance.eq(0) ? '#BDC2C4' : '#253449'}>{displayBalance}</Heading>\n        {earningsBusd > 0 && (\n          <Balance fontSize=\"12px\" color=\"#253449\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n        )}\n      </Flex>\n      <Button\n        disabled={rawEarningsBalance.eq(0) || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          try {\n            await onReward()\n            toastSuccess(\n              `Harvested!`,\n              'Your SLT earnings have been sent to your wallet!'\n            )\n          } catch (e) {\n            toastError(\n              'Error',\n              'Please try again. Confirm the transaction and make sure you are paying enough gas!',\n            )\n            console.error(e)\n          } finally {\n            setPendingTx(false)\n          }\n          dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n        }}\n      >\n        Harvest\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import { useCallback } from 'react'\nimport { ethers } from 'ethers'\nimport { useSafeChef } from '../../../hooks/useContract'\nimport { useCallWithGasPrice } from '../../../hooks/useCallWithGasPrice'\n\nconst useApproveFarm = (lpContract) => {\n  const safeChefContract = useSafeChef()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await callWithGasPrice(lpContract, 'approve', [\n        safeChefContract.address,\n        ethers.constants.MaxUint256,\n      ])\n      const receipt = await tx.wait()\n      return receipt.status\n    } catch (e) {\n      return false\n    }\n  }, [lpContract, safeChefContract, callWithGasPrice])\n\n  return { onApprove: handleApprove }\n}\n\nexport default useApproveFarm\n","import React, { useState, useCallback } from 'react'\nimport { Button, Flex, Text } from '@pancakeswap/uikit'\nimport { getAddress } from '../../../../utils/addressHelpers';\nimport { useDispatch } from 'react-redux';\nimport { fetchFarmUserDataAsync } from '../../../../store/slices/farms-slice';\nimport { useERC20 } from '../../../../hooks/useContract'\nimport ConnectWalletButton from '../../../../components/ConnectWalletButton';\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\nimport useApproveFarm from '../../hooks/useApproveFarm'\nimport './cardactionscontainer.scss';\n\nconst CardActions = ({ farm, account, addLiquidityUrl, sltPrice, lpLabel }) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses } = farm\n  const { allowance, tokenBalance, stakedBalance, earnings } = farm.userData || {}\n  const lpAddress = getAddress(lpAddresses)\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const dispatch = useDispatch()\n\n  const lpContract = useERC20(lpAddress)\n\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        farm={farm}\n        withdrawFee={farm.withdrawFee}\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={farm.lpSymbol}\n        pid={pid}\n        apr={farm.apr}\n        lpLabel={lpLabel}\n        sltPrice={sltPrice}\n        addLiquidityUrl={addLiquidityUrl}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        Enable Contract\n      </Button>\n    )\n  }\n\n  return (\n    <div className='action'>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\" pr=\"4px\">\n          SLT\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\">\n          Earned\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\" pr=\"4px\">\n          {farm.lpSymbol}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\">\n          Staked\n        </Text>\n      </Flex>\n      {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </div>\n  )\n}\n\nexport default CardActions\n","import React from 'react'\nimport { IconButton, useModal, CalculateIcon } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from '../../../../components/RoiCalculatorModal';\nimport { displayNumber } from '../../../../utils/formatBalance';\nimport './apybutton.scss';\n\nconst ApyButton = ({\n  variant,\n  lpLabel,\n  sltPrice,\n  apr,\n  addLiquidityUrl,\n}) => {\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      linkLabel={`Get ${lpLabel}`}\n      earningTokenPrice={sltPrice}\n      apr={apr}\n      linkHref={addLiquidityUrl}\n    />,\n  )\n\n  const handleClickButton = (event) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <div className='apy-label-container' onClick={handleClickButton}>\n      {displayNumber(apr)}%\n      {variant === 'text-and-button' && (\n        <IconButton variant=\"text\" className='apy-icon-button' scale=\"sm\" ml=\"4px\">\n          <CalculateIcon color='#253449' width=\"18px\" />\n        </IconButton>\n      )}\n    </div>\n  )\n}\n\nexport default ApyButton\n","import React, { useState } from 'react'\nimport { Card, Flex, Text, Skeleton } from '@pancakeswap/uikit'\nimport { getBscScanLink } from '../../../../utils';\nimport ExpandableSectionButton from '../../../../components/ExpandableSectionButton';\nimport { getAddress } from '../../../../utils/addressHelpers';\nimport getLiquidityUrlPathParts from '../../../../utils/getLiquidityUrlPathParts';\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton';\nimport './farmcard.scss';\n\nconst FarmCard = ({ farm, removed, sltPrice, account }) => {\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const totalValueFormatted =\n    farm.liquidity\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 4 })}`\n      : ''\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'SLT'\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n  })\n  const addLiquidityUrl = `https://pancakeswap.finance/add/${liquidityUrlPathParts}`\n  const lpAddress = getAddress(farm.lpAddresses)\n  const isPromotedFarm = farm.token.symbol === 'SLT'\n\n  return (\n    <Card className='styled-card' isActive={isPromotedFarm}>\n      <Flex className='farmcard-inner-container'>\n        <CardHeading\n          pid={farm.pid}\n          lpLabel={lpLabel}\n          multiplier={farm.multiplier}\n          isCommunityFarm={farm.isCommunity}\n          token={farm.token}\n          quoteToken={farm.quoteToken}\n        />\n        {!removed && (\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <Text color=\"#253449\">APR:</Text>\n            <Text color=\"#253449\" bold style={{ display: 'flex', alignItems: 'center' }}>\n              {farm.apr || farm.apr === 0 ? (\n                <ApyButton\n                  variant=\"text-and-button\"\n                  pid={farm.pid}\n                  lpSymbol={farm.lpSymbol}\n                  multiplier={farm.multiplier}\n                  lpLabel={lpLabel}\n                  addLiquidityUrl={addLiquidityUrl}\n                  sltPrice={sltPrice}\n                  apr={farm.apr}\n                />\n              ) : (\n                <Skeleton height={24} width={80} />\n              )}\n            </Text>\n          </Flex>\n        )}\n        <Flex justifyContent=\"space-between\">\n          <Text color=\"#253449\">Earn:</Text>\n          <Text color=\"#253449\" bold>{earnLabel}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text color=\"#253449\">Deposit Fee:</Text>\n          <Text color=\"#253449\" bold>{`${farm.depositFeeBP ? farm.depositFeeBP / 100: 0}%`}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text color=\"#253449\">Withdrawal Fee:</Text>\n          <Text color=\"#253449\" bold>{farm.isWithdrawFee ? `0~3%` : `0%`}</Text>\n        </Flex>\n        <CardActionsContainer\n          farm={farm}\n          lpLabel={lpLabel}\n          account={account}\n          sltPrice={sltPrice}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </Flex>\n\n      <div className='expanding-wrapper'>\n        <ExpandableSectionButton\n          onClick={() => setShowExpandableSection(!showExpandableSection)}\n          expanded={showExpandableSection}\n        />\n        {showExpandableSection && (\n          <DetailsSection\n            removed={removed}\n            bscScanAddress={getBscScanLink(lpAddress, 'address')}\n            infoAddress={`/#/info/pool/${lpAddress}`}\n            totalValueFormatted={totalValueFormatted}\n            lpLabel={lpLabel}\n            addLiquidityUrl={addLiquidityUrl}\n          />\n        )}\n      </div>\n    </Card>\n  )\n}\n\nexport default FarmCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from '../FarmCard/ApyButton';\nimport getLiquidityUrlPathParts from '../../../../utils/getLiquidityUrlPathParts'\nimport { Skeleton } from '@pancakeswap/uikit'\nimport { displayNumber } from '../../../../utils/formatBalance';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: #253449;\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: #253449;\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr = ({\n  value,\n  pid,\n  lpLabel,\n  lpSymbol,\n  multiplier,\n  tokenAddress,\n  quoteTokenAddress,\n  sltPrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\n  const addLiquidityUrl = `https://pancakeswap.finance/add/${liquidityUrlPathParts}`\n\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <ApyButton\n          variant={hideButton ? 'primary' : 'text-and-button'}\n          pid={pid}\n          lpSymbol={lpSymbol}\n          lpLabel={lpLabel}\n          multiplier={multiplier}\n          sltPrice={sltPrice}\n          apr={originalValue}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      ) : (\n        <AprWrapper>\n          <Skeleton width={60} />\n        </AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{displayNumber(originalValue)}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from '../../../../store/slices/farms-slice/hooks'\nimport { Text } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from '../../../../utils/formatBalance'\nimport { TokenPairImage } from '../../../../components/TokenImage'\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  width: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n  }\n`\n\nconst Farm = ({ token, quoteToken, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = () => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"#253449\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          Farming\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <TokenWrapper>\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={40} height={40} />\n      </TokenWrapper>\n      <div>\n        {handleRenderFarming()}\n        <Text color=\"#253449\" bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nconst Amount = styled.span`\n  color: #253449;\n  display: flex;\n  align-items: center;\n`\n\nconst Earned = ({ earnings, userDataReady }) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{earnings.toString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap/uikit'\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: #1FC7D4;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details = ({ actionPanelToggled }) => {\n  const { isDesktop } = useMatchBreakpoints()\n\n  return (\n    <Container>\n      {!isDesktop && 'Details'}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, HelpIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nconst MultiplierWrapper = styled.div`\n  color: #253449;\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Multiplier = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const tooltipContent = (\n    <>\n      <Text color=\"#fff\">\n          The Multiplier represents the proportion of SLT rewards each farm receives, as a proportion of the SLT produced each block.\n      </Text>\n      <Text color=\"#fff\" my=\"24px\">\n        For example, if a 1x farm received 1 SLT per block, a 40x farm would receive 40 SLT per block.\n      </Text>\n      <Text color=\"#fff\">This amount is already included in all APR calculations for the farm.</Text>\n    </>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"#253449\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@pancakeswap/uikit'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Liquidity = ({ liquidity }) => {\n  const displayLiquidity =\n    liquidity ? (\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    ) : (\n      <Skeleton width={60} />\n    )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    'Total value of the funds in this farm’s liquidity pool',\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text color=\"#253449\">{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"#253449\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid #e9fbfb;\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  display: flex;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React, { useState } from 'react'\nimport { Button, Heading, Skeleton, Text } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core';\nimport Balance from '../../../../../components/Balance';\nimport { BIG_ZERO } from '../../../../../utils/bigNumber'\nimport { getBalanceAmount } from '../../../../../utils/formatBalance'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchFarmUserDataAsync } from '../../../../../store/slices/farms-slice'\nimport useToast from '../../../../../hooks/useToast'\nimport useHarvestFarm from '../../../hooks/useHarvestFarm'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\nconst HarvestAction = ({ pid, userData, userDataReady }) => {\n  const { toastSuccess, toastError } = useToast()\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  const { account } = useWeb3React()\n  const sltPrice = new BigNumber(useSelector(state => state.app.priceOfOneSLT))\n  let earnings = BIG_ZERO\n  let earningsBusd = 0\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceAmount(earningsBigNumber)\n    earningsBusd = earnings.multipliedBy(sltPrice).toNumber()\n    displayBalance = earnings.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestFarm(pid)\n  const dispatch = useDispatch()\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\" pr=\"4px\">\n          SLT\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\">\n          Earned\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Heading color=\"#253449\">{displayBalance}</Heading>\n          {earningsBusd > 0 && (\n            <Balance fontSize=\"12px\" color=\"#253449\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n          )}\n        </div>\n        <Button\n          disabled={earnings.eq(0) || pendingTx || !userDataReady}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onReward()\n              toastSuccess(\n                `Harvested!`,\n                `Your SLT earnings have been sent to your wallet!`\n              )\n            } catch (e) {\n              toastError(\n                'Error',\n                'Please try again. Confirm the transaction and make sure you are paying enough gas!'\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n          }}\n          ml=\"4px\"\n        >\n          Harvest\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Text, Heading } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport { BigNumber } from 'bignumber.js'\nimport ConnectWalletButton from '../../../../../components/ConnectWalletButton'\nimport Balance from '../../../../../components/Balance';\nimport { useWeb3React } from '@web3-react/core';\nimport { useFarmUser } from '../../../../../store/slices/farms-slice/hooks'\nimport { fetchFarmUserDataAsync } from '../../../../../store/slices/farms-slice'\nimport { useLpTokenPrice } from '../../../../../store/slices/farms-slice/hooks'\nimport { useERC20 } from '../../../../../hooks/useContract';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAddress } from '../../../../../utils/addressHelpers'\nimport getLiquidityUrlPathParts from '../../../../../utils/getLiquidityUrlPathParts'\nimport { getBalanceAmount, getFullDisplayBalance, getBalanceNumber } from '../../../../../utils/formatBalance'\nimport useUnstakeFarms from '../../../hooks/useUnstakeFarms'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport useStakeFarms from '../../../hooks/useStakeFarms'\nimport useApproveFarm from '../../../hooks/useApproveFarm'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\nconst Staked = ({\n  depositFeeBP,\n  isWithdrawFee,\n  userData,\n  lpTotalSupply,\n  quoteTokenPriceBusd,\n  pid,\n  apr,\n  multiplier,\n  lpSymbol,\n  lpLabel,\n  lpAddresses,\n  quoteToken,\n  token,\n}) => {\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n\n  const { onStake } = useStakeFarms(pid)\n  const { onUnstake } = useUnstakeFarms(pid)\n  const location = useLocation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n  const sltPrice = new BigNumber(useSelector(state => state.app.priceOfOneSLT))\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const lpAddress = getAddress(lpAddresses)\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const addLiquidityUrl = `https://pancakeswap.finance/add/${liquidityUrlPathParts}`\n\n  const handleStake = async (amount) => {\n    await onStake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return stakedBalanceBigNumber.toFixed(10, BigNumber.ROUND_DOWN)\n    }\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      lpPrice={lpPrice}\n      lpLabel={lpLabel}\n      depositFeeBP={depositFeeBP}\n      apr={apr}\n      stakedBalance={stakedBalance}\n      onConfirm={handleStake}\n      tokenName={lpSymbol}\n      multiplier={multiplier}\n      addLiquidityUrl={addLiquidityUrl}\n      sltPrice={sltPrice}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} lpPrice={lpPrice} tokenName={lpSymbol} isWithdrawFee={isWithdrawFee} withdrawFee={userData.withdrawFee} lastDepositTime={userData.lastDepositTime} />,\n  )\n  const lpContract = useERC20(lpAddress)\n  const dispatch = useDispatch()\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\">\n            Start Farming\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\" pr=\"4px\">\n              {lpSymbol}\n            </Text>\n            <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\">\n              Staked\n            </Text>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Heading color=\"#253449\">{displayBalance()}</Heading>\n              {stakedBalance.gt(0) && lpPrice.gt(0) && (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"#253449\"\n                  decimals={2}\n                  value={getBalanceNumber(lpPrice.times(stakedBalance))}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              )}\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"primary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"#fff\" width=\"20px\" />\n              </IconButton>\n              <IconButton\n                variant=\"primary\"\n                onClick={onPresentDeposit}\n                disabled={['history'].some((item) => location.pathname.includes(item))}\n              >\n                <AddIcon color=\"#fff\" width=\"20px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\" pr=\"4px\">\n            STAKE\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\">\n            {lpSymbol}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"primary\"\n            disabled={['history'].some((item) => location.pathname.includes(item))}\n          >\n            Stake LP\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"#253449\" fontSize=\"12px\">\n          Enable Farm\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"primary\">\n          Enable\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport { LinkExternal, Text, Flex } from '@pancakeswap/uikit'\nimport getLiquidityUrlPathParts from '../../../../../utils/getLiquidityUrlPathParts'\nimport { getAddress } from '../../../../../utils/addressHelpers'\nimport { getBscScanLink } from '../../../../../utils'\nimport { CoreTag, DualTag } from '../../../../../components/Tags'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr from '../Apr'\nimport Multiplier from '../Multiplier'\nimport Liquidity from '../Liquidity'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 500px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 500px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: #eefbff;\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: #253449;\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel = ({\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  expanded,\n}) => {\n  const farm = details\n  const isActive = farm.multiplier !== '0X'\n  const { quoteToken, token, dual } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const lpAddress = getAddress(farm.lpAddresses)\n  const bsc = getBscScanLink(lpAddress, 'address')\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        {isActive && (\n          <StakeContainer>\n            <StyledLinkExternal href={`https://pancakeswap.finance/add/${liquidityUrlPathParts}`}>\n              {`Get ${lpLabel}`}\n            </StyledLinkExternal>\n          </StakeContainer>\n        )}\n        <StyledLinkExternal href={bsc}>View Contract</StyledLinkExternal>\n        <Flex justifyContent=\"space-between\">\n          <Text color=\"#253449\">Deposit Fee:</Text>\n          <Text color=\"#253449\" bold>{`${farm.depositFeeBP ? farm.depositFeeBP / 100: 0}%`}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text color=\"#253449\">Withdrawal Fee:</Text>\n          <Text color=\"#253449\" bold>{farm.isWithdrawFee ? `0~3%` : `0%`}</Text>\n        </Flex>\n        <TagsContainer>\n          {farm.pid < 6 && farm.pid >= 0 && <CoreTag />}\n          {dual ? <DualTag /> : null}\n        </TagsContainer>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text color=\"#253449\">APR</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text color=\"#253449\">Multiplier</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text color=\"#253449\">Liquidity</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} userDataReady={userDataReady} />\n        <StakedAction {...farm} userDataReady={userDataReady} lpLabel={lpLabel} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: #253449;\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\nconst CellLayout = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","export const MobileColumnSchema = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 5,\n    name: 'multiplier',\n    sortable: true,\n    label: 'Multiplier',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport useDelayedUnmount from '../../../../hooks/useDelayedUnmount'\nimport { useFarmUser } from '../../../../store/slices/farms-slice/hooks'\n\nimport Apr from './Apr'\nimport Farm from './Farm'\nimport Earned from './Earned'\nimport Details from './Details'\nimport Multiplier from './Multiplier'\nimport Liquidity from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid #E7E3EB;\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row = (props) => {\n  const { details, userDataReady } = props\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n\n  const { isDesktop, isMobile } = useMatchBreakpoints()\n\n  const isSmallerScreen = !isDesktop\n  const tableSchema = isSmallerScreen ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isMobile) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={'APR'}>\n                        <Apr {...props.apr} hideButton={isSmallerScreen} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={tableSchema[columnIndex].label}>\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={'Earned'}>\n                <Earned {...props.earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={'APR'}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon } from '@pancakeswap/uikit'\n\nimport Row from './Row'\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: #eefbff;\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable = (props) => {\n  const tableWrapperEl = useRef(null)\n  const { data, columns, userDataReady } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = () => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container id=\"farms-table\">\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            To Top\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React from 'react'\nimport { useLocation, Link, useRouteMatch } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from '@pancakeswap/uikit'\nimport './farmtabbuttons.scss';\n\nconst FarmTabButtons = ({ hasStakeInFinishedFarms }) => {\n  const { url } = useRouteMatch()\n  const location = useLocation()\n\n  let activeIndex\n  switch (location.pathname) {\n    case '/farms':\n      activeIndex = 0\n      break\n    case '/farms/history':\n      activeIndex = 1\n      break\n    default:\n      activeIndex = 0\n      break\n  }\n\n  return (\n    <div className='farm-tab-buttons-wrapper'>\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"primary\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          Live\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedFarms}>\n          <ButtonMenuItem id=\"finished-farms-button\" as={Link} to={`${url}/history`}>\n            Finished\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </div>\n  )\n}\n\nexport default FarmTabButtons\n","import React from 'react'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from '../../../../store/slices/user-slice/actions';\nimport './toggleview.scss';\n\nconst ToggleView = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <div className='container'>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : '#BDC2C4'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : '#BDC2C4'} />\n      </IconButton>\n    </div>\n  )\n}\n\nexport default ToggleView\n","import { useEffect, useCallback, useState, useMemo, useRef } from 'react'\r\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Heading, Toggle, Text, Flex } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux'\r\nimport FlexLayout from '../../components/Layout/Flex'\r\nimport Page from '../../components/Layout/Page'\r\nimport { useFarms, usePollFarmsWithUserData } from '../../store/slices/farms-slice/hooks';\r\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\r\nimport useIntersectionObserver from '../../hooks/useIntersectionObserver';\r\nimport { getBalanceNumber } from '../../utils/formatBalance';\r\nimport { latinise } from '../../utils/latinise';\r\nimport { useUserFarmStakedOnly, useUserFarmsViewMode } from '../../store/slices/user-slice/hooks';\r\nimport { ViewMode } from '../../store/slices/user-slice/actions';\r\nimport PageHeader from '../../components/PageHeader'\r\nimport Loading from '../../components/Loading'\r\nimport FarmCard from './components/FarmCard/FarmCard'\r\nimport Table from './components/FarmTable/FarmTable'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport ToggleView from './components/ToggleView/ToggleView'\r\nimport { DesktopColumnSchema } from './components/types'\r\nimport './farms.scss';\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin-bottom: 32px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst NUMBER_OF_FARMS_VISIBLE = 12\r\n\r\nconst Farms = () => {\r\n  const { path } = useRouteMatch()\r\n  const { pathname } = useLocation()\r\n  const { data: farmsLP, userDataLoaded } = useFarms()\r\n  const { account } = useActiveWeb3React();\r\n  const sltPrice = new BigNumber(useSelector(state => state.app.priceOfOneSLT))\r\n  const [query] = useState('')\r\n  const [viewMode, setViewMode] = useUserFarmsViewMode()\r\n  const { observerRef, isIntersecting } = useIntersectionObserver()\r\n  const chosenFarmsLength = useRef(0)\r\n\r\n  const isInactive = pathname.includes('history')\r\n  const isActive = !isInactive\r\n\r\n  usePollFarmsWithUserData()\r\n\r\n  // Users with no wallet connected should see 0 as Earned amount\r\n  // Connected users should see loading indicator until first userData has loaded\r\n  const userDataReady = !account || (!!account && userDataLoaded)\r\n\r\n  const [stakedOnly, setStakedOnly] = useUserFarmStakedOnly(isActive)\r\n  const activeFarms = farmsLP.filter((farm) => farm.multiplier !== '0X')\r\n  const inactiveFarms = farmsLP.filter((farm) => farm.multiplier === '0X')\r\n  const stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedInactiveFarms = inactiveFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay) => {\r\n      let farmsToDisplayWithAPR = farmsToDisplay.map((farm) => {\r\n        return farm\r\n      })\r\n\r\n      if (query) {\r\n        const lowercaseQuery = latinise(query.toLowerCase())\r\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm) => {\r\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\r\n        })\r\n      }\r\n      return farmsToDisplayWithAPR\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [sltPrice, query, isActive],\r\n  )\r\n\r\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\r\n\r\n  const chosenFarmsMemoized = useMemo(() => {\r\n    let chosenFarms = []\r\n\r\n    if (isActive) {\r\n      chosenFarms = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\r\n    }\r\n    if (isInactive) {\r\n      chosenFarms = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\r\n    }\r\n    return chosenFarms.slice(0, numberOfFarmsVisible)\r\n  }, [\r\n    activeFarms,\r\n    farmsList,\r\n    inactiveFarms,\r\n    isActive,\r\n    isInactive,\r\n    stakedInactiveFarms,\r\n    stakedOnly,\r\n    stakedOnlyFarms,\r\n    numberOfFarmsVisible,\r\n  ])\r\n\r\n  chosenFarmsLength.current = chosenFarmsMemoized.length\r\n\r\n  useEffect(() => {\r\n    if (isIntersecting) {\r\n      setNumberOfFarmsVisible((farmsCurrentlyVisible) => {\r\n        if (farmsCurrentlyVisible <= chosenFarmsLength.current) {\r\n          return farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE\r\n        }\r\n        return farmsCurrentlyVisible\r\n      })\r\n    }\r\n  }, [isIntersecting])\r\n  const rowData = chosenFarmsMemoized.map((farm) => {\r\n    const { token, quoteToken } = farm\r\n    const tokenAddress = token.address\r\n    const quoteTokenAddress = quoteToken.address\r\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\r\n    const row = {\r\n      apr: {\r\n        value: farm.apr,\r\n        pid: farm.pid,\r\n        multiplier: farm.multiplier,\r\n        lpLabel,\r\n        lpSymbol: farm.lpSymbol,\r\n        tokenAddress,\r\n        quoteTokenAddress,\r\n        sltPrice,\r\n        originalValue: farm.apr,\r\n      },\r\n      farm: {\r\n        label: lpLabel,\r\n        pid: farm.pid,\r\n        token: farm.token,\r\n        quoteToken: farm.quoteToken,\r\n      },\r\n      earned: {\r\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\r\n        pid: farm.pid,\r\n      },\r\n      liquidity: {\r\n        liquidity: farm.liquidity,\r\n      },\r\n      multiplier: {\r\n        multiplier: farm.multiplier,\r\n      },\r\n      details: farm,\r\n    }\r\n    return row\r\n  })\r\n\r\n  const renderContent = () => {\r\n    if (viewMode === ViewMode.TABLE && rowData.length) {\r\n      const columnSchema = DesktopColumnSchema\r\n\r\n      const columns = columnSchema.map((column) => ({\r\n        id: column.id,\r\n        name: column.name,\r\n        label: column.label,\r\n        sort: (a, b) => {\r\n          switch (column.name) {\r\n            case 'farm':\r\n              return b.id - a.id\r\n            case 'apr':\r\n              if (a.original.apr.value && b.original.apr.value) {\r\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\r\n              }\r\n\r\n              return 0\r\n            case 'earned':\r\n              return a.original.earned.earnings - b.original.earned.earnings\r\n            default:\r\n              return 1\r\n          }\r\n        },\r\n        sortable: column.sortable,\r\n      }))\r\n\r\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\r\n    }\r\n\r\n    return (\r\n      <FlexLayout style={{ margin: '16px 0' }}>\r\n        <Route exact path={`${path}`}>\r\n          {chosenFarmsMemoized.map((farm) => (\r\n            <FarmCard\r\n              key={farm.pid}\r\n              farm={farm}\r\n              apr={farm.apr}\r\n              sltPrice={sltPrice}\r\n              account={account}\r\n              removed={false}\r\n            />\r\n          ))}\r\n        </Route>\r\n        <Route exact path={`${path}/history`}>\r\n          {chosenFarmsMemoized.map((farm) => (\r\n            <FarmCard\r\n              key={farm.pid}\r\n              farm={farm}\r\n              apr={farm.apr}\r\n              sltPrice={sltPrice}\r\n              account={account}\r\n              removed\r\n            />\r\n          ))}\r\n        </Route>\r\n      </FlexLayout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        <Heading as=\"h1\" scale=\"xxl\" color=\"#253449cc\" mb=\"24px\" className=''>\r\n          Farms\r\n        </Heading>\r\n        <Heading scale=\"lg\" color=\"#253449\">\r\n          Stake LP tokens to earn.\r\n        </Heading>\r\n      </PageHeader>\r\n      <Page>\r\n        <ControlContainer>\r\n          <ViewControls>\r\n            <ToggleView viewMode={viewMode} onToggle={(mode) => setViewMode(mode)} />\r\n            <ToggleWrapper>\r\n              <Toggle\r\n                id=\"staked-only-farms\"\r\n                checked={stakedOnly}\r\n                onChange={() => setStakedOnly(!stakedOnly)}\r\n                scale=\"sm\"\r\n              />\r\n              <Text color=\"#1FC7D4\">Staked only</Text>\r\n            </ToggleWrapper>\r\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\r\n          </ViewControls>\r\n      </ControlContainer>\r\n        {renderContent()}\r\n        {account && !userDataLoaded && stakedOnly && (\r\n          <Flex justifyContent=\"center\">\r\n            <Loading />\r\n          </Flex>\r\n        )}\r\n        <div ref={observerRef} />\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nconst SltHarvestBalance = ({earningsSum}) => {\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '36px' }}>\r\n        Locked\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Text color=\"#253449\" fontSize=\"24px\" bold>\r\n      {earningsSum}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default SltHarvestBalance\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nconst SltWalletBalance = ({ sltBalance }) => {\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '36px' }}>\r\n        Locked\r\n      </Text>\r\n    )\r\n  }\r\n  return (\r\n    <Text color=\"#253449\" fontSize=\"24px\" bold>\r\n      {sltBalance}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default SltWalletBalance\r\n","import { useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport multicall from '../utils/multicall'\r\nimport { getSafeChefAddress } from '../utils/addressHelpers';\r\nimport safeChefABI from '../abi/safeChef.json'\r\nimport farmsConfig from '../constants/farms'\r\nimport stakesConfig from '../constants/stake'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useAllEarnings = () => {\r\n  const [balances, setBalance] = useState([])\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchAllBalances = async () => {\r\n      const farmsCalls = farmsConfig.map((farm) => ({\r\n        address: getSafeChefAddress(),\r\n        name: 'pendingEarnings',\r\n        params: [farm.pid, account],\r\n      }))\r\n      const stakesCalls = stakesConfig.map((stake) => ({\r\n        address: getSafeChefAddress(),\r\n        name: 'pendingEarnings',\r\n        params: [stake.pid, account],\r\n      }))\r\n\r\n      const calls = [...farmsCalls, ...stakesCalls]\r\n\r\n      const res = await multicall(safeChefABI, calls)\r\n\r\n      setBalance(res)\r\n    }\r\n\r\n    if (account) {\r\n      fetchAllBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return balances\r\n}\r\n\r\nexport default useAllEarnings\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport multicall from '../utils/multicall'\r\nimport { getSafeChefAddress } from '../utils/addressHelpers'\r\nimport safeChefABI from '../abi/safeChef.json'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { useFarms } from '../store/slices/farms-slice/hooks';\r\nimport { useStakes } from '../store/slices/stake-slice/hooks'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useFarmsWithBalance = () => {\r\n  const [farmsWithBalances, setFarmsWithBalances] = useState([])\r\n  const { account } = useWeb3React()\r\n  const { data: farmsLP } = useFarms();\r\n  const { data: stakesLP } = useStakes();\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalances = async () => {\r\n      const farmsCalls = farmsLP.map((farm) => ({\r\n        address: getSafeChefAddress(),\r\n        name: 'pendingEarnings',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const farmsRawResults = await multicall(safeChefABI, farmsCalls)\r\n      const farmsResults = farmsLP.map((farm, index) => ({ ...farm, balance: new BigNumber(farmsRawResults[index]) }))\r\n\r\n      const stakesCalls = stakesLP.map((stake) => ({\r\n        address: getSafeChefAddress(),\r\n        name: 'pendingEarnings',\r\n        params: [stake.pid, account],\r\n      }))\r\n\r\n      const stakesrawResults = await multicall(safeChefABI, stakesCalls)\r\n      const stakesResults = stakesLP.map((stake, index) => ({ ...stake, balance: new BigNumber(stakesrawResults[index]) }))\r\n\r\n      setFarmsWithBalances([...farmsResults, ...stakesResults])\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalances()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [account, fastRefresh])\r\n\r\n  return farmsWithBalances\r\n}\r\n\r\nexport default useFarmsWithBalance\r\n","import { useCallback } from 'react'\r\nimport { harvestFarm } from '../../../utils/calls'\r\nimport { useSafeChef } from '../../../hooks/useContract'\r\n\r\nconst useAllHarvest = (farmPids) => {\r\n  const safeChefContract = useSafeChef()\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return harvestFarm(safeChefContract, pid)\r\n    }, [])\r\n    return Promise.all(harvestPromises)\r\n  }, [farmPids, safeChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport default useAllHarvest","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract } from '../utils/contractHelpers'\nimport { BIG_ZERO } from '../utils/bigNumber'\nimport useRefresh from './useRefresh'\n\nexport const FetchStatus = {\n  NOT_FETCHED: 'not-fetched',\n  SUCCESS: 'success',\n  FAILED: 'failed',\n}\n\nconst useTokenBalance = (tokenAddress) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n  return balanceState\n}\n\nexport default useTokenBalance\n","import { useState, useCallback } from 'react';\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from \"@mui/material\";\r\nimport ConnectWalletButton from '../../components/ConnectWalletButton';\r\nimport { Button, Skeleton, Image, Flex } from \"@pancakeswap/uikit\";\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport BigNumber from 'bignumber.js';\r\n// import Slider from \"react-slick\";\r\nimport Web3 from 'web3';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport Page from '../../components/Layout/Page'\r\nimport SltHarvestBalance from './components/SltHarvestBalance'\r\nimport SltWalletBalance from './components/SltWalletBalance'\r\nimport useAllEarnings from '../../hooks/useAllEarnings'\r\nimport { useTVL, useAprs } from '../../hooks/useSafeFarms';\r\nimport useFarmsWithBalance from '../../hooks/useFarmsWithBalance';\r\nimport useAllHarvest from './hooks/useAllHarvest'\r\nimport useTokenBalance from '../../hooks/useTokenBalance';\r\nimport { getsltTokenAddress } from '../../utils/addressHelpers';\r\nimport { getBalanceNumber, displayNumber } from '../../utils/formatBalance';\r\nimport { getDividendDistributorAddress } from '../../utils/addressHelpers';\r\nimport dividendDistributorABI from '../../abi/dividendDistributorContract.json';\r\nimport HavenLogo from '../../assets/images/HavenLogo.png'\r\nimport './safefarms.scss';\r\n\r\nconst web3 = new Web3(new Web3.providers.HttpProvider(\"https://bsc-dataseed.binance.org/\"));\r\n\r\nconst Label = styled.div`\r\n  color: #253449cc;\r\n  font-size: 14px;\r\n`\r\n\r\nexport default function SafeFarms() {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { account } = useWeb3React();\r\n  const isAppLoading = useSelector(state => state.app.loading);\r\n  const app = useSelector(state => state.app);\r\n\r\n  const sltPrice = app.priceOfOneSLT\r\n  const sltBalance = getBalanceNumber(useTokenBalance(getsltTokenAddress()).balance)\r\n  const allEarnings = useAllEarnings()\r\n  const tvlData = useTVL()\r\n  const aprs = useAprs()\r\n  const tvlValue = tvlData.reduce((partial_sum, a) => partial_sum + a, 0);\r\n  const farmsWithBalance = useFarmsWithBalance()\r\n  const earningsSum = allEarnings.reduce((accum, earning) => {\r\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\r\n  }, 0)\r\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\r\n\r\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\r\n\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      await onReward()\r\n    } catch (error) {\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n  }, [onReward])\r\n\r\n  const claimBNB = async () => {\r\n    if (!account) {\r\n        alert(\"Please connect your wallet\");\r\n        return;\r\n    }\r\n    const dividendDistributorContract = await new web3.eth.Contract(dividendDistributorABI, getDividendDistributorAddress())\r\n    let Data = await dividendDistributorContract.methods.claimDividend().encodeABI();\r\n\r\n    let Txdetail = {\r\n        from: account,\r\n        to: getDividendDistributorAddress(),\r\n        value: web3.utils.toHex(web3.utils.toWei(\"0\")),\r\n        gasPrice: web3.utils.toHex(web3.utils.toWei('5', 'gwei')),\r\n        gasLimit: web3.utils.toHex(web3.utils.toWei('100000', 'gwei')),\r\n        data: Data\r\n    }\r\n    window.ethereum.request({ method: 'eth_sendTransaction', params: [Txdetail] })\r\n        .then(async (res) => {\r\n            var ethFlag = true;\r\n            while(ethFlag) {\r\n                await web3.eth.getTransactionReceipt(res, (error, receipt) => {\r\n                    if (error) {\r\n                        console.log(error)\r\n                        alert(\"claim failed\");\r\n                    } else if (receipt == null) {\r\n                } else {\r\n                    console.log(\"confirm\", receipt);\r\n                    alert(\"Claim Successfull\");\r\n                    ethFlag = false;\r\n                }\r\n            });\r\n        }\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <div className='safefarms-view'>\r\n      <PageHeader>\r\n        <Flex justifyContent=\"center\">\r\n          <Image src={HavenLogo} width={150} height={150} alt=\"\" />\r\n        </Flex>\r\n      </PageHeader>\r\n      <Page className='safefarms-view-content'>\r\n        <div className='safefarms-actions'>\r\n          <div></div>\r\n          <div className='safefarms-actions-buttons'>\r\n            <Button\r\n              as=\"a\"\r\n              href=\"https://pancakeswap.finance/swap?outputCurrency=0x9caE753B661142aE766374CEFA5dC800d80446aC\" \r\n              external\r\n            >\r\n              BUY $HAVEN\r\n            </Button>\r\n            <Button onClick={claimBNB}>CLAIM ETH</Button>\r\n          </div>\r\n        </div>\r\n        <div container className=\"safefarms-header\">\r\n          <div className=\"safefarms-header-left\">\r\n            <h2>Farms & Staking</h2>\r\n            {/* <img src={AddTokenIcon} alt=\"token logo\" onClick={} /> */}\r\n            <div className=\"token-cardboxes\">\r\n              <div className=\"token-cardbox\">\r\n                <Label>\r\n                  {isAppLoading ? (\r\n                    <Skeleton width={50} />\r\n                  ) : (\r\n                    `~$${(sltPrice * earningsSum).toFixed(2)}`\r\n                  )}\r\n                </Label>\r\n                <SltHarvestBalance earningsSum={earningsSum.toFixed(2)}/>\r\n                <Label><b>SLT</b> to Harvest</Label>\r\n              </div>\r\n              <div className=\"token-cardbox\">\r\n              <Label>\r\n                  {isAppLoading ? (\r\n                    <Skeleton width={50} />\r\n                  ) : (\r\n                    `~$${(sltPrice * sltBalance).toFixed(2)}`\r\n                  )}\r\n                </Label>\r\n                <SltWalletBalance sltBalance={sltBalance.toFixed(2)} />\r\n                <Label><b>SLT</b> in Wallet</Label>\r\n              </div>\r\n            </div>\r\n            {!account && <ConnectWalletButton />}\r\n            {account && <Button\r\n              disabled={balancesWithValue.length <= 0 || pendingTx}\r\n              onClick={harvestAllFarms}\r\n            >\r\n              Harvest all ({balancesWithValue.length})\r\n            </Button>}\r\n          </div>\r\n          <div className='safefarms-header-right'>\r\n            <h2>Farms & Staking</h2>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"safefarms-body\">\r\n          <div className=\"safefarms-tvl-content\">\r\n            <h2>Total Value Locked (TVL)</h2>\r\n            <h1>\r\n              {isAppLoading ? (\r\n                <Skeleton width={100} />\r\n              ) : (\r\n                `$ ${displayNumber(tvlValue)}`\r\n              )}\r\n            </h1>\r\n            <h5>SLT Stats</h5>\r\n            <div className=\"token-info-items\">\r\n              <div className=\"token-info-item\">\r\n                <h3>\r\n                  {isAppLoading ? (\r\n                    <Skeleton width={100} />\r\n                  ) : (\r\n                    new Intl.NumberFormat('en-US').format(app.slttotalSupply.toFixed(2))\r\n                  )}\r\n                </h3>\r\n                <h6>Total SLT Supply</h6>\r\n              </div>\r\n              <div className=\"token-info-item\">\r\n                <h3>\r\n                  {isAppLoading ? (\r\n                    <Skeleton width={100} />\r\n                  ) : (\r\n                    `$ ${new Intl.NumberFormat('en-US').format(app.sltmarketCap.toFixed(2))}`\r\n                  )}\r\n                </h3>\r\n                <h6>Market Cap</h6>\r\n              </div>\r\n              <div className=\"token-info-item\">\r\n                <h3>\r\n                  {isAppLoading ? (\r\n                    <Skeleton width={100} />\r\n                  ) : (\r\n                    new Intl.NumberFormat('en-US').format(app.sltburntTokens.toFixed(2))\r\n                  )}\r\n                </h3>\r\n                <h6>Total SLT Burned</h6>\r\n              </div>\r\n              <div className=\"token-info-item\">\r\n                <h3>\r\n                  {isAppLoading ? (\r\n                    <Skeleton width={100} />\r\n                  ) : (\r\n                    `$ ${new Intl.NumberFormat('en-US').format(app.priceOfOneSLT)}`\r\n                  )}\r\n                </h3>\r\n                <h6>SLT Price</h6>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"safefarms-footer\">\r\n          <div className=\"safefarms-footer-item\">\r\n            <Link href=\"/\"></Link>\r\n          </div>\r\n          <div className=\"safefarms-footer-item\">\r\n            <div>\r\n              <h4>Earn up to</h4>\r\n              <h3>\r\n                {Math.max(...aprs) ? (\r\n                  `${displayNumber(Math.max(...aprs))}% APR`\r\n                ) : (\r\n                  <Skeleton width={100} />\r\n                )}\r\n              </h3>\r\n              <h4>in Farms</h4>\r\n              <i className=\"fas fa-arrow-right\"></i>\r\n            </div>\r\n          </div>\r\n          <div className=\"safefarms-footer-item\">\r\n            <Link href=\"/\"></Link>\r\n          </div>\r\n        </div>\r\n      </Page>\r\n    </div>\r\n  )\r\n}","import { useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { useFarms } from '../store/slices/farms-slice/hooks';\r\nimport { useStakes } from '../store/slices/stake-slice/hooks'\r\nimport useRefresh from './useRefresh'\r\n\r\nexport const useTVL = () => {\r\n  const [tvldata, setTVLData] = useState([])\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n  const { data: farmsLP } = useFarms();\r\n  const { data: stakesLP } = useStakes();\r\n\r\n  useEffect(() => {\r\n    const fetchAllData = async () => {\r\n        const farmTVL = farmsLP.map(farm => {\r\n            return farm.liquidity ? parseFloat(farm.liquidity) : 0\r\n        });\r\n        const stakeTVL = stakesLP.map(stake => {\r\n            return stake.liquidity ? parseFloat(stake.liquidity) : 0\r\n        });\r\n        const tvl = [...farmTVL, ...stakeTVL]\r\n        setTVLData(tvl)\r\n    }\r\n\r\n    fetchAllData()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [account, fastRefresh])\r\n\r\n  return tvldata\r\n}\r\n\r\nexport const useAprs = () => {\r\n    const [aprs, setAprs] = useState([])\r\n    const { account } = useWeb3React()\r\n    const { fastRefresh } = useRefresh()\r\n    const { data: farmsLP } = useFarms();\r\n    const { data: stakesLP } = useStakes();\r\n  \r\n    useEffect(() => {\r\n      const fetchAllData = async () => {\r\n          const farmAprs = farmsLP.map(farm => {\r\n              return farm.apr\r\n          });\r\n          const stakeAprs = stakesLP.map(stake => {\r\n              return stake.apr\r\n          });\r\n          const aprs = [...farmAprs, ...stakeAprs]\r\n          setAprs(aprs)\r\n      }\r\n      fetchAllData()\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [account, fastRefresh])\r\n  \r\n    return aprs\r\n  }\r\n","import { currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../constants'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA,\n  tradeB,\n  minimumDelta = ZERO_PERCENT,\n) {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","import { useEffect, useState } from 'react'\r\n\r\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\r\n\r\nfunction isWindowVisible() {\r\n  if (!VISIBILITY_STATE_SUPPORTED) {\r\n    return true\r\n  }\r\n\r\n  return document.visibilityState === 'visible'\r\n}\r\n\r\n/**\r\n * Returns whether the window is currently visible to the user.\r\n */\r\nexport default function useIsWindowVisible() {\r\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\r\n\r\n  useEffect(() => {\r\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\r\n\r\n    const handleVisibilityChange = () => {\r\n      setIsVisible(isWindowVisible())\r\n    }\r\n\r\n    document.addEventListener('visibilitychange', handleVisibilityChange)\r\n    return () => {\r\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\r\n    }\r\n  }, [setIsVisible])\r\n\r\n  return isVisible\r\n}\r\n","import { useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useIsWindowVisible from '../../../hooks/useIsWindowVisible'\nimport { simpleRpcProvider } from '../../../utils/providers'\nimport { setBlock } from '.'\n\nexport const usePollBlockNumber = () => {\n  const timer = useRef(null)\n  const dispatch = useDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  useEffect(() => {\n    if (isWindowVisible) {\n      timer.current = setInterval(async () => {\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\n        dispatch(setBlock(blockNumber))\n      }, 6000)\n    } else {\n      clearInterval(timer.current)\n    }\n\n    return () => clearInterval(timer.current)\n  }, [dispatch, timer, isWindowVisible])\n}\n\nexport const useBlock = () => {\n  return useSelector((state) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state) => state.block.initialBlock)\n}\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { useBlock } from '../block-slice/hooks'\nimport {\n  addMulticallListeners,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n} from './actions'\n\nfunction isMethodArg(x) {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x) {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\nconst INVALID_RESULT = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls, options) {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch()\n\n  const serializedCallKeys = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c) => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\nconst INVALID_CALL_STATE = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult,\n  contractInterface,\n  fragment,\n  latestBlockNumber,\n) {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber || 0) < latestBlockNumber\n  let result\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract,\n  methodName,\n  callInputs,\n  options,\n) {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\n  }, [fragment, contract, results, currentBlock])\n}\n\nexport function useMultipleContractSingleData(\n  addresses,\n  contractInterface,\n  methodName,\n  callInputs,\n  options,\n) {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\n  }, [fragment, results, contractInterface, currentBlock])\n}\n\nexport function useSingleCallResult(\n  contract,\n  methodName,\n  inputs,\n  options,\n) {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, currentBlock)\n  }, [result, contract, fragment, currentBlock])\n}\n","import { ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency, chainId) {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount,\n  chainId,\n) {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token) {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { TokenAmount, Pair } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from './useActiveWeb3React'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\n\r\nimport { useMultipleContractSingleData } from '../store/slices/multicall-slice/hooks'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\r\n\r\nexport const PairState = {\r\n  LOADING: \"\",\r\n  NOT_EXISTS: \"\",\r\n  EXISTS: \"\",\r\n  INVALID: \"\"\r\n}\r\n\r\nexport function usePairs(currencies) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const tokens = useMemo(\r\n    () =>\r\n      currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId),\r\n      ]),\r\n    [chainId, currencies],\r\n  )\r\n\r\n  const pairAddresses = useMemo(\r\n    () =>\r\n      tokens.map(([tokenA, tokenB]) => {\r\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\r\n      }),\r\n    [tokens],\r\n  )\r\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\r\n\r\n  return useMemo(() => {\r\n    return results.map((result, i) => {\r\n      const { result: reserves, loading } = result\r\n      const tokenA = tokens[i][0]\r\n      const tokenB = tokens[i][1]\r\n\r\n      if (loading) return [PairState.LOADING, null]\r\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\r\n      if (!reserves) return [PairState.NOT_EXISTS, null]\r\n      const { reserve0, reserve1 } = reserves\r\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return [\r\n        PairState.EXISTS,\r\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\r\n      ]\r\n    })\r\n  }, [results, tokens])\r\n}\r\n\r\nexport function usePair(tokenA, tokenB) {\r\n  return usePairs([[tokenA, tokenB]])[0]\r\n}\r\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from '../../../constants/lists'\nimport DEFAULT_TOKEN_LIST from '../../../constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../../constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../../constants/tokenLists/pancake-unsupported.tokenlist.json'\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA, urlB) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  constructor(tokenInfo, tags) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  logoURI() {\n    return this.tokenInfo.logoURI\n  }\n}\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache =\n  typeof WeakMap !== 'undefined' ? new WeakMap() : null\n\nexport function listToTokenMap(list) {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce(\n    (tokenMap, tokenInfo) => {\n      const tags =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x) => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists() {\n  return useSelector((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1, map2) {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls) {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls() {\n  return useSelector((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls() {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList() {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList() {\n  const allInactiveListUrls = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList() {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList() {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url) {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from '../../../../hooks/useActiveWeb3React';\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens() {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { useMemo } from 'react'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens, search) {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s) => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens, searchQuery) {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches = []\n    const symbolSubtrings = []\n    const rest = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from './useActiveWeb3React'\nimport {\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../store/slices/lists-slice/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../store/slices/multicall-slice/hooks'\nimport useUserAddedTokens from '../store/slices/user-slice/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap, includeUserAdded) {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens() {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens() {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens() {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens() {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token) {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery) {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency) {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str, bytes32, defaultValue) {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress) {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId) {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from '../utils/trades'\nimport { Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from './useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from '../store/slices/user-slice/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA, currencyB) {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs = useMemo(\n    () => flatMap(bases, (base) => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base) => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base) => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens) => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA = customBases?.[tokenA_.address]\n              const customBasesB = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result) => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn, currencyOut) {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn, currencyAmountOut) {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn, currencyOut) {\n  const unsupportedTokens = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import tokens from './tokens'\r\n\r\nconst { bondly, safemoon } = tokens\r\n\r\nconst SwapWarningTokens = {\r\n  safemoon,\r\n  bondly,\r\n}\r\n\r\nexport default SwapWarningTokens\r\n","export default function isZero(hexNumberString) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { useEffect, useState } from 'react'\r\n\r\n// modified from https://usehooks.com/useDebounce/\r\nexport default function useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value)\r\n\r\n  useEffect(() => {\r\n    // Update debounced value after delay\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value)\r\n    }, delay)\r\n\r\n    // Cancel the timeout if value changes (also on delay change or unmount)\r\n    // This is how we prevent debounced value from updating if value is changed ...\r\n    // .. within the delay period. Timeout gets cleared and restarted.\r\n    return () => {\r\n      clearTimeout(handler)\r\n    }\r\n  }, [value, delay])\r\n\r\n  return debouncedValue\r\n}\r\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress) {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../store/slices/multicall-slice/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address) {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../store/slices/multicall-slice/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName) {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import styled from 'styled-components';\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import styled from 'styled-components';\nimport { Box } from '@pancakeswap/uikit';\n\nconst Row = styled(Box)`\n  width: ${({ width }) => width || '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align || 'center'};\n  justify-content: ${({ justify }) => justify || 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: #FFFFFF;\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? '#ED4B9E' : '#eefbff')};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: #FFFFFF;\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: #FFFFFF;\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error }) => (error ? '#ED4B9E' : '#1FC7D4')};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: #BDC2C4;\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: #BDC2C4;\n  }\n`\n\nexport default function AddressInputPanel({ id, value, onChange }) {\n  const { chainId } = useActiveWeb3React()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text color=\"#253449\">Recipient</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  (View on BscScan)\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={'Wallet Address or ENS name'}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: #eefbff;\n`\nexport default Card\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid #E7E3EB;\n  background-color: #eefbff;\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: #eefbff;\n`\n","import { useCallback } from 'react'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n} from '@pancakeswap/uikit'\nimport { registerToken } from '../../utils/wallet'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }) {\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text color=\"#253449\" fontSize=\"20px\">Waiting For Confirmation</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text color=\"#253449\" bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"#253449\" textAlign=\"center\">\n          Confirm this transaction in your wallet\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}) {\n  const { library } = useActiveWeb3React()\n\n  const token = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text color=\"#253449\" fontSize=\"20px\">Transaction Submitted</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              View on BscScan\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {`Add ${currencyToAdd.symbol} to Metamask`}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            Close\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }) {\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"#ED4B9E\" width=\"64px\" />\n        <Text color=\"#ED4B9E\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>'Dismiss</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nconst TransactionConfirmationModal = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { CurrencyAmount, JSBI, Percent, TokenAmount } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../constants'\n\nimport { Field } from '../store/slices/swap-slice/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade) {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce(\n          (currentFee) => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade,\n  allowedSlippage,\n) {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact) {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade, inverted) {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n\n/**\n * Helper to multiply a Price object by an arbitrary amount\n */\nexport const multiplyPriceByAmount = (price, amount, significantDigits = 18) => {\n  if (!price) {\n    return 0\n  }\n\n  return parseFloat(price.toSignificant(significantDigits)) * amount\n}\n","import { HelpIcon, useTooltip, Box } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper = ({ text, placement = 'right-end', ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"#253449\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from '../../../components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? '#ED4B9E'\n      : severity === 2\n      ? '#FFB237'\n      : severity === 1\n      ? '#253449'\n      : '#31D0AA'};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: #eefbff;\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: #253449;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: #eefbff;\n  }\n  :focus {\n    background-color: #eefbff;\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: #ED4B9E33;\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: #ED4B9E;\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: #ED4B9E33;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: #FFB23733;\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import React from 'react'\nimport { warningSeverity } from '../../../utils/prices'\nimport { ONE_BIPS } from '../../../constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from '../../../store/slices/swap-slice/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from '../../../utils/prices'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport QuestionHelper from '../../../components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from '../../../components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid #E7E3EB;\n  background-color: #eefbff;\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}) {\n  const [showInverted, setShowInverted] = useState(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\" color=\"#253449\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            color=\"#253449\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon color=\"#253449\" width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\" color=\"#253449\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text={'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.'}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\" color=\"#253449\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text color=\"#253449\" fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper\n              text={'The difference between the market price and your price due to trade size.'}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\" color=\"#253449\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\" color=\"#253449\">For each trade a 0.25% fee is paid</Text>\n                  <Text color=\"#253449\">- 0.17% to LP token holders</Text>\n                  <Text color=\"#253449\">- 0.03% to the Treasury</Text>\n                  <Text color=\"#253449\">- 0.05% towards CAKE buyback and burn</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\" color=\"#253449\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import CID from 'cids'\r\nimport { getCodec, rmPrefix } from 'multicodec'\r\nimport { decode, toB58String } from 'multihashes'\r\n\r\nfunction hexToUint8Array(hex) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\r\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\r\n  const arr = new Uint8Array(hex.length / 2)\r\n  for (let i = 0; i < arr.length; i++) {\r\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\r\n  }\r\n  return arr\r\n}\r\n\r\nconst UTF_8_DECODER = new TextDecoder()\r\n\r\n/**\r\n * Returns the URI representation of the content hash for supported codecs\r\n * @param contenthash to decode\r\n */\r\nexport default function contenthashToUri(contenthash) {\r\n  const buff = hexToUint8Array(contenthash)\r\n  const codec = getCodec(buff) // the typing is wrong for @types/multicodec\r\n  switch (codec) {\r\n    case 'ipfs-ns': {\r\n      const data = rmPrefix(buff)\r\n      const cid = new CID(data)\r\n      return `ipfs://${toB58String(cid.multihash)}`\r\n    }\r\n    case 'ipns-ns': {\r\n      const data = rmPrefix(buff)\r\n      const cid = new CID(data)\r\n      const multihash = decode(cid.multihash)\r\n      if (multihash.name === 'identity') {\r\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\r\n      }\r\n      return `ipns://${toB58String(cid.multihash)}`\r\n    }\r\n    default:\r\n      throw new Error(`Unrecognized codec: ${codec}`)\r\n  }\r\n}\r\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress) {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri) {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { useMemo } from 'react'\r\nimport contenthashToUri from '../utils/contenthashToUri'\r\nimport { parseENSAddress } from '../utils/ENS/parseENSAddress'\r\nimport uriToHttp from '../utils/uriToHttp'\r\nimport useENSContentHash from './ENS/useENSContentHash'\r\n\r\nexport default function useHttpLocations(uri) {\r\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\r\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\r\n  return useMemo(() => {\r\n    if (ens) {\r\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\r\n    }\r\n    return uri ? uriToHttp(uri) : []\r\n  }, [ens, resolvedContentHash.contenthash, uri])\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../store/slices/multicall-slice/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName) {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","const getTokenLogoURL = (address) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS = [];\nconst Logo = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState(0)\n\n  const src = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon color=\"#3142d0\" {...rest} />\n}\n\nexport default Logo\n","import { ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../store/slices/lists-slice/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI() : undefined)\n\n  const srcs = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}) {\n  const srcs = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import React, { useMemo } from 'react'\nimport { TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from '../../../store/slices/swap-slice/actions'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from '../../../utils/prices'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { CurrencyLogo } from '../../../components/Logo'\nimport { RowBetween, RowFixed } from '../../../components/Layout/Row'\nimport truncateHash from '../../../utils/truncateHash'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  const amount =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)\n      : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)\n  const symbol =\n    trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\n\n  const tradeInfoText =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? `Output is estimated. You will receive at least ${amount} ${symbol} or the transaction will revert.`\n      : `Input is estimated. You will sell at most ${amount} ${symbol} or the transaction will revert.`\n\n  const [estimatedText, transactionRevertText] = tradeInfoText.split(`${amount} ${symbol}`)\n\n  const truncatedRecipient = recipient ? truncateHash(recipient) : ''\n\n  const recipientInfoText = `Output will be sent to ${truncatedRecipient}`\n\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : '#253449'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text color='#253449' fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon color=\"#253449\" width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : '#253449'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text color=\"#253449\" fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon color=\"warning\" mr=\"8px\" />\n              <Text bold color=\"#253449\">Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        <Text small color=\"#253449\" textAlign=\"left\" style={{ width: '100%' }}>\n          {estimatedText}\n          <b>\n            {amount} {symbol}\n          </b>\n          {transactionRevertText}\n        </Text>\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"#253449\">\n            {recipientSentToText}\n            <b title={recipient}>{truncatedRecipient}</b>\n            {postSentToText}\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals } from '@pancakeswap/sdk'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from '../../../components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n\nfunction tradeMeaningfullyDiffers(tradeA, tradeB) {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\n\nconst ConfirmSwapModal = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = `Swapping ${trade?.inputAmount?.toSignificant(6) ?? ''} ${trade?.inputAmount?.currency?.symbol ?? ''} for ${trade?.outputAmount?.toSignificant(6) ?? ''} ${trade?.outputAmount?.currency?.symbol ?? ''}`\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={'Confirm Swap'}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from '../../../abi/erc20'\nimport { useAllTokens } from '../../../hooks/Tokens'\nimport { useMulticallContract } from '../../../hooks/useContract'\nimport { isAddress } from '../../../utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall-slice/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses) {\n  const multicallContract = useMulticallContract()\n\n  const addresses = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a) => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address,\n  tokens,\n) {\n  const validatedTokens = useMemo(\n    () => tokens?.filter((t) => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address,\n  tokens,\n) {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account, token) {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account,\n  currencies,\n) {\n  const tokens = useMemo(\n    () => currencies?.filter((currency) => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account, currency) {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances() {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { useEffect, useRef } from 'react'\r\n\r\n/**\r\n * Returns the previous value of the given value\r\n *\r\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\r\n */\r\nconst usePreviousValue = (value) => {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value])\r\n\r\n  return ref.current\r\n}\r\n\r\nexport default usePreviousValue\r\n","import { currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nimport { SUGGESTED_BASES } from '../../constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : '#eefbff')};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && '#eefbff'};\n  }\n\n  background-color: ${({ theme, disable }) => disable && '#eefbff'};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}) {\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\" color=\"#253449\">Common bases</Text>\n        <QuestionHelper text={'These tokens are commonly paired with other tokens.'} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text color=\"#253449\">BNB</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text color=\"#253449\">{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke }) => stroke ?? '#1FC7D4'};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from '../Layout/Row'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { ListLogo } from '../Logo'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from '../../store/slices/lists-slice/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from '../../hooks/Tokens'\n\nconst TokenSection = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: #31D0AA;\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}) {\n  // globals\n  const { chainId } = useActiveWeb3React()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text color=\"#253449\">{token.symbol}</Text>\n          <Text color=\"#BDC2C4\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"#253449\">\n              via {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          Import\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"#31D0AA\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import { useCallback, useMemo } from 'react'\nimport { Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport { LightGreyCard } from '../Card'\nimport QuestionHelper from '../QuestionHelper'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../store/slices/lists-slice/hooks'\nimport { useCurrencyBalance } from '../../store/slices/wallet-slice/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency) {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }) {\n  return <StyledBalanceText color=\"#253449\" title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && '#eefbff'};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold color=\"#253449\">{currency.symbol}</Text>\n        <Text color=\"#253449\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}) {\n  const itemData = useMemo(() => {\n    let formatted = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n  const { chainId } = useActiveWeb3React()\n\n  const inactiveTokens = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text color=\"#253449\" small>Expanded results from inactive Token Lists</Text>\n                <QuestionHelper\n                  text={\"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\"}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n    ],\n  )\n\n  const itemKey = useCallback((index, data) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../store/slices/wallet-slice/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA, balanceB) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances) {\n  return function sortTokens(tokenA, tokenB) {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted) {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA, tokenB) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { ETHER } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useAudioModeManager } from '../../store/slices/user-slice/hooks'\nimport useDebounce from '../../hooks/useDebounce'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef()\n\n  const [searchQuery, setSearchQuery] = useState('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={'Search name or paste address'}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"#253449\" textAlign=\"center\" mb=\"20px\">\n              No results found.\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import { useState } from 'react'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from '../Layout/Column'\nimport { useAddUserToken } from '../../store/slices/user-slice/hooks'\nimport { getBscScanLink } from '../../utils'\nimport truncateHash from '../../utils/truncateHash'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from '../../store/slices/lists-slice/hooks'\nimport { ListLogo } from '../Logo'\n\nfunction ImportToken({ tokens, handleCurrencySelect }) {\n  const { chainId } = useActiveWeb3React()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text color='#253449'>\n            Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.\n          <br />\n          <br />\n          If you purchase an arbitrary token, you may be unable to sell it back.\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address ? `${truncateHash(token.address)}` : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                via {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"#ED4B9E\" />}>\n                Unknown Source\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text color=\"#253449\" mr=\"8px\">{token.name}</Text>\n              <Text color=\"#253449\">({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text color=\"#253449\" mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  (View on BscScan)\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text color=\"#253449\" ml=\"8px\" style={{ userSelect: 'none' }}>\n            I understand\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          Import\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","/* eslint-disable no-continue */\r\n/* eslint-disable no-await-in-loop */\r\n// import schema from '@uniswap/token-lists/src/tokenlist.schema.json'\r\n// import Ajv from 'ajv'\r\nimport contenthashToUri from './contenthashToUri'\r\nimport { parseENSAddress } from './ENS/parseENSAddress'\r\nimport uriToHttp from './uriToHttp'\r\n\r\n// const tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\r\n\r\n/**\r\n * Contains the logic for resolving a list URL to a validated token list\r\n * @param listUrl list url\r\n * @param resolveENSContentHash resolves an ens name to a contenthash\r\n */\r\nexport default async function getTokenList(\r\n  listUrl,\r\n  resolveENSContentHash,\r\n) {\r\n  const parsedENS = parseENSAddress(listUrl)\r\n  let urls\r\n  if (parsedENS) {\r\n    let contentHashUri\r\n    try {\r\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\r\n    } catch (error) {\r\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\r\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\r\n    }\r\n    let translatedUri\r\n    try {\r\n      translatedUri = contenthashToUri(contentHashUri)\r\n    } catch (error) {\r\n      console.error('Failed to translate contenthash to URI', contentHashUri)\r\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\r\n    }\r\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\r\n  } else {\r\n    urls = uriToHttp(listUrl)\r\n  }\r\n  for (let i = 0; i < urls.length; i++) {\r\n    const url = urls[i]\r\n    const isLast = i === urls.length - 1\r\n    let response\r\n    try {\r\n      response = await fetch(url)\r\n    } catch (error) {\r\n      console.error('Failed to fetch list', listUrl, error)\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      continue\r\n    }\r\n\r\n    if (!response.ok) {\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      continue\r\n    }\r\n\r\n    const json = await response.json()\r\n    return json\r\n  }\r\n  throw new Error('Unrecognized list URL protocol.')\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress, provider) {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName, provider) {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from './useActiveWeb3React'\nimport { fetchTokenList } from '../store/slices/lists-slice/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\n\nfunction useFetchListCallback() {\n  const { chainId, library } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const ensResolver = useCallback(\n    (ensName) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","export const CurrencyModalView = {\n  search: 'search',\n  manage: 'manage',\n  importToken: 'importToken',\n  importList: 'importList',\n}\n\nexport default CurrencyModalView\n","import { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport Card from '../Card'\nimport { UNSUPPORTED_LIST_URLS } from '../../constants/lists'\nimport { parseENSAddress } from '../../utils/ENS/parseENSAddress'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../store/slices/lists-slice/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../store/slices/lists-slice/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version) {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)`\n  background-color: ${({ active, theme }) => (active ? `#31D0AA19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? '#31D0AA' : '#EFF4F5')};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }) {\n  const listsByUrl = useSelector((state) => state.lists.byUrl)\n  const dispatch = useDispatch()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text color=\"#253449\">{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        See\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        Remove\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          Update list\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text color=\"#253449\" bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text color=\"#253449\" fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} Tokens\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"#253449\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        variant=\"primary\"\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}) {\n  const [listUrlInput, setListUrlInput] = useState('')\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState()\n  const [addError, setAddError] = useState()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            style={{ margin: '0 4px'}}\n            scale=\"lg\"\n            placeholder={'https:// or ipfs:// or ENS name'}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"#ED4B9E\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text color=\"#253449\" bold>{tempList.name}</Text>\n                  <Text color=\"#253449\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} Tokens\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text color=\"#253449\">Loaded</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  Import\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import { useRef, useCallback, useState, useMemo } from 'react'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from '../Layout/Row'\nimport { useToken } from '../../hooks/Tokens'\nimport { useRemoveUserAddedToken } from '../../store/slices/user-slice/hooks'\nimport useUserAddedTokens from '../../store/slices/user-slice/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from '../Logo'\nimport { getBscScanLink, isAddress } from '../../utils'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const [searchQuery, setSearchQuery] = useState('')\n\n  // manage focus on modal show\n  const inputRef = useRef()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local list\n  const userAddedTokens = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"#253449\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              style={{ margin: '0 4px'}}\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"#ED4B9E\">Enter valid token address</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"#253449\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? 'Custom Token' : 'Custom Tokens'}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              Clear all\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import { useState } from 'react'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"primary\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">Lists</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">Tokens</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { ListLogo } from '../Logo'\nimport { useDispatch } from 'react-redux'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\nimport { removeList, enableList } from '../../store/slices/lists-slice/actions'\nimport { useAllLists } from '../../store/slices/lists-slice/hooks'\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: #253449;\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }) {\n  const dispatch = useDispatch()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text color=\"#253449\" bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"#253449\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text color=\"#253449\" fontSize=\"20px\" textAlign=\"center\" mb=\"16px\">\n                Import at your own risk\n              </Text>\n              <Text color=\"#253449\" mb=\"8px\">\n                  By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.\n              </Text>\n              <Text color=\"#253449\" bold mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text color=\"#253449\" ml=\"10px\" style={{ userSelect: 'none' }}>\n                  I understand\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            Import\n          </Button>\n          {addError ? (\n            <Text color=\"#ED4B9E\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import { useCallback, useState } from 'react'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  Heading,\n  Button,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from '../../hooks/usePreviousValue'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: #FFFFFF;\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}) {\n  const [modalView, setModalView] = useState(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState()\n\n  // used for import list\n  const [importList, setImportList] = useState()\n  const [listURL, setListUrl] = useState()\n\n  const config = {\n    [CurrencyModalView.search]: { title: 'Select a Token', onBack: undefined },\n    [CurrencyModalView.manage]: { title: 'Manage', onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: 'Import Tokens',\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: 'Import List', onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading color=\"#253449\">{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              Manage Tokens\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input`\n  color: #253449;\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: #253449;\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}) {\n  const enforcer = (nextUserInput) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={'Token Amount'}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../store/slices/wallet-slice/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'primary', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: #253449;\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: #eefbff;\n  z-index: 1;\n`\nconst Container = styled.div`\n  border-radius: 16px;\n  background-color: #e9fbfb;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\n\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const translatedLabel = label || 'Input'\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text color=\"#253449\" fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text color=\"#253449\" onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency\n                    ? `Balance: ${selectedCurrencyBalance?.toSignificant(6) ?? 'Loading'}`\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text color=\"#253449\" id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text color=\"#fff\" id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || 'Select a currency'}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon color='#fff' />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\nexport default function TradePrice({ price, showInverted, setShowInverted }) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text color=\"#253449\" style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon color=\"#253449\" width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Modal } from '@pancakeswap/uikit'\nimport ImportToken from '../../../components/SearchModal/ImportToken'\n\nconst ImportTokenWarningModal = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title={'Import Token'}\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { AutoColumn } from '../../../components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? '#E9EAEB' : confirmed ? '#31D0AA' : '#1FC7D4'};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? '#E9EAEB' : prevConfirmed ? '#31D0AA' : '#1FC7D4'}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? '#E9EAEB'\n          : prevConfirmed\n          ? '#1FC7D4'\n          : '#E9EAEB'}\n      80%\n  );\n  opacity: 0.6;\n`\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { useCurrency } from '../../../hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from '../../../hooks/Trades'\nimport useParsedQueryString from '../../../hooks/useParsedQueryString'\nimport { isAddress } from '../../../utils'\nimport { computeSlippageAdjustedAmounts } from '../../../utils/prices'\nimport { useCurrencyBalances } from '../wallet-slice/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { useUserSlippageTolerance } from '../user-slice/hooks'\n\nexport function useSwapState() {\n  return useSelector((state) => state.swap)\n}\n\nexport function useSwapActionHandlers() {\n  const dispatch = useDispatch()\n  const onCurrencySelection = useCallback(\n    (field, currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field, typedValue) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value, currency) {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade, checksummedAddress) {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo() {\n  const { account } = useActiveWeb3React()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError\n  if (!account) {\n    inputError = 'Connect Wallet'\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? 'Enter an amount'\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? 'Select a token'\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? 'Enter a recipient'\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? 'Invalid recipient'\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = `Insufficient ${amountIn.currency.symbol} balance`\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam) {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam) {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam) {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient) {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs) {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch() {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parse } from 'qs'\r\nimport { useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function useParsedQueryString() {\r\n  const { search } = useLocation()\r\n  return useMemo(\r\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\r\n    [search],\r\n  )\r\n}\r\n","import { useState } from 'react'\nimport { Text, Button, Input, Flex, Box } from '@pancakeswap/uikit'\nimport { useUserSlippageTolerance, useUserTransactionTTL } from '../../../store/slices/user-slice/hooks'\nimport QuestionHelper from '../../QuestionHelper'\n\nconst SlippageError = {\n  InvalidInput: 'InvalidInput',\n  RiskyLow: 'RiskyLow',\n  RiskyHigh: 'RiskyHigh',\n}\n\nconst DeadlineError = {\n  InvalidInput: 'InvalidInput',\n}\n\nconst SlippageTabs = () => {\n  const [userSlippageTolerance, setUserSlippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const slippageInputIsValid =\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\n\n  let slippageError\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  const parseCustomSlippage = (value) => {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setUserSlippageTolerance(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const parseCustomDeadline = (value) => {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" mb=\"24px\">\n        <Flex mb=\"12px\">\n          <Text color=\"#253449\">Slippage Tolerance</Text>\n          <QuestionHelper\n            text={\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.'}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex flexWrap=\"wrap\">\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(10)\n            }}\n            variant={userSlippageTolerance === 10 ? 'primary' : 'tertiary'}\n          >\n            0.1%\n          </Button>\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(50)\n            }}\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\n          >\n            0.5%\n          </Button>\n          <Button\n            mr=\"4px\"\n            mt=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(100)\n            }}\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\n          >\n            1.0%\n          </Button>\n          <Flex alignItems=\"center\">\n            <Box width=\"76px\" mt=\"4px\">\n              <Input\n                scale=\"sm\"\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\n                }}\n                onChange={(e) => parseCustomSlippage(e.target.value)}\n                isWarning={!slippageInputIsValid}\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\n              />\n            </Box>\n            <Text color=\"primary\" bold ml=\"2px\">\n              %\n            </Text>\n          </Flex>\n        </Flex>\n        {!!slippageError && (\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E'} mt=\"8px\">\n            {slippageError === SlippageError.InvalidInput\n              ? 'Enter a valid slippage percentage'\n              : slippageError === SlippageError.RiskyLow\n              ? 'Your transaction may fail'\n              : 'Your transaction may be frontrun'}\n          </Text>\n        )}\n      </Flex>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Flex alignItems=\"center\">\n          <Text color=\"#253449\">Tx deadline (mins)</Text>\n          <QuestionHelper\n            text={'Your transaction will revert if it is left confirming for longer than this time.'}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex>\n          <Box width=\"52px\" mt=\"4px\">\n            <Input\n              scale=\"sm\"\n              color={deadlineError ? 'red' : undefined}\n              onBlur={() => {\n                parseCustomDeadline((ttl / 60).toString())\n              }}\n              placeholder={(ttl / 60).toString()}\n              value={deadlineInput}\n              onChange={(e) => parseCustomDeadline(e.target.value)}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default SlippageTabs\n","import { useState } from 'react'\nimport { Button, Text, Flex, Message, Modal, Checkbox } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from '../../../store/slices/user-slice/hooks'\n\nconst ExpertModal = ({ setShowConfirmExpertModal, setShowExpertModeAcknowledgement }) => {\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  return (\n    <Modal\n      title={'Expert Mode'}\n      onBack={() => setShowConfirmExpertModal(false)}\n      onDismiss={() => setShowConfirmExpertModal(false)}\n      headerBackground=\"gradients.cardHeader\"\n      style={{ maxWidth: '360px' }}\n    >\n      <Message variant=\"warning\" mb=\"24px\">\n        <Text color=\"#253449\">\n            Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\n        </Text>\n      </Message>\n      <Text mb=\"24px\" color=\"#253449\">'Only use this mode if you know what you’re doing.</Text>\n      <Flex alignItems=\"center\" mb=\"24px\">\n        <Checkbox\n          name=\"confirmed\"\n          type=\"checkbox\"\n          checked={isRememberChecked}\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\n          scale=\"sm\"\n        />\n        <Text ml=\"10px\" color=\"#253449\" style={{ userSelect: 'none' }}>\n          Don't show this again\n        </Text>\n      </Flex>\n      <Button\n        mb=\"8px\"\n        id=\"confirm-expert-mode\"\n        onClick={() => {\n          // eslint-disable-next-line no-alert\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n            toggleExpertMode()\n            setShowConfirmExpertModal(false)\n            if (isRememberChecked) {\n              setShowExpertModeAcknowledgement(false)\n            }\n          }\n        }}\n      >\n        Turn On Expert Mode\n      </Button>\n      <Button\n        variant=\"primary\"\n        onClick={() => {\n          setShowConfirmExpertModal(false)\n        }}\n      >\n        Cancel\n      </Button>\n    </Modal>\n  )\n}\n\nexport default ExpertModal\n","import { Flex, Button, Text } from '@pancakeswap/uikit'\nimport QuestionHelper from '../../QuestionHelper'\nimport { GAS_PRICE_GWEI, GAS_PRICE } from '../../../store/slices/user-slice/hooks/helpers'\nimport { useGasPriceManager } from '../../../store/slices/user-slice/hooks'\n\nconst GasSettings = () => {\n  const [gasPrice, setGasPrice] = useGasPriceManager()\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex mb=\"12px\" alignItems=\"center\">\n        <Text color=\"#253449\">Default Transaction Speed (GWEI)</Text>\n        <QuestionHelper\n          text={'Adjusts the gas price (transaction fee) for your transaction. Higher GWEI = higher speed = higher fees'}\n          placement=\"top-start\"\n          ml=\"4px\"\n        />\n      </Flex>\n      <Flex flexWrap=\"wrap\">\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.default)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.default ? 'primary' : 'tertiary'}\n        >\n          {`Standard (${GAS_PRICE.default})`}\n        </Button>\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.fast)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.fast ? 'primary' : 'tertiary'}\n        >\n          {`Fast (${GAS_PRICE.fast})`}\n        </Button>\n        <Button\n          mr=\"4px\"\n          mt=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.instant)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.instant ? 'primary' : 'tertiary'}\n        >\n          {`Instant (${GAS_PRICE.instant})`}\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default GasSettings\n","import { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, PancakeToggle, Toggle, Flex, Modal } from '@pancakeswap/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserExpertModeAcknowledgementShow,\n  useUserSingleHopOnly,\n} from '../../../store/slices/user-slice/hooks'\nimport { useSwapActionHandlers } from '../../../store/slices/swap-slice/hooks'\nimport QuestionHelper from '../../QuestionHelper'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\nimport GasSettings from './GasSettings'\n\n// TODO: Temporary. Once uikit is merged with this style change, this can be removed.\nconst PancakeToggleWrapper = styled.div`\n  .pancakes {\n    position: absolute;\n  }\n`\n\nconst ScrollableContainer = styled(Flex)`\n  flex-direction: column;\n  max-height: 400px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst SettingsModal = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [showExpertModeAcknowledgement, setShowExpertModeAcknowledgement] = useUserExpertModeAcknowledgementShow()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setShowExpertModeAcknowledgement={setShowExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (!showExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <Modal\n      title={'Settings'}\n      headerBackground=\"gradients.cardHeader\"\n      onDismiss={onDismiss}\n      style={{ maxWidth: '420px' }}\n    >\n      <ScrollableContainer>\n        <Flex pb=\"24px\" flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"#253449\" mb=\"24px\">\n            Global\n          </Text>\n          <GasSettings />\n        </Flex>\n        <Flex pt=\"24px\" flexDirection=\"column\" borderTop={`1px #E7E3EB solid`}>\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"#253449\" mb=\"24px\">\n            Swaps & Liquidity\n          </Text>\n          <TransactionSettings />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text color=\"#253449\">Expert Mode</Text>\n            <QuestionHelper\n              text={'Bypasses confirmation modals and allows high slippage trades. Use at your own risk.'}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text color=\"#253449\">Disable Multihops</Text>\n            <QuestionHelper text={'Restricts swaps to direct pairs only.'} placement=\"top-start\" ml=\"4px\" />\n          </Flex>\n          <Toggle\n            id=\"toggle-disable-multihop-button\"\n            checked={singleHopOnly}\n            scale=\"md\"\n            onChange={() => {\n              setSingleHopOnly(!singleHopOnly)\n            }}\n          />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Flex alignItems=\"center\">\n            <Text color=\"#253449\">Flippy sounds</Text>\n            <QuestionHelper\n              text={'Fun sounds to make a truly immersive pancake-flipping trading experience'}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <PancakeToggleWrapper>\n            <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} scale=\"md\" />\n          </PancakeToggleWrapper>\n        </Flex>\n      </ScrollableContainer>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import { Flex, IconButton, CogIcon, useModal } from '@pancakeswap/uikit'\nimport SettingsModal from './SettingsModal'\n\nconst GlobalSettings = () => {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n\n  return (\n    <Flex>\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\" id=\"open-settings-dialog-button\">\n        <CogIcon height={22} width={22} color=\"#253449\" />\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default GlobalSettings\n","import { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { addTransaction } from './actions'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder() {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  return useCallback(\n    (\n      response,\n      {\n        summary,\n        approval,\n        claim,\n      } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions() {\n  const { chainId } = useActiveWeb3React()\n  const state = useSelector((state) => state.transactions)\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash) {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx) {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress, spender) {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { getBscScanLink } from '../../../utils'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: #1FC7D4;\n`\n\nconst IconWrapper = styled.div`\n  color: ${({ pending, success, theme }) =>\n    pending ? '#1FC7D4' : success ? '#31D0AA' : '#ED4B9E'};\n`\n\nexport default function Transaction({ tx }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"#31D0AA\" /> : <CloseIcon color=\"#ED4B9E\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex } from '@pancakeswap/uikit'\nimport ConnectWalletButton from '../../../components/ConnectWalletButton'\nimport { isTransactionRecent, useAllTransactions } from '../../../store/slices/transactions-slice/hooks'\nimport { clearAllTransactions } from '../../../store/slices/transactions-slice/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a, b) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n  const allTransactions = useAllTransactions()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={'Recent Transactions'} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text color=\"#253449\">Recent Transactions</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  clear all\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text color=\"#253449\">No recent transactions</Text>\n          )}\n        </ModalBody>\n      )}\n      {!account && <ConnectWalletButton />}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"#253449\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from '../../store/slices/user-slice/hooks'\nimport GlobalSettings from '../Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid #E7E3EB;\n`\n\nconst AppHeader = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  background-color: #eefbff;\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { TokenAmount } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\n\r\nimport { useTokenContract } from './useContract'\r\nimport { useSingleCallResult } from '../store/slices/multicall-slice/hooks'\r\n\r\nfunction useTokenAllowance(token, owner, spender) {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\r\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\r\n\r\n  return useMemo(\r\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\r\n    [token, allowance],\r\n  )\r\n}\r\n\r\nexport default useTokenAllowance\r\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TokenAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from './useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../store/slices/swap-slice/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../store/slices/transactions-slice/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport const ApprovalState = {\n  UNKNOWN: '',\n  NOT_APPROVED: '',\n  PENDING: '',\n  APPROVED: ''\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove,\n  spender,\n) {\n  const { account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async () => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return callWithGasPrice(\n      tokenContract,\n      'approve',\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\n      {\n        gasLimit: calculateGasMargin(estimatedGas),\n      },\n    )\n      .then((response) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\r\n\r\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\r\nexport default function useTransactionDeadline() {\r\n  const ttl = useSelector((state) => state.user.userDeadline)\r\n  const blockTimestamp = useCurrentBlockTimestamp()\r\n  return useMemo(() => {\r\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\r\n    return undefined\r\n  }, [blockTimestamp, ttl])\r\n}\r\n","import { useSingleCallResult } from '../store/slices/multicall-slice/hooks'\r\nimport { useMulticallContract } from './useContract'\r\n\r\n// gets the current timestamp from the blockchain\r\nexport default function useCurrentBlockTimestamp() {\r\n  const multicall = useMulticallContract()\r\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\r\n}\r\n","import { JSBI, Percent, Router, TradeType } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from './useActiveWeb3React'\r\nimport { useGasPrice } from '../store/slices/user-slice/hooks'\r\nimport truncateHash from '../utils/truncateHash'\r\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../constants'\r\nimport { useTransactionAdder } from '../store/slices/transactions-slice/hooks'\r\nimport { calculateGasMargin, getRouterContract, isAddress } from '../utils'\r\nimport isZero from '../utils/isZero'\r\nimport useTransactionDeadline from './useTransactionDeadline'\r\nimport useENS from './ENS/useENS'\r\n\r\nexport const SwapCallbackState = {\r\n  INVALID: '',\r\n  LOADING: '',\r\n  VALID: '',\r\n}\r\n\r\nfunction useSwapCallArguments(\r\n  trade, // trade to execute, required\r\n  allowedSlippage = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\n  recipientAddressOrName, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\r\n) {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n\r\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\r\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\r\n  const deadline = useTransactionDeadline()\r\n\r\n  return useMemo(() => {\r\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\r\n\r\n    const contract = getRouterContract(chainId, library, account)\r\n    if (!contract) {\r\n      return []\r\n    }\r\n\r\n    const swapMethods = []\r\n\r\n    swapMethods.push(\r\n      Router.swapCallParameters(trade, {\r\n        feeOnTransfer: false,\r\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\r\n        recipient,\r\n        deadline: deadline.toNumber(),\r\n      }),\r\n    )\r\n\r\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\r\n      swapMethods.push(\r\n        Router.swapCallParameters(trade, {\r\n          feeOnTransfer: true,\r\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\r\n          recipient,\r\n          deadline: deadline.toNumber(),\r\n        }),\r\n      )\r\n    }\r\n\r\n    return swapMethods.map((parameters) => ({ parameters, contract }))\r\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\r\n}\r\n\r\n// returns a function that will execute a swap, if the parameters are all valid\r\n// and the user has approved the slippage adjusted input amount for the trade\r\nexport function useSwapCallback(\r\n  trade, // trade to execute, required\r\n  allowedSlippage = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\n  recipientAddressOrName, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\r\n) {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n  const gasPrice = useGasPrice()\r\n\r\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\r\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\r\n\r\n  return useMemo(() => {\r\n    if (!trade || !library || !account || !chainId) {\r\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\r\n    }\r\n    if (!recipient) {\r\n      if (recipientAddressOrName !== null) {\r\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\r\n      }\r\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\r\n    }\r\n\r\n    return {\r\n      state: SwapCallbackState.VALID,\r\n      callback: async function onSwap() {\r\n        const estimatedCalls = await Promise.all(\r\n          swapCalls.map((call) => {\r\n            const {\r\n              parameters: { methodName, args, value },\r\n              contract,\r\n            } = call\r\n            const options = !value || isZero(value) ? {} : { value }\r\n\r\n            return contract.estimateGas[methodName](...args, options)\r\n              .then((gasEstimate) => {\r\n                return {\r\n                  call,\r\n                  gasEstimate,\r\n                }\r\n              })\r\n              .catch((gasError) => {\r\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\r\n\r\n                return contract.callStatic[methodName](...args, options)\r\n                  .then((result) => {\r\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\r\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\r\n                  })\r\n                  .catch((callError) => {\r\n                    console.error('Call threw error', call, callError)\r\n                    const reason = callError.reason || callError.data?.message || callError.message\r\n                    const errorMessage = `The transaction cannot succeed due to error: ${\r\n                      reason ?? 'Unknown error, check the logs'\r\n                    }.`\r\n\r\n                    return { call, error: new Error(errorMessage) }\r\n                  })\r\n              })\r\n          }),\r\n        )\r\n\r\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\r\n        const successfulEstimation = estimatedCalls.find(\r\n          (el, ix, list) =>\r\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\r\n        )\r\n\r\n        if (!successfulEstimation) {\r\n          const errorCalls = estimatedCalls.filter((call) => 'error' in call)\r\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\r\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\r\n        }\r\n\r\n        const {\r\n          call: {\r\n            contract,\r\n            parameters: { methodName, args, value },\r\n          },\r\n          gasEstimate,\r\n        } = successfulEstimation\r\n\r\n        return contract[methodName](...args, {\r\n          gasLimit: calculateGasMargin(gasEstimate),\r\n          gasPrice,\r\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\r\n        })\r\n          .then((response) => {\r\n            const inputSymbol = trade.inputAmount.currency.symbol\r\n            const outputSymbol = trade.outputAmount.currency.symbol\r\n            const inputAmount = trade.inputAmount.toSignificant(3)\r\n            const outputAmount = trade.outputAmount.toSignificant(3)\r\n\r\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\r\n            const withRecipient =\r\n              recipient === account\r\n                ? base\r\n                : `${base} to ${\r\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\r\n                      ? truncateHash(recipientAddressOrName)\r\n                      : recipientAddressOrName\r\n                  }`\r\n\r\n            addTransaction(response, {\r\n              summary: withRecipient,\r\n            })\r\n\r\n            return response.hash\r\n          })\r\n          .catch((error) => {\r\n            // if the user rejected the tx, pass this along\r\n            if (error?.code === 4001) {\r\n              throw new Error('Transaction rejected.')\r\n            } else {\r\n              // otherwise, the error was unexpected and we need to convey that\r\n              console.error(`Swap failed`, error, methodName, args, value)\r\n              throw new Error(`Swap failed: ${error.message}`)\r\n            }\r\n          })\r\n      },\r\n      error: null,\r\n    }\r\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice])\r\n}\r\n","import { currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from './useActiveWeb3React'\r\nimport { tryParseAmount } from '../store/slices/swap-slice/hooks'\r\nimport { useTransactionAdder } from '../store/slices/transactions-slice/hooks'\r\nimport { useCurrencyBalance } from '../store/slices/wallet-slice/hooks'\r\nimport { useWETHContract } from './useContract'\r\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\r\n\r\nexport const WrapType = {\r\n  NOT_APPLICABLE: 'NOT_APPLICABLE',\r\n  WRAP: 'WRAP',\r\n  UNWRAP: 'UNWRAP'\r\n}\r\n\r\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\r\n/**\r\n * Given the selected input and output currency, return a wrap callback\r\n * @param inputCurrency the selected input currency\r\n * @param outputCurrency the selected output currency\r\n * @param typedValue the user input value\r\n */\r\nexport default function useWrapCallback(\r\n  inputCurrency,\r\n  outputCurrency,\r\n  typedValue,\r\n) {\r\n  const { chainId, account } = useActiveWeb3React()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const wethContract = useWETHContract()\r\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\r\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\r\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  return useMemo(() => {\r\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\r\n\r\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\r\n\r\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\r\n      return {\r\n        wrapType: WrapType.WRAP,\r\n        execute:\r\n          sufficientBalance && inputAmount\r\n            ? async () => {\r\n                try {\r\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\r\n                    value: `0x${inputAmount.raw.toString(16)}`,\r\n                  })\r\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\r\n                } catch (error) {\r\n                  console.error('Could not deposit', error)\r\n                }\r\n              }\r\n            : undefined,\r\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\r\n      }\r\n    }\r\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\r\n      return {\r\n        wrapType: WrapType.UNWRAP,\r\n        execute:\r\n          sufficientBalance && inputAmount\r\n            ? async () => {\r\n                try {\r\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\r\n                    `0x${inputAmount.raw.toString(16)}`,\r\n                  ])\r\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\r\n                } catch (error) {\r\n                  console.error('Could not withdraw', error)\r\n                }\r\n              }\r\n            : undefined,\r\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\r\n      }\r\n    }\r\n    return NOT_APPLICABLE\r\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\r\n}\r\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\r\nimport { MIN_BNB } from '../constants'\r\n\r\n/**\r\n * Given some token amount, return the max that can be spent of it\r\n * @param currencyAmount to return max of\r\n */\r\nexport function maxAmountSpend(currencyAmount) {\r\n  if (!currencyAmount) return undefined\r\n  if (currencyAmount.currency === ETHER) {\r\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\r\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\r\n    }\r\n    return CurrencyAmount.ether(JSBI.BigInt(0))\r\n  }\r\n  return currencyAmount\r\n}\r\n\r\nexport default maxAmountSpend\r\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  return (\n    <>\n      <Text color=\"#253449\">To trade SAFEMOON, you must: </Text>\n      <Text color=\"#253449\">• Click on the settings icon</Text>\n      <Text color=\"#253449\" mb=\"24px\">• Set your slippage tolerance to 12%+</Text>\n      <Text color=\"#253449\">This is because SafeMoon taxes a 10% fee on each transaction:</Text>\n      <Text color=\"#253449\">• 5% fee = redistributed to all existing holders</Text>\n      <Text color=\"#253449\">• 5% fee = used to add liquidity</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\n\nconst BondlyWarning = () => {\n  return <Text color=\"#253449\">Warning: BONDLY has been compromised. Please remove liqudity until further notice.</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\nconst Acknowledgement = ({ handleContinueClick }) => {\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text color=\"#253449\" ml=\"10px\" style={{ userSelect: 'none' }}>\n            I understand\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          Continue\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport SwapWarningTokensConfig from '../../../../constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal = ({ swapCurrency, onDismiss }) => {\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [SwapWarningTokensConfig.safemoon.address]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [SwapWarningTokensConfig.bondly.address]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader>\n        <Heading color=\"#253449\" p=\"12px 24px\">{`Notice for trading ${SWAP_WARNING.symbol}`}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { JSBI, Token } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from '../../hooks/Trades'\nimport SwapWarningTokens from '../../constants/swapWarningTokens'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../store/slices/swap-slice/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../store/slices/swap-slice/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../store/slices/user-slice/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport SwapWarningModal from './components/SwapWarningModal'\nimport './swap.scss'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: #253449;\n`\n\nexport default function Swap({ history }) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c) => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  const [isExpertMode] = useExpertModeManager()\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      return swapCurrency.address === warningTokenData.address\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <div className='swap-view'>\n      <AppBody>\n        <AppHeader title={'Swap'} subtitle={'Trade tokens in an instant'} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? 'From (estimated)' : 'From'}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : '#253449'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    + Add a send (optional)\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? 'To (estimated)' : 'To'}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    - Remove send\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>Price</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>Slippage Tolerance</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                Unsupported Asset\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"#253449\" mb=\"4px\">\n                  Insufficient liquidity for this trade.\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"#253449\" mb=\"4px\">\n                    Try enabling multi-hop trades.\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      Enabling <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    `Enabled`\n                  ) : (\n                    `Enable ${currencies[Field.INPUT]?.symbol ?? ''}`\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? 'Price Impact High'\n                    : priceImpactSeverity > 2\n                    ? 'Swap Anyway'\n                    : 'Swap'}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? 'Price Impact Too High'\n                    : priceImpactSeverity > 2\n                    ? 'Swap Anyway'\n                    : 'Swap')}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n    </div>\n  )\n}\n","import { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../constants'\n\n\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee) {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    const confirmWord = 'confirm'\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(0)}%. Please type the word ${confirmWord} to continue with this swap.`,\n      ) === confirmWord\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(0)}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the https://pancakeswap.finance/swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { simpleRpcProvider } from '../../../utils/providers'\nimport useRefresh from '../../../hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useFetchUserPools = (account) => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n}\n\nexport const usePools = () => {\n  const { pools, userDataLoaded } = useSelector((state) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}","const MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\n\nexport const getAprData = (pool, performanceFee) => {\n  const { apr } = pool\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const autoCompoundFrequency = MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\n\n  return { apr, autoCompoundFrequency }\n}\n\nexport const getPoolBlockInfo = (pool, currentBlock) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport Balance from '../../../../components/Balance'\nimport RoiCalculatorModal from '../../../../components/RoiCalculatorModal'\nimport { getAprData } from '../../helpers'\nimport BigNumber from 'bignumber.js'\nimport { displayNumber } from '../../../../utils/formatBalance'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\nconst AprRow = ({ pool, performanceFee = 0 }) => {\n  const { stakingToken, isFinished, apr, earningTokenPrice } = pool\n\n  const tooltipContent = 'APY includes compounding, APR doesn’t. This pool’s reward token is compounded automatically, so we show APY.'\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `https://pancakeswap.finance/swap?outputCurrency=${stakingToken.address}` : 'https://pancakeswap.finance/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={new BigNumber(earningTokenPrice)}\n      apr={apr}\n      linkLabel={`Get ${stakingToken.symbol}`}\n      linkHref={apyModalLink}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText color=\"#253449\" ref={targetRef}>APR:</TooltipText>\n      {!apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={displayNumber(earningsPercentageToDisplay)}\n            decimals={2}\n            unit=\"%\"\n            onClick={onPresentApyModal}\n          />\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"#253449cc\" width=\"18px\" />\n          </IconButton>\n        </ApyLabelContainer>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished }) => isFinished ? '#BDC2C4' : '#253449'};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from '../../../../../utils/formatBalance'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from '../../../../../constants'\nimport { useBlock } from '../../../../../store/slices/block-slice/hooks'\nimport { getAddress } from '../../../../../utils/addressHelpers'\nimport { registerToken } from '../../../../../utils/wallet'\nimport { getBscScanLink } from '../../../../../utils'\nimport Balance from '../../../../../components/Balance'\nimport { getPoolBlockInfo } from '../../../helpers'\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter = ({ pool, account }) => {\n  const { currentBlock } = useBlock()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n  } = pool\n\n  const tokenAddress = earningToken.address || ''\n  const poolContractAddress = getAddress(contractAddress)\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const getTotalStakedBalance = () => {\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(`Total amount of ${stakingToken.symbol} staked in this pool`, {\n    placement: 'bottom'\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text color=\"#253449\" small>Total staked:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"#253449cc\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text color=\"#253449\" small>Max. stake per user:</Text>\n          <Text color=\"#253449\" small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text color=\"#253449\" small>{hasPoolStarted ? 'Ends in' : 'Starts in'}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  Blocks\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          View Project Site\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${poolContractAddress}`}\n            bold={false}\n            small\n          >\n            View Contract\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              Add to Metamask\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { ManualPoolTag } from '../../../../../components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer = ({ pool, account }) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = 'You must harvest and compound your earnings from this pool manually.'\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          <ManualPoolTag />\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"#253449cc\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? 'Hide' : 'Details'}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenPairImage } from '../../../../components/TokenImage'\n\nconst Wrapper = styled(CardHeader)`\n  background: ${({ isFinished }) =>\n    isFinished ? '#E9EAEB' : \"#eefbff\"};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader = ({ earningToken, stakingToken, isFinished = false, isStaking = false }) => {\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getSubHeading = () => {\n    return `Stake ${stakingToken.symbol}`\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? '#BDC2C4' : 'body'} scale=\"lg\">\n            {`Earn ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? '#BDC2C4' : '#253449cc'}>{getSubHeading()}</Text>\n        </Flex>\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React, { useCallback, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance } from '../../../store/slices/pools-slice'\nimport { useSafeStake } from '../../../hooks/useContract'\nimport useToast from '../../../hooks/useToast'\nimport { useCallWithGasPrice } from '../../../hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from '../../../components/Toast'\n\nexport const useApprovePool = (lpContract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const safeStakeContract = useSafeStake(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await callWithGasPrice(lpContract, 'approve', [safeStakeContract.address, ethers.constants.MaxUint256])\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          'Contract Enabled',\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {`You can now stake in the ${earningTokenSymbol} pool!`}\n          </ToastDescriptionWithTx>,\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError('Error', 'Please try again. Confirm the transaction and make sure you are paying enough gas!')\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError('Error', 'Please try again. Confirm the transaction and make sure you are paying enough gas!')\n    }\n  }, [\n    account,\n    dispatch,\n    lpContract,\n    safeStakeContract,\n    sousId,\n    earningTokenSymbol,\n    toastError,\n    toastSuccess,\n    callWithGasPrice,\n  ])\n\n  return { handleApprove, requestedApproval }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useERC20 } from '../../../../../hooks/useContract'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\nconst ApprovalAction = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          Enable\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\r\nimport { useThemeManager } from '../store/slices/user-slice/hooks'\r\n\r\nconst useTheme = () => {\r\n  const [isDark, toggleTheme] = useThemeManager()\r\n  const theme = useContext(StyledThemeContext)\r\n  return { isDark, theme, toggleTheme }\r\n}\r\n\r\nexport default useTheme\r\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from '../../../../../hooks/useTheme'\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal = ({ tokenSymbol, onDismiss }) => {\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={`${tokenSymbol} required`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"#ED4B9E\" bold>\n        {`Insufficient ${tokenSymbol} balance`}\n      </Text>\n      <Text color=\"#253449\" mt=\"24px\">{`You’ll need ${tokenSymbol} to stake in this pool!`}</Text>\n      <Text>\n        {`Buy some ${tokenSymbol}, or make sure your %symbol% isn’t in another pool or LP.`}\n      </Text>\n      <Button variant=\"primary\" mt=\"24px\" as=\"a\" external href=\"https://pancakeswap.finance/swap\">\n        Buy {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"primary\" mt=\"8px\" width=\"100%\">\n          Locate Assets\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        Close Window\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDispatch } from 'react-redux'\nimport { updateUserStakedBalance, updateUserBalance } from '../../../store/slices/pools-slice'\nimport BigNumber from 'bignumber.js'\nimport { BIG_TEN } from '../../../utils/bigNumber'\nimport { useSafeChef, useSafeStake } from '../../../hooks/useContract'\nimport getGasPrice from '../../../utils/getGasPrice'\n\nconst sousStake = async (safeStakeContract, amount, decimals = 18) => {\n  const gasPrice = getGasPrice()\n  const tx = await safeStakeContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const safeChefContract = useSafeChef()\n  const safeStakeContract = useSafeStake(sousId)\n\n  const handleStake = useCallback(\n    async (amount, decimals) => {\n      await sousStake(safeStakeContract, amount, decimals)\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [account, dispatch, safeChefContract, safeStakeContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { useDispatch } from 'react-redux'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from '../../../store/slices/pools-slice'\nimport { useSafeChef, useSafeStake } from '../../../hooks/useContract'\nimport getGasPrice from '../../../utils/getGasPrice'\n\nconst sousUnstake = async (safeStakeContract, amount, decimals) => {\n  const gasPrice = getGasPrice()\n  const units = parseUnits(amount, decimals)\n\n  const tx = await safeStakeContract.withdraw(units.toString(), {\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (safeStakeContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await safeStakeContract.emergencyWithdraw({ gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const safeChefContract = useSafeChef()\n  const safeStakeContract = useSafeStake(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount, decimals) => {\n      if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(safeStakeContract)\n      } else {\n        await sousUnstake(safeStakeContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [account, dispatch, enableEmergencyWithdraw, safeChefContract, safeStakeContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  Link,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport useTheme from '../../../../../hooks/useTheme'\nimport useToast from '../../../../../hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport RoiCalculatorModal from '../../../../../components/RoiCalculatorModal'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from '../../../../../utils/formatBalance'\nimport { getInterestBreakdown } from '../../../../../utils/compoundApyHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst StakeModal = ({\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken, depositFee } = pool\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n  const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n  const userNotEnoughToken = isRemovingStake\n    ? userData.stakedBalance.lt(fullDecimalStakeAmount)\n    : userData.stakingTokenBalance.lt(fullDecimalStakeAmount)\n\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `https://pancakeswap.finance/swap?outputCurrency=${stakingToken.address}` : 'https://pancakeswap.finance/swap'\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [\n    stakeAmount,\n    stakingLimit,\n    userData,\n    stakingToken,\n    isRemovingStake,\n    setHasReachedStakedLimit,\n    fullDecimalStakeAmount,\n  ])\n\n  const handleStakeInputChange = (input) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      if (isRemovingStake) {\n        // unstaking\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          'Unstaked',\n          `Your ${earningToken.symbol} earnings have also been harvested to your wallet!`\n        )\n      } else {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          'Staked',\n          `Your ${stakingToken.symbol} funds have been staked in the pool!`\n        )\n      }\n      setPendingTx(false)\n      onDismiss()\n    } catch (e) {\n      toastError('Error', 'Please try again. Confirm the transaction and make sure you are paying enough gas!')\n      setPendingTx(false)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={new BigNumber(earningTokenPrice)}\n        apr={apr}\n        linkLabel={`Get ${stakingToken.symbol}`}\n        linkHref={getTokenLink}\n        onBack={() => setShowRoiCalculator(false)}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      minWidth=\"346px\"\n      title={isRemovingStake ? 'Unstake' : 'Stake in Pool'}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"#253449\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {`Max stake for this pool: ${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text color=\"#253449\" bold>{isRemovingStake ? 'Unstake' : 'Stake'}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text color=\"#253449\" ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      {isRemovingStake ? (\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n          <Text color=\"#253449\">Withdrawal Fee:</Text>\n          <Text color=\"#253449\" bold>{`${userData.withdrawFee.toString()}%`}</Text>\n        </Flex>) : (\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n          <Text color=\"#253449\">Deposit Fee:</Text>\n          <Text color=\"#253449\" bold>{`${depositFee.toString()}%`}</Text>\n        </Flex>\n      )}\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit || userNotEnoughToken}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"#ED4B9E\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {`Maximum total stake: ${getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0)} ${stakingToken.symbol}`}\n        </Text>\n      )}\n      {userNotEnoughToken && (\n        <Text color=\"#ED4B9E\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {`Insufficient ${stakingToken.symbol} balance`}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"#253449cc\" fontSize=\"12px\" mb=\"8px\">\n        {`Balance: ${getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals)}`}\n      </Text>\n      {/* <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      /> */}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>Max</PercentageButton>\n      </Flex>\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"#253449cc\">\n            Annual ROI at current rates:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay color=\"#253449\">${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"#253449cc\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || userNotEnoughToken}\n        mt=\"24px\"\n      >\n        {pendingTx ? 'Confirming' : 'Confirm'}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={getTokenLink}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"primary\">\n            {`Get ${stakingToken.symbol}`}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from '../../../../../utils/formatBalance'\nimport Balance from '../../../../../components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\nconst StakeAction = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    'You’ve already staked the maximum amount you can stake in this pool!',\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"#253449cc\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"#253449cc\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"primary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"#fff\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"primary\" disabled>\n                <AddIcon color=\"#fff\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"primary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"#fff\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        Stake\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDispatch } from 'react-redux'\nimport { updateUserBalance, updateUserPendingReward } from '../../../store/slices/pools-slice'\nimport getGasPrice from '../../../utils/getGasPrice'\nimport { useSafeChef, useSafeStake } from '../../../hooks/useContract'\n\nconst harvestPool = async (safeStakeContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await safeStakeContract.deposit('0', { gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const safeStakeContract = useSafeStake(sousId)\n  const safeChefContract = useSafeChef()\n\n  const handleHarvest = useCallback(async () => {\n    await harvestPool(safeStakeContract)\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, dispatch, safeChefContract, safeStakeContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n} from '@pancakeswap/uikit'\nimport useTheme from '../../../../../hooks/useTheme'\nimport useToast from '../../../../../hooks/useToast'\nimport { formatNumber } from '../../../../../utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\n\nconst CollectModal= ({\n  formattedBalance,\n  earningsDollarValue,\n  earningToken,\n  sousId,\n  onDismiss,\n}) => {\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n      toastSuccess(\n        `Harvested!`,\n        `Your ${earningToken.symbol} earnings have been sent to your wallet!`\n      )\n      setPendingTx(false)\n      onDismiss()\n    } catch (e) {\n      toastError('Error', 'Please try again. Confirm the transaction and make sure you are paying enough gas!')\n      console.error(e)\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} 'Harvest'}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text color=\"#253449\">'Harvesting:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading color=\"#253449\">\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"#253449cc\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? 'Confirming' : 'Confirm'}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        Close Window\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport { getBalanceNumber, formatNumber } from '../../../../../utils/formatBalance'\nimport Balance from '../../../../../components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\nconst HarvestActions = ({\n  earnings,\n  earningToken,\n  sousId,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const hasEarnings = earnings.toNumber() > 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      earningsDollarValue={earningTokenDollarBalance}\n      earningToken={earningToken}\n      sousId={sousId}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"#253449cc\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"#BDC2C4\">0</Heading>\n                <Text fontSize=\"12px\" color=\"#BDC2C4\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        Harvest\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from '../../../../../utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CardActions = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0)\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"#253449\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"#253449cc\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                Earned\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? '#253449' : '#253449cc'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : 'Stake'}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? '#253449cc' : '#253449'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? 'Staked' : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from '../../../../components/ConnectWalletButton'\nimport { BIG_ZERO } from '../../../../utils/bigNumber'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard = ({ pool, account }) => {\n  const { stakingToken, earningToken, isFinished, userData } = pool\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        isFinished={isFinished}\n      />\n      <CardBody>\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"#253449cc\" bold>\n                Start earning\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from '../../../../store/slices/user-slice/actions'\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : '#BDC2C4'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : '#BDC2C4'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport ToggleView from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"primary\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          Live\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem id=\"finished-pools-button\" as={Link} to={`${url}/history`}>\n            Finished\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text color=\"#1FC7D4\">Staked only</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { BIG_ZERO } from '../../../../../utils/bigNumber'\nimport { TokenPairImage } from '../../../../../components/TokenImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell = ({ pool }) => {\n  const { isMobile } = useMatchBreakpoints()\n  const { stakingToken, earningToken, userData, isFinished } = pool\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const showStakedTag = isStaked\n\n  let title = `${'Earn'} ${earningTokenSymbol}`\n  let subtitle = `${'Stake'} ${stakingTokenSymbol}`\n\n  return (\n    <StyledCell role=\"cell\">\n      <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : '#253449'} textTransform=\"uppercase\">\n            {'Staked'}\n          </Text>\n        )}\n        <Text color=\"#253449\" bold={!isMobile} small={isMobile}>\n          {title}\n        </Text>\n        <Text fontSize=\"12px\" color=\"#253449cc\">\n          {subtitle}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from '../../../../../utils/bigNumber'\nimport { formatNumber, getBalanceNumber } from '../../../../../utils/formatBalance'\nimport Balance from '../../../../../components/Balance'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst EarningsCell = ({ pool, account, userDataLoaded }) => {\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, earningToken, userData, earningTokenPrice } = pool\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = account && earnings.gt(0)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const labelText = `${earningToken.symbol} Earned`\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      earningsDollarValue={earningTokenDollarBalance}\n      earningToken={earningToken}\n      sousId={sousId}\n    />,\n  )\n\n  const handleEarningsClick = (event) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"#253449cc\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : '#BDC2C4'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"#253449cc\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"#BDC2C4\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, useModal, CalculateIcon, Skeleton, Button } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from '../../../../components/RoiCalculatorModal'\nimport Balance from '../../../../components/Balance'\nimport { getAprData } from '../../helpers'\nimport BigNumber from 'bignumber.js'\nimport { displayNumber } from '../../../../utils/formatBalance'\n\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\nconst Apr= ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\n  const { stakingToken, isFinished, earningTokenPrice, apr } = pool\n\n  const { apr: earningsPercentageToDisplay } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `https://pancakeswap.finance/swap?outputCurrency=${stakingToken.address}` : 'https://pancakeswap.finance/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={new BigNumber(earningTokenPrice)}\n      apr={apr}\n      linkLabel={`Get ${stakingToken.symbol}`}\n      linkHref={apyModalLink}\n    />,\n  )\n\n  const openRoiModal = (event) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={displayNumber(earningsPercentageToDisplay)}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"#253449cc\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </AprLabelContainer>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from '../../../../../utils/bigNumber'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell = ({ pool }) => {\n  const { isMobile } = useMatchBreakpoints()\n  const { userData } = pool\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"#253449cc\" textAlign=\"left\">\n          APR\n        </Text>\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Balance from '../../../../../components/Balance'\nimport { getBalanceNumber } from '../../../../../utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell = ({ pool }) => {\n  const { stakingToken, totalStaked } = pool\n\n  const totalStakedBalance = useMemo(() => {\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"#253449cc\" textAlign=\"left\">\n          Total staked\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from '../../../../../utils'\nimport { useBlock } from '../../../../../store/slices/block-slice/hooks'\nimport Balance from '../../../../../components/Balance'\nimport { getPoolBlockInfo } from '../../../helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell = ({ pool }) => {\n  const { totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text color=\"#253449\" ml=\"4px\" textTransform=\"lowercase\">\n          Blocks\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text color=\"#253449\">-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"#253449cc\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? 'Ends in' : 'Starts in'}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport BaseCell from './BaseCell'\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell = ({ expanded, isFullLayout }) => {\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? 'Hide' : 'Details'}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid #e9fbfb;\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: auto;\n  }\n}\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { formatNumber, getBalanceNumber } from '../../../../../utils/formatBalance'\nimport Balance from '../../../../../components/Balance'\nimport { BIG_ZERO } from '../../../../../utils/bigNumber'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\nconst HarvestAction= ({\n  sousId,\n  earningToken,\n  userData,\n  userDataLoaded,\n  earningTokenPrice,\n}) => {\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = earnings.gt(0)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      earningsDollarValue={earningTokenDollarBalance}\n      earningToken={earningToken}\n      sousId={sousId}\n    />,\n  )\n\n  const actionTitle = (\n    <>\n      <Text fontSize=\"12px\" bold color=\"#253449\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"#253449cc\" as=\"span\" textTransform=\"uppercase\">\n        Earned\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>Harvest</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"#253449cc\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"#BDC2C4\">0</Heading>\n                <Text fontSize=\"12px\" color=\"#BDC2C4\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n          Harvest\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from '../../../../../components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport Balance from '../../../../../components/Balance'\nimport { getBalanceNumber } from '../../../../../utils/formatBalance'\nimport { BIG_ZERO } from '../../../../../utils/bigNumber'\nimport { useERC20 } from '../../../../../hooks/useContract'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\nconst Staked = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    userData,\n    stakingTokenPrice,\n  } = pool\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const handleApprove = handlePoolApprove\n  const requestedApproval = requestedPoolApproval\n\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const needsApproval = !allowance.gt(0)\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const onStake = () => {\n    onPresentStake()\n  }\n\n  const onUnstake = () => {\n    onPresentUnstake()\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    \"You've already staked the maximum amount you can stake in this pool!\",\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"#253449cc\" as=\"span\" textTransform=\"uppercase\">\n            Start staking\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"#253449cc\" as=\"span\" textTransform=\"uppercase\">\n            Start staking\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"#253449cc\" as=\"span\" textTransform=\"uppercase\">\n            Enable pool\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"primary\">\n            Enable\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"#253449\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"#253449cc\" as=\"span\" textTransform=\"uppercase\">\n            Staked\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"#253449cc\"\n              decimals={2}\n              value={stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"primary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"#fff\" width=\"16px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"primary\" disabled>\n                  <AddIcon color=\"#fff\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"primary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"#fff\" width=\"16px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"#253449\" as=\"span\" textTransform=\"uppercase\">\n          {'Stake'}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"#253449cc\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"primary\"\n          disabled={isFinished}\n        >\n          Stake\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from '../../../../../constants'\nimport { getBscScanLink } from '../../../../../utils'\nimport { useBlock } from '../../../../../store/slices/block-slice/hooks'\nimport BigNumber from 'bignumber.js'\nimport Balance from '../../../../../components/Balance'\nimport { ManualPoolTag } from '../../../../../components/Tags'\nimport { getAddress } from '../../../../../utils/addressHelpers'\nimport { BIG_ZERO } from '../../../../../utils/bigNumber'\nimport { registerToken } from '../../../../../utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from '../../../../../utils/formatBalance'\nimport { getPoolBlockInfo } from '../../../helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: #eefbff;\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    userData,\n  } = pool\n  const poolContractAddress = getAddress(contractAddress)\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address || ''\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const poolStakingTokenBalance = stakedBalance.plus(stakingTokenBalance)\n\n  const getTotalStakedBalance = () => {\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(`Total amount of ${stakingToken.symbol} staked in this pool`, {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = 'You must harvest and compound your earnings from this pool manually.'\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text color=\"#253449\">Max. stake per user:</Text>\n      <Text color=\"#253449\">{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text color=\"#253449\">{hasPoolStarted ? 'Ends in' : 'Starts in'}:</Text>\n        <Flex>\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              Blocks\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text color=\"#253449\">APR:</Text>\n      <Apr\n        pool={pool}\n        showIcon\n        stakedBalance={poolStakingTokenBalance}\n        performanceFee={0}\n      />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text color=\"#253449\" maxWidth={['50px', '100%']}>Total staked:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"#253449cc\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            View Project Site\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${poolContractAddress}`}\n              bold={false}\n            >\n              View Contract\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">Add to Metamask</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        <ManualPoolTag />\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"#253449cc\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        <Text mt=\"4px\" mb=\"16px\" color=\"#253449cc\">\n          {`${'Earn'} SLT ${'Stake'.toLocaleLowerCase()} SLT`}\n        </Text>\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport useDelayedUnmount from '../../../../hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isTablet, isDesktop } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} />\n        {isLargerScreen && <TotalStakedCell pool={pool} />}\n        {isDesktop && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport PoolRow from './PoolRow'\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: #eefbff;\n  > div:not(:last-child) {\n    border-bottom: 2px solid #E9EAEB;\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: #eefbff;\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable = ({ pools, userDataLoaded, account }) => {\n  const tableWrapperEl = useRef(null)\n  const scrollToTop = () => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable id=\"pools-table\" role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            To Top\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useIntersectionObserver from '../../hooks/useIntersectionObserver'\nimport {\n  useFetchPublicPoolsData,\n  usePools,\n  useFetchUserPools,\n} from '../../store/slices/pools-slice/hooks'\nimport { usePollFarmsPublicData } from '../../store/slices/farms-slice/hooks'\nimport { latinise } from '../../utils/latinise'\nimport FlexLayout from '../../components/Layout/Flex'\nimport Page from '../../components/Layout/Page'\nimport PageHeader from '../../components/PageHeader'\nimport { useUserPoolStakedOnly, useUserPoolsViewMode } from '../../store/slices/user-slice/hooks'\nimport { ViewMode } from '../../store/slices/user-slice/actions'\nimport Loading from '../../components/Loading'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { getAprData } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools = () => {\n  const location = useLocation()\n  const { account } = useWeb3React()\n  const { pools, userDataLoaded } = usePools()\n  const [stakedOnly, setStakedOnly] = useUserPoolStakedOnly()\n  const [viewMode, setViewMode] = useUserPoolsViewMode()\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const [searchQuery] = useState('')\n  const [sortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsPublicData()\n  useFetchPublicPoolsData()\n  useFetchUserPools(account)\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n        if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n          return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n        }\n        return poolsCurrentlyVisible\n      })\n    }\n  }, [isIntersecting])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const sortPools = (poolsToSort) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool) => (pool.apr ? getAprData(pool, 0).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool) => {\n            let totalStaked = Number.NaN\n            if (pool.totalStaked?.isFinite()) {\n              totalStaked = +formatUnits(ethers.BigNumber.from(pool.totalStaked.toString()), pool.stakingToken.decimals)\n            }\n            return Number.isFinite(totalStaked) ? totalStaked : 0\n          },\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) => (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"#253449cc\" mb=\"24px\">\n              Royal Jelly\n            </Heading>\n            <Heading scale=\"md\" color=\"#253449\">\n              Stake SLT to earn GEMs!\n            </Heading>\n            <Heading scale=\"md\" color=\"#253449\">\n              You can unstake at any time.\n            </Heading>\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"#ED4B9E\" pb=\"32px\" textAlign=\"center\">\n            These pools are no longer distributing rewards. Please unstake your tokens.\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={observerRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 39px;\n`\n\nconst IsoTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} scale=\"sm\" variant=\"primary\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          Next ISO\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          Past ISOs\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default IsoTabButtons\n","import React from 'react'\nimport { Heading } from '@pancakeswap/uikit'\nimport PageHeader from '../../../components/PageHeader'\n\nconst Hero = () => {\n  return (\n    <PageHeader>\n      <Heading as=\"h1\" scale=\"xxl\" color=\"#253449cc\" mb=\"24px\" className=''>\n        ISO\n      </Heading>\n      <Heading scale=\"lg\" color=\"#253449\">\n        Initial Safe Offering\n      </Heading>\n      <Heading scale=\"lg\" color=\"#253449\">\n        Join huge potential projects with the SafeHaven DeFi approval.\n      </Heading>\n    </PageHeader>\n  )\n}\n\nexport default Hero\n","import React from 'react'\r\nimport { Flex, Text } from '@pancakeswap/uikit'\r\nimport tokens from '../../../../constants/tokens';\r\n\r\nconst IsoCardHeading = ({ tokenLabel, token }) => {\r\n  const getImageUrlFromToken = (token) => {\r\n    const address = token.symbol === 'BNB' ? tokens.wbnb.address : token.address\r\n    return `/images/tokens/${address}.svg`\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n      <img src={getImageUrlFromToken(token)} width={64} height={64} alt=\"\" />\r\n      <Text color=\"#253449\" bold mb=\"4px\" fontSize='24px'>{tokenLabel.split(' ')[0]}</Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default IsoCardHeading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux'\r\nimport { Text, Flex, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { formatNumber } from '../../../../utils/formatBalance'\r\n\r\nconst SectionSide = styled.div`\r\n    padding-right: 16px;\r\n`\r\n\r\nconst IsoCardDetails = ({\r\n    token,\r\n    tokenLabel, \r\n    minHavenToJoin, \r\n    userData, \r\n    offeringAmountPool, \r\n    raisingAmountPool,\r\n    totalCommittedPercent,\r\n    totalLPCommitted,\r\n    maxCommitRatio,\r\n    totalAmountPool,\r\n    getCommittedValue\r\n}) => {\r\n    const stakeData = useSelector(state => state.stake.data)\r\n    const sltPrice = useSelector(state => state.app.priceOfOneSLT)\r\n    const tokenPrice = stakeData.filter(data => data.stakeSymbol === tokenLabel)[0].tokenPriceBusd\r\n    \r\n    return (\r\n        <>\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n                <SectionSide>\r\n                    <Text color=\"#253449\" bold fontSize='17px'>Total committed</Text>\r\n                </SectionSide>\r\n                <Text color='primary' bold fontSize='17px'>\r\n                    {tokenPrice && totalLPCommitted && totalCommittedPercent ? (\r\n                        `$${new Intl.NumberFormat('en-US').format(formatNumber(((new BigNumber(tokenPrice)).times(totalLPCommitted)).toNumber()))} (${totalCommittedPercent}%)`\r\n                    ) : (\r\n                        <Skeleton width={100} />\r\n                    )}\r\n                </Text>\r\n            </Flex>\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n                <SectionSide>\r\n                    <Text color=\"#253449\" bold fontSize='17px'>You will get</Text>\r\n                    <Text color=\"#253449cc\" fontSize='17px'>% of your committed value</Text>\r\n                </SectionSide>\r\n                <Text color='primary' bold fontSize='17px'>\r\n                    {getCommittedValue ? (\r\n                        `${getCommittedValue}%`\r\n                    ) : (\r\n                        <Skeleton width={100} />\r\n                    )}\r\n                </Text>\r\n            </Flex>\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n                <SectionSide>\r\n                    <Text color=\"#253449\" bold fontSize='17px'>You will be returned</Text>\r\n                    <Text color=\"#253449cc\" fontSize='17px'>% of your committed value</Text>\r\n                </SectionSide>\r\n                <Text color='primary' bold fontSize='17px'>\r\n                    {getCommittedValue ? (\r\n                        `${100 - getCommittedValue}%`\r\n                    ) : (\r\n                        <Skeleton width={100} />\r\n                    )}\r\n                </Text>\r\n            </Flex>\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n                <SectionSide>\r\n                    <Text color=\"#253449\" bold fontSize='17px'>Funds to raise</Text>\r\n                </SectionSide>\r\n                <Text color='#253449' fontSize='17px'>\r\n                    {raisingAmountPool ? (\r\n                        `${new Intl.NumberFormat('en-US').format(raisingAmountPool)} ${tokenLabel}`\r\n                    ) : (\r\n                        <Skeleton width={100} />\r\n                    )}\r\n                </Text>\r\n            </Flex>\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n                <SectionSide>\r\n                    <Text color=\"#253449\" bold fontSize='17px'>Min HAVEN</Text>\r\n                    <Text color=\"#253449\" bold fontSize='17px'>owned to join</Text>\r\n                </SectionSide>\r\n                <Text color='#253449' fontSize='17px'>\r\n                    {minHavenToJoin ? (\r\n                        `${new Intl.NumberFormat('en-US').format(minHavenToJoin)} HAVEN`\r\n                    ) : (\r\n                        <Skeleton width={100} />\r\n                    )}\r\n                </Text>\r\n            </Flex>\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n                <SectionSide>\r\n                    <Text color=\"#253449\" bold fontSize='17px'>Your HAVEN</Text>\r\n                </SectionSide>\r\n                <Text color='#253449' fontSize='17px'>\r\n                    {userData.userhavenAmount ? (\r\n                        `${new Intl.NumberFormat('en-US').format(userData.userhavenAmount)}`\r\n                    ) : (\r\n                        <Skeleton width={100} />\r\n                    )}\r\n                </Text>\r\n            </Flex>\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n                <SectionSide>\r\n                    <Text color=\"#253449\" bold fontSize='17px'>Your max</Text>\r\n                    <Text color=\"#253449\" bold fontSize='17px'>{tokenLabel} to join</Text>\r\n                </SectionSide>\r\n                <Text color='primary' bold fontSize='17px'>\r\n                    {maxCommitRatio && offeringAmountPool ? (\r\n                        `${new Intl.NumberFormat('en-US').format(maxCommitRatio.times(offeringAmountPool))}`\r\n                    ) : (\r\n                        <Skeleton width={100} />\r\n                    )}\r\n                </Text>\r\n            </Flex>\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n                <SectionSide>\r\n                    <Text color=\"#253449\" bold fontSize='17px'>Price</Text>\r\n                </SectionSide>\r\n                <Text color='#253449' fontSize='17px'>\r\n                    {sltPrice && tokenPrice ? (\r\n                        `1 SLT = ${(sltPrice / tokenPrice).toFixed(5)} ${tokenLabel}`\r\n                    ) : (\r\n                        <Skeleton width={100} />\r\n                    )}\r\n                </Text>\r\n            </Flex>\r\n            <Flex flexDirection=\"column\" mb=\"12px\">\r\n                <Flex>\r\n                    <Text color=\"#253449\" bold fontSize='17px' mr=\"4px\">{tokenLabel}</Text>\r\n                    <Text color=\"primary\" bold fontSize='17px'>COMMITTED</Text>\r\n                </Flex>\r\n                <Text color=\"primary\" fontSize='28px'>\r\n                    {userData.amount ? (\r\n                        `${new Intl.NumberFormat('en-US').format(userData.amount.div(token.decimals))}`\r\n                    ) : (\r\n                        <Skeleton width={100} />\r\n                    )}\r\n                </Text>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IsoCardDetails","import { useCallback } from 'react'\r\nimport { ethers } from 'ethers'\r\nimport { useCallWithGasPrice } from '../../../hooks/useCallWithGasPrice'\r\nimport { getHavenISOAdress } from '../../../utils/addressHelpers'\r\n\r\nconst useApproveIso = (tokenContract) => {\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const havenISOAddress = getHavenISOAdress()\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await callWithGasPrice(tokenContract, 'approve', [\r\n        havenISOAddress,\r\n        ethers.constants.MaxUint256,\r\n      ])\r\n      const receipt = await tx.wait()\r\n      return receipt.status\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [havenISOAddress, tokenContract, callWithGasPrice])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\nexport default useApproveIso","import { useCallback } from 'react'\r\nimport { useIso } from '../../../hooks/useContract'\r\nimport { safePad } from '../../../utils/calls'\r\n\r\nconst useHarvestIso = (pid) => {\r\n  const isoContract = useIso()\r\n\r\n  const handleHarvest = useCallback(\r\n    async () => {\r\n      const txHash = await safePad(isoContract, pid, \"0\")\r\n      console.info(txHash)\r\n    },\r\n    [isoContract, pid],\r\n  )\r\n\r\n  return { onHarvest: handleHarvest }\r\n}\r\n\r\nexport default useHarvestIso","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { getHavenISOAdress } from '../../../utils/addressHelpers';\r\n\r\n// Retrieve ISO allowance\r\nconst useAllowanceIso = (tokenContract, dependency) => {\r\n  const { account } = useWeb3React()\r\n  const [allowance, setAllowance] = useState(null)\r\n  const havenISOAddress = getHavenISOAdress()\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.allowance(account, havenISOAddress)\r\n        setAllowance(new BigNumber(res._hex))\r\n      } catch (e) {\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, havenISOAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n\r\nexport default useAllowanceIso","import React from 'react'\nimport styled from 'styled-components'\n\nconst Input = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\nimport Input from './Input'\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nconst BalanceInput = ({ max, symbol, onChange, onSelectMax, value }) => {\n  return (\n    <div>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                Max\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{`${max.toLocaleString()} ${symbol} Available`}</StyledMaxText>\n    </div>\n  )\n}\n\nexport default BalanceInput\n","import { useCallback } from 'react'\r\nimport { useIso } from '../../../hooks/useContract'\r\nimport { safePad } from '../../../utils/calls'\r\n\r\nconst useDepositIso = (pid) => {\r\n  const isoContract = useIso()\r\n  const handleDeposit = useCallback(\r\n    async (amount) => {\r\n      const txHash = await safePad(isoContract, pid, amount)\r\n      console.info(txHash)\r\n    },\r\n    [isoContract, pid],\r\n  )\r\n\r\n  return { onDeposit: handleDeposit }\r\n}\r\n\r\nexport default useDepositIso","import React, { useState } from 'react'\nimport { Modal, Button, Flex, LinkExternal, useModal, Text } from '@pancakeswap/uikit'\nimport BalanceInput from '../../../../components/Input/BalanceInput'\nimport useTokenBalance from '../../../../hooks/useTokenBalance'\nimport { getFullDisplayBalance } from '../../../../utils/formatBalance'\nimport useDepositIso from '../../hooks/useDepositIso'\n\nconst ContributeModal = ({ pid, tokenLabel, tokenAddress, userhavenAmount, tokenDecimals, onDismiss }) => {\n  const [value, setValue] = useState('0')\n  const [pendingTx, setPendingTx] = useState(false)\n  const balance = getFullDisplayBalance(useTokenBalance(tokenAddress).balance, tokenDecimals)\n  const { onDeposit } = useDepositIso(pid)\n\n  const [onConfirmModal] = useModal(\n    <Modal>\n      <Text color=\"#253449\">Buy 1,000 Haven to participate in this ISO pool</Text>\n    </Modal>\n)\n\n  const handleDeposit = async () => {\n    try {\n      setPendingTx(true)\n      if (!userhavenAmount || userhavenAmount.toNumber() < 1000) {\n        onConfirmModal()\n        return;\n      }\n      await onDeposit(value)\n      setPendingTx(false)\n      onDismiss()\n    } catch (e) {\n      setPendingTx(false)\n      console.error(e)\n      onDismiss()\n    }\n  }\n\n  const getTokenLink = tokenAddress ? `https://pancakeswap.finance/swap?outputCurrency=${tokenAddress}` : 'https://pancakeswap.finance/swap'\n  return (\n    <Modal title={`Contribute ${tokenLabel}`} onDismiss={onDismiss}>\n      <BalanceInput\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.value)}\n        symbol={tokenLabel}\n        max={balance}\n        onSelectMax={() => setValue(balance.toString())}\n      />\n      <Flex justifyContent=\"space-between\" mb=\"24px\">\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss} mr=\"8px\">\n          Cancel\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx}\n          onClick={handleDeposit}\n        >\n          Confirm\n        </Button>\n      </Flex>\n      <LinkExternal\n        href={getTokenLink}\n        style={{ margin: 'auto' }}\n      >\n        {`Get ${tokenLabel}`}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n","import React, { useState } from 'react'\r\nimport { useModal, Button } from '@pancakeswap/uikit'\r\nimport { useERC20 } from '../../../../hooks/useContract';\r\nimport useApproveIso from '../../hooks/useApproveIso';\r\nimport useHarvestIso from '../../hooks/useHarvestIso';\r\nimport useAllowanceIso from '../../hooks/useAllowanceIso';\r\nimport ContributeModal from './ContributeModal';\r\n\r\nconst IsoCardContribute = ({pid, token, tokenLabel, raisingAmountPool, offeringAmountPool, userData}) => {\r\n    const [pendingTx, setPendingTx] = useState(false)\r\n    const tokenContract = useERC20(token.address)\r\n    const allowance = useAllowanceIso(tokenContract, pendingTx)\r\n    const { onApprove } = useApproveIso(tokenContract)\r\n    const { onHarvest } = useHarvestIso(pid)\r\n\r\n    const isFinished = false\r\n    const [onPresentContributeModal] = useModal(\r\n        <ContributeModal tokenLabel={tokenLabel} tokenAddress={token.address} tokenDecimals={token.decimals} pid={pid} userhavenAmount={userData.userhavenAmount} />\r\n    )\r\n\r\n    const claim = async () => {\r\n        try {\r\n            setPendingTx(true)\r\n            await onHarvest()\r\n            setPendingTx(false)\r\n        } catch (e) {\r\n            setPendingTx(false)\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    if (allowance === null) {\r\n        return null\r\n    }\r\n\r\n    if (parseFloat(allowance) <= 0) {\r\n        return (\r\n            <Button\r\n                width=\"100%\"\r\n                disabled={pendingTx}\r\n                onClick={async () => {\r\n                    try {\r\n                        setPendingTx(true)\r\n                        await onApprove()\r\n                        setPendingTx(false)\r\n                    } catch (e) {\r\n                        setPendingTx(false)\r\n                        console.error(e)\r\n                    }\r\n                }}\r\n                >\r\n                Approve\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                width=\"100%\"\r\n                disabled={pendingTx || userData.claimed}\r\n                onClick={isFinished ? claim : onPresentContributeModal}\r\n            >\r\n                {isFinished ? 'Claim' : 'Contribute'}\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IsoCardContribute\r\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core';\nimport IsoCardHeading from './IsoCardHeading'\nimport IsoCardDetails from './IsoCardDetails'\nimport IsoCardContribute from './IsoCardContribute'\nimport ConnectWalletButton from '../../../../components/ConnectWalletButton'\n\nconst StyledIsoCard = styled(Card)`\n  background: #eefbff;\n  background-repeat: no-repeat;\n  background-size: contain;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 437px;\n  width: 100%;\n  padding: 0;\n`\n\nconst IsoCard = ({ iso }) => {\n  const { account } = useWeb3React()\n  return (\n    <StyledIsoCard>\n      <CardBody>\n        <IsoCardHeading tokenLabel={iso.tokenLabel} token={iso.token} />\n        <IsoCardDetails {...iso} />\n        {!account && <ConnectWalletButton width=\"100%\" />}\n        {account && (\n          <IsoCardContribute\n            pid={iso.pid}\n            token={iso.token}\n            tokenLabel={iso.tokenLabel}\n            raisingAmountPool={iso.raisingAmountPool}\n            offeringAmountPool={iso.offeringAmountPool}\n            userData={iso.userData}\n          />\n        )}\n        <Text color='#253449' mt=\"12px\">5% discount & you save 13% buying fee when launching on Pancakeswap</Text>\n      </CardBody>\n    </StyledIsoCard>\n  )\n}\n\nexport default IsoCard\n","import styled from 'styled-components'\n\nconst IsoCardWrapper = styled.div`\n  border-top: 2px solid #1FC7D4;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nexport default IsoCardWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, BaseLayout, Button } from '@pancakeswap/uikit'\nimport IsoCard from './components/IsoCard'\nimport IsoCards from './components/IsoCards'\n\nconst LaunchIsoCallout = styled(BaseLayout)`\n  border-top: 2px solid #1FC7D4;\n\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding: 32px 0;\n`\n\nconst SubTitle = styled(Text)`\n  font-size: 22px;\n`\n\nconst Lists = styled.ul`\n  padding-left: 20px;\n`\n\nconst List = styled.li`\n  margin-bottom: 8px;\n`\n\nconst Card = styled.div`\n  position: relative;\n  overflow: hidden;\n  background: #eefbff;\n  border-radius: 32px;\n  max-width: 430px;\n  width: 100%;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 20px;\n  padding: 32px;\n  &::after {\n    position: absolute;\n    right: -60px;\n    top: 30px;\n    display: inline-block;\n    transform: rotate(45deg);\n    padding: 6px 80px;\n    background-color: #1FC7D4;\n    color: white;\n  }\n  &.step-1 {\n    &::after {\n        content: \"STEP 1\";\n    }\n  }\n  &.step-2 {\n    &::after {\n        content: \"STEP 2\";\n    }\n  }\n  &.step-3 {\n    &::after {\n        content: \"STEP 3\";\n    }\n  }\n`\n\n\nconst Iso = ({ isos }) => {\n  return (\n    <div>\n      <IsoCards>\n        {isos.map((iso, key) => (\n          <IsoCard key={key} iso={iso} />\n        ))}\n      </IsoCards>\n      <LaunchIsoCallout>\n        <div>\n          <Card className='step-1'>\n            <SubTitle color=\"#253449\" mb={16}>Before Sale:</SubTitle>\n            <Lists>\n              <List>Buy HAVEN and BNB</List>\n              <List>Get HAVEN-BNB LP tokens by adding liquidity</List>\n            </Lists>\n          </Card>\n          <Card className='step-2'>\n            <SubTitle color=\"#253449\" mb={16}>During Sale:</SubTitle>\n            <Lists>\n              <List>While the sale is live, commit above LP tokens to get new feasible token!</List>\n            </Lists>\n          </Card>\n          <Card className='step-3'>\n            <SubTitle color=\"#253449\" mb={16}>After Sale:</SubTitle>\n            <Lists>\n              <List>Claim the tokens you purchased, along with any unspent funds.</List>\n              <List>Done!</List>\n            </Lists>\n            <Button\n              as=\"a\"\n              variant=\"secondary\"\n              href=\"/#/\"\n              external\n            >\n              Read more\n            </Button>\n          </Card>\n          <Card>\n            <Text color=\"#253449\" mb={16}>\n              Launch your project with SafePad and bring your token directly to one of the most active and rapidly growing community on BSC\n            </Text>\n            <Button\n              as=\"a\"\n              href=\"/#/\"\n              external\n            >\n              Apply to launch\n            </Button>\n          </Card>\n        </div>\n      </LaunchIsoCallout>\n    </div>\n  )\n}\n\nexport default Iso\n","import React from 'react'\nimport IsoCard from './components/IsoCard'\nimport IsoCards from './components/IsoCards'\n\nconst PastIso = ({ isos }) => {\n  return (\n    <IsoCards>\n      {isos.map((iso, key) => (\n        <IsoCard key={key} iso={iso} />\n      ))}\n    </IsoCards>\n  )\n}\n\nexport default PastIso\n","import { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport isosConfig from '../../../constants/iso';\r\nimport useRefresh from '../../../hooks/useRefresh';\r\nimport { fetchIsosPublicDataAsync, fetchIsoUserDataAsync } from '.'\r\n\r\nexport const usePollIsosWithUserData = () => {\r\n  const dispatch = useDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const pids = isosConfig.map((isoToFetch) => isoToFetch.pid)\r\n\r\n    dispatch(fetchIsosPublicDataAsync(pids))\r\n\r\n    if (account) {\r\n      dispatch(fetchIsoUserDataAsync({ account, pids }))\r\n    }\r\n  }, [dispatch, slowRefresh, account])\r\n}\r\n\r\nexport const useIsos = () => {\r\n  const isos = useSelector((state) => state.iso)\r\n  const { userDataLoaded } = isos\r\n  return {\r\n    userDataLoaded,\r\n    data: isos.data,\r\n  }\r\n}\r\n\r\nexport const useIsoFromPid = (pid) => {\r\n  const iso = useSelector((state) => state.iso.data.find((f) => f.pid === pid))\r\n  return iso\r\n}\r\n\r\nexport const useIsoUser = (pid) => {\r\n  const { userData } = useIsoFromPid(pid)\r\n  const { referralsCount } = userData\r\n  return {\r\n    referralsCount\r\n  }\r\n}","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport Page from '../../components/Layout/Page'\nimport IsoTabButtons from './components/IsoTabButtons'\nimport Hero from './components/Hero'\nimport CurrentIso from './CurrentIso'\nimport PastIso from './PastIso'\nimport { useIsos, usePollIsosWithUserData } from '../../store/slices/iso-slice/hooks'\n\nconst Isos = () => {\n  const { path } = useRouteMatch()\n  const { data: isosData } = useIsos()\n  usePollIsosWithUserData()\n  return (\n    <>\n      <Hero />\n      <Page>\n        <IsoTabButtons />\n        <Route exact path={`${path}`}>\n          <CurrentIso isos={isosData} />\n        </Route>\n        <Route path={`${path}/history`}>\n          <PastIso isos={[]} />\n        </Route>\n      </Page>\n    </>\n  )\n}\n\nexport default Isos\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledDivider = styled.div`\r\n    background-color: #1FC7D4;\r\n    height: 1px;\r\n    margin: 28px auto;\r\n    width: 100%;\r\n`\r\n\r\nconst Divider = () => {\r\n    return (\r\n        <StyledDivider />\r\n    )\r\n}\r\n\r\nexport default Divider","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Skeleton } from '@pancakeswap/uikit'\r\nimport Divider from './Divider'\r\n\r\nconst StyledCard = styled.div`\r\n    width: 100%;\r\n    background-color: #eefbff;\r\n    padding: 40px;\r\n    border-radius: 32px;\r\n    width: 100%;\r\n    margin-bottom: 24px;\r\n    ${({ theme }) => theme.mediaQueries.md} {\r\n        width: 48%;\r\n        margin-bottom: 0;\r\n    }\r\n`\r\n\r\nconst Title = styled(Text)`\r\n    margin-bottom: 24px;\r\n    font-size: 22px;\r\n    font-weight: bold;\r\n`\r\n\r\nconst Value = styled(Text)`\r\n    font-size: 18px;\r\n    font-weight: 22px;\r\n`\r\n\r\nconst Card = ({title, value}) => {\r\n    return (\r\n        <StyledCard>\r\n            <Title color='#253449'>{title}</Title>\r\n            <Divider />\r\n            <Value color='#253449cc'>\r\n                {value || value === 0 ? value : (<Skeleton width={100} />)}\r\n            </Value>\r\n        </StyledCard>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, { useState, useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport ConnectWalletButton from '../../../components/ConnectWalletButton'\r\nimport Divider from './Divider'\r\n\r\nconst StyledCard = styled.div`\r\n    width: 100%;\r\n    background-color: #eefbff;\r\n    padding: 40px;\r\n    border-radius: 32px;\r\n    width: 100%;\r\n`\r\n\r\nconst Title = styled(Text)`\r\n    margin-bottom: 24px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n`\r\n\r\nconst LinkText = styled(Text)`\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    word-break: break-all;\r\n`\r\n\r\nconst CopyButton = styled.button`\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    outline: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    color: #253449cc;\r\n    background-color: transparent;\r\n`\r\n\r\nconst LinkCard = ({title, link}) => {\r\n    const { account } = useWeb3React()\r\n    const [copySuccess, setCopySuccess] = useState(false);\r\n    const copyTextRef = useRef(null);\r\n\r\n    return (\r\n        <StyledCard>\r\n            {account ? (\r\n                <>\r\n                    <Title color='#253449' textAlign=\"center\">{title}</Title>\r\n                    <Flex justifyContent=\"center\">\r\n                    <CopyToClipboard text={link} onCopy={() => setCopySuccess(true)}>\r\n                        <CopyButton>{copySuccess ? `Copied` : `Copy to clipboard`}</CopyButton>\r\n                    </CopyToClipboard>\r\n                    </Flex>\r\n                    <Divider />\r\n                    <LinkText ref={copyTextRef} color='#253449cc' textAlign=\"center\">{link}</LinkText>\r\n                </>\r\n            ): (\r\n                <Flex justifyContent=\"center\">\r\n                    <ConnectWalletButton />\r\n                </Flex>\r\n            )}\r\n            \r\n        </StyledCard>\r\n    )\r\n}\r\n\r\nexport default LinkCard;","import React from 'react'\r\nimport { Heading } from '@pancakeswap/uikit'\r\nimport PageHeader from '../../../components/PageHeader'\r\n\r\nconst Hero = () => {\r\n    return (\r\n        <PageHeader>\r\n            <Heading as=\"h1\" scale=\"xxl\" color=\"#253449cc\" mb=\"24px\" className=''>\r\n                ISO\r\n            </Heading>\r\n            <Heading scale=\"lg\" color=\"#253449\">\r\n                Referral\r\n            </Heading>\r\n            <Heading scale=\"lg\" color=\"#253449\">\r\n                You can earn 3%(bonus) of your friend's earnings !\r\n            </Heading>\r\n        </PageHeader>\r\n    )\r\n}\r\n\r\nexport default Hero;","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex } from '@pancakeswap/uikit'\r\nimport Card from './components/Card'\r\nimport LinkCard from './components/LinkCard'\r\nimport Page from '../../components/Layout/Page'\r\nimport Hero from './components/Hero'\r\nimport { getHavenLayerReferralContract } from '../../utils/contractHelpers'\r\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\r\nimport sign from 'jwt-encode'\r\n\r\nconst secret = 'secret';\r\n\r\nconst CardBox = styled(Flex)`\r\n    margin-bottom: 24px;\r\n    flex-direction: column;\r\n    ${({ theme }) => theme.mediaQueries.md} {\r\n        flex-direction: row;\r\n    }\r\n`\r\n\r\nconst Referral = () => {\r\n    const { library, account } = useActiveWeb3React()\r\n    const encodeAccount = sign(account, secret);\r\n    const havenLayerReferralContract = getHavenLayerReferralContract(library)\r\n    const [referralsCount, setReferralsCount] = useState(null)\r\n    const [totalReferralCommissions, setTotalReferralCommissions] = useState(null)\r\n    useEffect( async () => {\r\n        if (account) {\r\n            setReferralsCount((await havenLayerReferralContract.referralsCount(account))._hex)\r\n            setTotalReferralCommissions((await havenLayerReferralContract.totalReferralCommissions(account))._hex)\r\n        }\r\n    }, [account])\r\n    return (\r\n        <>\r\n            <Hero />\r\n            <Page>\r\n                <CardBox justifyContent=\"space-between\">\r\n                    <Card \r\n                        title=\"Total Referrals\" \r\n                        value={parseFloat(referralsCount, 10)}\r\n                    />\r\n                    <Card\r\n                        title=\"Total Referral Commissions\"\r\n                        value={parseFloat(totalReferralCommissions, 10)}\r\n                    />\r\n                </CardBox>\r\n                <LinkCard \r\n                    title=\"Your Referral Link\" \r\n                    link={`${window.location.origin}/#/?ref=${encodeAccount}`}\r\n                />\r\n            </Page>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Referral\r\n","import { useEffect } from 'react'\r\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\r\nimport useAuth from './useAuth'\r\n\r\nconst _binanceChainListener = async () =>\r\n  new Promise((resolve) =>\r\n    Object.defineProperty(window, 'BinanceChain', {\r\n      get() {\r\n        return this.bsc\r\n      },\r\n      set(bsc) {\r\n        this.bsc = bsc\r\n\r\n        resolve()\r\n      },\r\n    }),\r\n  )\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey)\r\n\r\n    if (connectorId) {\r\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\r\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\r\n\r\n      // Currently BSC extension doesn't always inject in time.\r\n      // We must check to see if it exists, and if not, wait for it before proceeding.\r\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\r\n        _binanceChainListener().then(() => login(connectorId))\r\n\r\n        return\r\n      }\r\n\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import { useEffect, useCallback, useState } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport useActiveWeb3React from '../hooks/useActiveWeb3React';\nimport { loadAppDetails } from \"../store/slices/app-slice\";\nimport Loading from \"../components/PageLoader\";\nimport ViewBase from \"../components/ViewBase\";\nimport { \n    Stake, \n    Dashboard, \n    NotFound, \n    Farms, \n    SafeFarms, \n    Swap, \n    RedirectToSwap,\n    Pools,\n    Ifos,\n    Referral\n} from \"../views\";\nimport { usePollFarmsWithUserData } from '../store/slices/farms-slice/hooks';\nimport { usePollStakesWithUserData } from '../store/slices/stake-slice/hooks';\nimport { usePollIsosWithUserData } from '../store/slices/iso-slice/hooks'\nimport { useFetchPublicPoolsData } from '../store/slices/pools-slice/hooks'\nimport useEagerConnect from '../hooks/useEagerConnect'\nimport { usePollBlockNumber } from '../store/slices/block-slice/hooks'\nimport \"./style.scss\";\n\nfunction App() {\n    const dispatch = useDispatch();\n    const { library, account } = useActiveWeb3React();\n    usePollBlockNumber()\n    useEagerConnect()\n    usePollFarmsWithUserData()\n    usePollStakesWithUserData()\n    usePollIsosWithUserData()\n    useFetchPublicPoolsData()\n\n    // const isAppLoading = useSelector(state => state.app.loading);\n    const [isAppLoading, setIsAppLoading] = useState(true)\n\n    setTimeout(() => {\n        setIsAppLoading(false)\n    }, [1000])\n\n    async function loadDetails(whichDetails) {\n        if (whichDetails === \"app\") {\n            loadApp(library);\n        }\n    }\n\n    const loadApp = useCallback(\n        loadProvider => {\n            dispatch(loadAppDetails({ provider: loadProvider, account }));\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [account]\n    );\n\n    useEffect(() => {\n        loadDetails(\"app\");\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [account]);\n\n    if (isAppLoading) return <Loading />;\n\n    return (\n        <ViewBase>\n            <Switch>\n                <Route exact path=\"/dashboard\">\n                    <Dashboard />\n                </Route>\n\n                <Route exact path=\"/\">\n                    <Redirect to=\"/dashboard\" />\n                </Route>\n\n                <Route path=\"/pools\">\n                    <Stake />\n                </Route>\n\n                <Route path=\"/safefarms\">\n                    <SafeFarms />\n                </Route>\n\n                <Route path=\"/farms\">\n                    <Farms />\n                </Route>\n\n                <Route path=\"/safepad\">\n                    <Ifos />\n                </Route>\n\n                <Route path=\"/swap\">\n                    <Swap />\n                </Route>\n\n                <Route path=\"/swap/:outputCurrency\">\n                    <RedirectToSwap />\n                </Route>\n\n                <Route path=\"/safestake\">\n                    <Pools />\n                </Route>\n\n                <Route path=\"/referral\">\n                    <Referral />\n                </Route>\n\n                <Route component={NotFound} />\n            </Switch>\n        </ViewBase>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\nfunction Root() {\n    const app = () => (\n        <HashRouter>\n            <App />\n        </HashRouter>\n    );\n\n    return app();\n}\n\nexport default Root;\n","import React, { useState, useEffect, useRef } from 'react'\nimport { simpleRpcProvider } from '../utils/providers'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useAllLists } from './hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from '../../../hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from '../../../constants/lists'\nimport useWeb3Provider from '../../../hooks/useActiveWeb3React'\nimport useFetchListCallback from '../../../hooks/useFetchListCallback'\nimport useInterval from '../../../hooks/useInterval'\nimport useIsWindowVisible from '../../../hooks/useIsWindowVisible'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater() {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback, delay, leading = true) {\n  const savedCallback = useRef()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min, max) {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry(\n  fn,\n  { n, minWait, maxWait },\n) {\n  let completed = false\n  let rejectCancelled\n  const promise = new Promise(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useBlock } from '../block-slice/hooks'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../../hooks/useContract'\nimport useDebounce from '../../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport {\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract,\n  chunk,\n  minBlockNumber,\n) {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners,\n  chainId,\n) {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param currentBlock the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults,\n  listeningKeys,\n  chainId,\n  currentBlock,\n) {\n  if (!chainId || !currentBlock) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater() {\n  const dispatch = useDispatch()\n  const state = useSelector((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const { currentBlock } = useBlock()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef()\n\n  const listeningKeys = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!currentBlock || !chainId || !multicallContract) return\n    const outdatedCallKeys = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n    if (cancellations.current?.blockNumber !== currentBlock) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: currentBlock,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: currentBlock,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: currentBlock,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray(items, maxChunkSize) {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { getBscScanLink } from '../../../utils'\nimport { useBlock } from '../block-slice/hooks'\nimport useToast from '../../../hooks/useToast'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(currentBlock, tx) {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater() {\n  const { library, chainId } = useActiveWeb3React()\n\n  const { currentBlock } = useBlock()\n\n  const dispatch = useDispatch()\n  const state = useSelector((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !currentBlock) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text color=\"#253449\">{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BscScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React, { useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport { ModalProvider } from '@pancakeswap/uikit';\nimport { HelmetProvider } from 'react-helmet-async';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Root from \"./Root\";\nimport store from \"./store/store\";\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { ToastsProvider } from './contexts/ToastsContext'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { getLibrary } from './utils/web3React'\nimport { LanguageProvider } from './contexts/Localization'\nimport { RefreshContextProvider } from './contexts/RefreshContext'\nimport { BlockContextProvider } from './contexts/BlockContext'\nimport { BLOCKED_ADDRESSES } from './constants'\nimport reportWebVitals from './reportWebVitals';\nimport ListsUpdater from './store/slices/lists-slice/updater'\nimport MulticallUpdater from './store/slices/multicall-slice/updater'\nimport TransactionUpdater from './store/slices/transactions-slice/updater'\n\nimport * as themes from './theme/schema.json';\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }) {\n  const { account } = useActiveWeb3React()\n  const blocked = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <Blocklist>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProvider theme={themes.default}>\n              <LanguageProvider>\n                <BlockContextProvider>\n                  <RefreshContextProvider>\n                    <ModalProvider>\n                      <Updaters />\n                      <Root />\n                    </ModalProvider>\n                  </RefreshContextProvider>\n                </BlockContextProvider>\n              </LanguageProvider>\n            </ThemeProvider>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  </Blocklist>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}